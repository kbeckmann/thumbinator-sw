ARM GAS  /tmp/ccryvKQt.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_msp.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB35:
  25              		.file 1 "Src/stm32f0xx_hal_msp.c"
   1:Src/stm32f0xx_hal_msp.c **** /**
   2:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   3:Src/stm32f0xx_hal_msp.c ****   * File Name          : stm32f0xx_hal_msp.c
   4:Src/stm32f0xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization
   5:Src/stm32f0xx_hal_msp.c ****   *                      and de-Initialization codes.
   6:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   7:Src/stm32f0xx_hal_msp.c ****   *
   8:Src/stm32f0xx_hal_msp.c ****   * COPYRIGHT(c) 2016 STMicroelectronics
   9:Src/stm32f0xx_hal_msp.c ****   *
  10:Src/stm32f0xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f0xx_hal_msp.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f0xx_hal_msp.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f0xx_hal_msp.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f0xx_hal_msp.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f0xx_hal_msp.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f0xx_hal_msp.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f0xx_hal_msp.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f0xx_hal_msp.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f0xx_hal_msp.c ****   *      without specific prior written permission.
  20:Src/stm32f0xx_hal_msp.c ****   *
  21:Src/stm32f0xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f0xx_hal_msp.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f0xx_hal_msp.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f0xx_hal_msp.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f0xx_hal_msp.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f0xx_hal_msp.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f0xx_hal_msp.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f0xx_hal_msp.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f0xx_hal_msp.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f0xx_hal_msp.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/stm32f0xx_hal_msp.c ****   *
  32:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
  33:Src/stm32f0xx_hal_msp.c ****   */
ARM GAS  /tmp/ccryvKQt.s 			page 2


  34:Src/stm32f0xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  35:Src/stm32f0xx_hal_msp.c **** #include "stm32f0xx_hal.h"
  36:Src/stm32f0xx_hal_msp.c **** 
  37:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_dac_ch1;
  38:Src/stm32f0xx_hal_msp.c **** 
  39:Src/stm32f0xx_hal_msp.c **** extern void Error_Handler(void);
  40:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  41:Src/stm32f0xx_hal_msp.c **** 
  42:Src/stm32f0xx_hal_msp.c **** /* USER CODE END 0 */
  43:Src/stm32f0xx_hal_msp.c **** /**
  44:Src/stm32f0xx_hal_msp.c ****   * Initializes the Global MSP.
  45:Src/stm32f0xx_hal_msp.c ****   */
  46:Src/stm32f0xx_hal_msp.c **** void HAL_MspInit(void)
  47:Src/stm32f0xx_hal_msp.c **** {
  26              		.loc 1 47 0
  27              		.cfi_startproc
  28 0000 07B5     		push	{r0, r1, r2, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 16
  31              		.cfi_offset 0, -16
  32              		.cfi_offset 1, -12
  33              		.cfi_offset 2, -8
  34              		.cfi_offset 14, -4
  35              	.LBB2:
  48:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  49:Src/stm32f0xx_hal_msp.c **** 
  50:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  51:Src/stm32f0xx_hal_msp.c **** 
  52:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  36              		.loc 1 52 0
  37 0002 0120     		movs	r0, #1
  38 0004 0C4A     		ldr	r2, .L2
  39              	.LBE2:
  53:Src/stm32f0xx_hal_msp.c **** 
  54:Src/stm32f0xx_hal_msp.c ****   /* System interrupt init*/
  55:Src/stm32f0xx_hal_msp.c ****   /* SVC_IRQn interrupt configuration */
  56:Src/stm32f0xx_hal_msp.c ****   HAL_NVIC_SetPriority(SVC_IRQn, 0, 0);
  57:Src/stm32f0xx_hal_msp.c ****   /* PendSV_IRQn interrupt configuration */
  58:Src/stm32f0xx_hal_msp.c ****   HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
  59:Src/stm32f0xx_hal_msp.c ****   /* SysTick_IRQn interrupt configuration */
  60:Src/stm32f0xx_hal_msp.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
  61:Src/stm32f0xx_hal_msp.c **** 
  62:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
  63:Src/stm32f0xx_hal_msp.c **** 
  64:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
  65:Src/stm32f0xx_hal_msp.c **** }
  40              		.loc 1 65 0
  41              		@ sp needed
  42              	.LBB3:
  52:Src/stm32f0xx_hal_msp.c **** 
  43              		.loc 1 52 0
  44 0006 9169     		ldr	r1, [r2, #24]
  45 0008 0143     		orrs	r1, r0
  46 000a 9161     		str	r1, [r2, #24]
  47 000c 9369     		ldr	r3, [r2, #24]
  48              	.LBE3:
  56:Src/stm32f0xx_hal_msp.c ****   /* PendSV_IRQn interrupt configuration */
ARM GAS  /tmp/ccryvKQt.s 			page 3


  49              		.loc 1 56 0
  50 000e 0022     		movs	r2, #0
  51              	.LBB4:
  52:Src/stm32f0xx_hal_msp.c **** 
  52              		.loc 1 52 0
  53 0010 0340     		ands	r3, r0
  54              	.LBE4:
  56:Src/stm32f0xx_hal_msp.c ****   /* PendSV_IRQn interrupt configuration */
  55              		.loc 1 56 0
  56 0012 1100     		movs	r1, r2
  57              	.LBB5:
  52:Src/stm32f0xx_hal_msp.c **** 
  58              		.loc 1 52 0
  59 0014 0193     		str	r3, [sp, #4]
  60              	.LBE5:
  56:Src/stm32f0xx_hal_msp.c ****   /* PendSV_IRQn interrupt configuration */
  61              		.loc 1 56 0
  62 0016 0638     		subs	r0, r0, #6
  63              	.LBB6:
  52:Src/stm32f0xx_hal_msp.c **** 
  64              		.loc 1 52 0
  65 0018 019B     		ldr	r3, [sp, #4]
  66              	.LBE6:
  56:Src/stm32f0xx_hal_msp.c ****   /* PendSV_IRQn interrupt configuration */
  67              		.loc 1 56 0
  68 001a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  69              	.LVL0:
  58:Src/stm32f0xx_hal_msp.c ****   /* SysTick_IRQn interrupt configuration */
  70              		.loc 1 58 0
  71 001e 0022     		movs	r2, #0
  72 0020 0220     		movs	r0, #2
  73 0022 1100     		movs	r1, r2
  74 0024 4042     		rsbs	r0, r0, #0
  75 0026 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  76              	.LVL1:
  60:Src/stm32f0xx_hal_msp.c **** 
  77              		.loc 1 60 0
  78 002a 0022     		movs	r2, #0
  79 002c 0120     		movs	r0, #1
  80 002e 1100     		movs	r1, r2
  81 0030 4042     		rsbs	r0, r0, #0
  82 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  83              	.LVL2:
  84              		.loc 1 65 0
  85 0036 07BD     		pop	{r0, r1, r2, pc}
  86              	.L3:
  87              		.align	2
  88              	.L2:
  89 0038 00100240 		.word	1073876992
  90              		.cfi_endproc
  91              	.LFE35:
  93              		.section	.text.HAL_DAC_MspInit,"ax",%progbits
  94              		.align	1
  95              		.global	HAL_DAC_MspInit
  96              		.syntax unified
  97              		.code	16
  98              		.thumb_func
ARM GAS  /tmp/ccryvKQt.s 			page 4


  99              		.fpu softvfp
 101              	HAL_DAC_MspInit:
 102              	.LFB36:
  66:Src/stm32f0xx_hal_msp.c **** 
  67:Src/stm32f0xx_hal_msp.c **** void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
  68:Src/stm32f0xx_hal_msp.c **** {
 103              		.loc 1 68 0
 104              		.cfi_startproc
 105              	.LVL3:
 106 0000 70B5     		push	{r4, r5, r6, lr}
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 16
 109              		.cfi_offset 4, -16
 110              		.cfi_offset 5, -12
 111              		.cfi_offset 6, -8
 112              		.cfi_offset 14, -4
  69:Src/stm32f0xx_hal_msp.c **** 
  70:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  71:Src/stm32f0xx_hal_msp.c ****   if(hdac->Instance==DAC)
 113              		.loc 1 71 0
 114 0002 1A4B     		ldr	r3, .L10
 115 0004 0268     		ldr	r2, [r0]
  68:Src/stm32f0xx_hal_msp.c **** 
 116              		.loc 1 68 0
 117 0006 86B0     		sub	sp, sp, #24
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 40
  68:Src/stm32f0xx_hal_msp.c **** 
 120              		.loc 1 68 0
 121 0008 0600     		movs	r6, r0
 122              		.loc 1 71 0
 123 000a 9A42     		cmp	r2, r3
 124 000c 2CD1     		bne	.L4
 125              	.LBB7:
  72:Src/stm32f0xx_hal_msp.c ****   {
  73:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspInit 0 */
  74:Src/stm32f0xx_hal_msp.c **** 
  75:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END DAC_MspInit 0 */
  76:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
  77:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_DAC1_CLK_ENABLE();
 126              		.loc 1 77 0
 127 000e 8020     		movs	r0, #128
 128              	.LVL4:
 129 0010 174A     		ldr	r2, .L10+4
 130 0012 8005     		lsls	r0, r0, #22
 131 0014 D169     		ldr	r1, [r2, #28]
 132              	.LBE7:
  78:Src/stm32f0xx_hal_msp.c **** 
  79:Src/stm32f0xx_hal_msp.c ****     /**DAC GPIO Configuration
  80:Src/stm32f0xx_hal_msp.c ****     PA4     ------> DAC_OUT1
  81:Src/stm32f0xx_hal_msp.c ****     PA5     ------> DAC_OUT2
  82:Src/stm32f0xx_hal_msp.c ****     */
  83:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
  84:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
  85:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 133              		.loc 1 85 0
 134 0016 0025     		movs	r5, #0
ARM GAS  /tmp/ccryvKQt.s 			page 5


 135              	.LBB8:
  77:Src/stm32f0xx_hal_msp.c **** 
 136              		.loc 1 77 0
 137 0018 0143     		orrs	r1, r0
 138 001a D161     		str	r1, [r2, #28]
 139 001c D369     		ldr	r3, [r2, #28]
 140              	.LBE8:
  86:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 141              		.loc 1 86 0
 142 001e 01A9     		add	r1, sp, #4
 143              	.LBB9:
  77:Src/stm32f0xx_hal_msp.c **** 
 144              		.loc 1 77 0
 145 0020 0340     		ands	r3, r0
 146 0022 0093     		str	r3, [sp]
 147 0024 009B     		ldr	r3, [sp]
 148              	.LBE9:
 149              		.loc 1 86 0
 150 0026 9020     		movs	r0, #144
  83:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 151              		.loc 1 83 0
 152 0028 3023     		movs	r3, #48
 153              		.loc 1 86 0
 154 002a C005     		lsls	r0, r0, #23
  83:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 155              		.loc 1 83 0
 156 002c 0193     		str	r3, [sp, #4]
  84:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 157              		.loc 1 84 0
 158 002e 2D3B     		subs	r3, r3, #45
 159 0030 0293     		str	r3, [sp, #8]
  85:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 160              		.loc 1 85 0
 161 0032 0395     		str	r5, [sp, #12]
 162              		.loc 1 86 0
 163 0034 FFF7FEFF 		bl	HAL_GPIO_Init
 164              	.LVL5:
  87:Src/stm32f0xx_hal_msp.c **** 
  88:Src/stm32f0xx_hal_msp.c ****     /* Peripheral DMA init*/
  89:Src/stm32f0xx_hal_msp.c **** 
  90:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Instance = DMA1_Channel3;
 165              		.loc 1 90 0
 166 0038 0E4C     		ldr	r4, .L10+8
 167 003a 0F4B     		ldr	r3, .L10+12
  91:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
  92:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
  93:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.MemInc = DMA_MINC_ENABLE;
  94:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
  95:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
  96:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.Mode = DMA_CIRCULAR;
  97:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.Priority = DMA_PRIORITY_HIGH;
  98:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_dac_ch1) != HAL_OK)
 168              		.loc 1 98 0
 169 003c 2000     		movs	r0, r4
  90:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 170              		.loc 1 90 0
 171 003e 2360     		str	r3, [r4]
ARM GAS  /tmp/ccryvKQt.s 			page 6


  91:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 172              		.loc 1 91 0
 173 0040 1023     		movs	r3, #16
 174 0042 6360     		str	r3, [r4, #4]
  93:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 175              		.loc 1 93 0
 176 0044 7033     		adds	r3, r3, #112
 177 0046 E360     		str	r3, [r4, #12]
  96:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 178              		.loc 1 96 0
 179 0048 603B     		subs	r3, r3, #96
 180 004a A361     		str	r3, [r4, #24]
  97:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_dac_ch1) != HAL_OK)
 181              		.loc 1 97 0
 182 004c 8023     		movs	r3, #128
 183 004e 9B01     		lsls	r3, r3, #6
  92:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.MemInc = DMA_MINC_ENABLE;
 184              		.loc 1 92 0
 185 0050 A560     		str	r5, [r4, #8]
  94:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 186              		.loc 1 94 0
 187 0052 2561     		str	r5, [r4, #16]
  95:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.Mode = DMA_CIRCULAR;
 188              		.loc 1 95 0
 189 0054 6561     		str	r5, [r4, #20]
  97:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_dac_ch1) != HAL_OK)
 190              		.loc 1 97 0
 191 0056 E361     		str	r3, [r4, #28]
 192              		.loc 1 98 0
 193 0058 FFF7FEFF 		bl	HAL_DMA_Init
 194              	.LVL6:
 195 005c A842     		cmp	r0, r5
 196 005e 01D0     		beq	.L6
  99:Src/stm32f0xx_hal_msp.c ****     {
 100:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 197              		.loc 1 100 0
 198 0060 FFF7FEFF 		bl	Error_Handler
 199              	.LVL7:
 200              	.L6:
 101:Src/stm32f0xx_hal_msp.c ****     }
 102:Src/stm32f0xx_hal_msp.c **** 
 103:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(hdac,DMA_Handle1,hdma_dac_ch1);
 201              		.loc 1 103 0
 202 0064 B460     		str	r4, [r6, #8]
 203 0066 6662     		str	r6, [r4, #36]
 204              	.L4:
 104:Src/stm32f0xx_hal_msp.c **** 
 105:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspInit 1 */
 106:Src/stm32f0xx_hal_msp.c **** 
 107:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END DAC_MspInit 1 */
 108:Src/stm32f0xx_hal_msp.c ****   }
 109:Src/stm32f0xx_hal_msp.c **** 
 110:Src/stm32f0xx_hal_msp.c **** }
 205              		.loc 1 110 0
 206 0068 06B0     		add	sp, sp, #24
 207              		@ sp needed
 208              	.LVL8:
ARM GAS  /tmp/ccryvKQt.s 			page 7


 209 006a 70BD     		pop	{r4, r5, r6, pc}
 210              	.L11:
 211              		.align	2
 212              	.L10:
 213 006c 00740040 		.word	1073771520
 214 0070 00100240 		.word	1073876992
 215 0074 00000000 		.word	hdma_dac_ch1
 216 0078 30000240 		.word	1073872944
 217              		.cfi_endproc
 218              	.LFE36:
 220              		.section	.text.HAL_DAC_MspDeInit,"ax",%progbits
 221              		.align	1
 222              		.global	HAL_DAC_MspDeInit
 223              		.syntax unified
 224              		.code	16
 225              		.thumb_func
 226              		.fpu softvfp
 228              	HAL_DAC_MspDeInit:
 229              	.LFB37:
 111:Src/stm32f0xx_hal_msp.c **** 
 112:Src/stm32f0xx_hal_msp.c **** void HAL_DAC_MspDeInit(DAC_HandleTypeDef* hdac)
 113:Src/stm32f0xx_hal_msp.c **** {
 230              		.loc 1 113 0
 231              		.cfi_startproc
 232              	.LVL9:
 114:Src/stm32f0xx_hal_msp.c **** 
 115:Src/stm32f0xx_hal_msp.c ****   if(hdac->Instance==DAC)
 233              		.loc 1 115 0
 234 0000 094B     		ldr	r3, .L14
 235 0002 0268     		ldr	r2, [r0]
 113:Src/stm32f0xx_hal_msp.c **** 
 236              		.loc 1 113 0
 237 0004 10B5     		push	{r4, lr}
 238              	.LCFI3:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 4, -8
 241              		.cfi_offset 14, -4
 113:Src/stm32f0xx_hal_msp.c **** 
 242              		.loc 1 113 0
 243 0006 0400     		movs	r4, r0
 244              		.loc 1 115 0
 245 0008 9A42     		cmp	r2, r3
 246 000a 0CD1     		bne	.L12
 116:Src/stm32f0xx_hal_msp.c ****   {
 117:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspDeInit 0 */
 118:Src/stm32f0xx_hal_msp.c **** 
 119:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END DAC_MspDeInit 0 */
 120:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 121:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_DAC1_CLK_DISABLE();
 122:Src/stm32f0xx_hal_msp.c **** 
 123:Src/stm32f0xx_hal_msp.c ****     /**DAC GPIO Configuration
 124:Src/stm32f0xx_hal_msp.c ****     PA4     ------> DAC_OUT1
 125:Src/stm32f0xx_hal_msp.c ****     PA5     ------> DAC_OUT2
 126:Src/stm32f0xx_hal_msp.c ****     */
 127:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_4|GPIO_PIN_5);
 247              		.loc 1 127 0
 248 000c 9020     		movs	r0, #144
ARM GAS  /tmp/ccryvKQt.s 			page 8


 249              	.LVL10:
 121:Src/stm32f0xx_hal_msp.c **** 
 250              		.loc 1 121 0
 251 000e 074A     		ldr	r2, .L14+4
 252 0010 0749     		ldr	r1, .L14+8
 253 0012 D369     		ldr	r3, [r2, #28]
 254              		.loc 1 127 0
 255 0014 C005     		lsls	r0, r0, #23
 121:Src/stm32f0xx_hal_msp.c **** 
 256              		.loc 1 121 0
 257 0016 0B40     		ands	r3, r1
 258 0018 D361     		str	r3, [r2, #28]
 259              		.loc 1 127 0
 260 001a 3021     		movs	r1, #48
 261 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 262              	.LVL11:
 128:Src/stm32f0xx_hal_msp.c **** 
 129:Src/stm32f0xx_hal_msp.c ****     /* Peripheral DMA DeInit*/
 130:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(hdac->DMA_Handle1);
 263              		.loc 1 130 0
 264 0020 A068     		ldr	r0, [r4, #8]
 265 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 266              	.LVL12:
 267              	.L12:
 131:Src/stm32f0xx_hal_msp.c ****   }
 132:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspDeInit 1 */
 133:Src/stm32f0xx_hal_msp.c **** 
 134:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END DAC_MspDeInit 1 */
 135:Src/stm32f0xx_hal_msp.c **** 
 136:Src/stm32f0xx_hal_msp.c **** }
 268              		.loc 1 136 0
 269              		@ sp needed
 270              	.LVL13:
 271 0026 10BD     		pop	{r4, pc}
 272              	.L15:
 273              		.align	2
 274              	.L14:
 275 0028 00740040 		.word	1073771520
 276 002c 00100240 		.word	1073876992
 277 0030 FFFFFFDF 		.word	-536870913
 278              		.cfi_endproc
 279              	.LFE37:
 281              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 282              		.align	1
 283              		.global	HAL_TIM_Base_MspInit
 284              		.syntax unified
 285              		.code	16
 286              		.thumb_func
 287              		.fpu softvfp
 289              	HAL_TIM_Base_MspInit:
 290              	.LFB38:
 137:Src/stm32f0xx_hal_msp.c **** 
 138:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
 139:Src/stm32f0xx_hal_msp.c **** {
 291              		.loc 1 139 0
 292              		.cfi_startproc
 293              	.LVL14:
ARM GAS  /tmp/ccryvKQt.s 			page 9


 140:Src/stm32f0xx_hal_msp.c **** 
 141:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM6)
 294              		.loc 1 141 0
 295 0000 074B     		ldr	r3, .L18
 296 0002 0268     		ldr	r2, [r0]
 139:Src/stm32f0xx_hal_msp.c **** 
 297              		.loc 1 139 0
 298 0004 82B0     		sub	sp, sp, #8
 299              	.LCFI4:
 300              		.cfi_def_cfa_offset 8
 301              		.loc 1 141 0
 302 0006 9A42     		cmp	r2, r3
 303 0008 08D1     		bne	.L16
 304              	.LBB10:
 142:Src/stm32f0xx_hal_msp.c ****   {
 143:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspInit 0 */
 144:Src/stm32f0xx_hal_msp.c **** 
 145:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM6_MspInit 0 */
 146:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 147:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM6_CLK_ENABLE();
 305              		.loc 1 147 0
 306 000a 1020     		movs	r0, #16
 307              	.LVL15:
 308 000c 054A     		ldr	r2, .L18+4
 309 000e D169     		ldr	r1, [r2, #28]
 310 0010 0143     		orrs	r1, r0
 311 0012 D161     		str	r1, [r2, #28]
 312 0014 D369     		ldr	r3, [r2, #28]
 313 0016 0340     		ands	r3, r0
 314 0018 0193     		str	r3, [sp, #4]
 315 001a 019B     		ldr	r3, [sp, #4]
 316              	.L16:
 317              	.LBE10:
 148:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspInit 1 */
 149:Src/stm32f0xx_hal_msp.c **** 
 150:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM6_MspInit 1 */
 151:Src/stm32f0xx_hal_msp.c ****   }
 152:Src/stm32f0xx_hal_msp.c **** 
 153:Src/stm32f0xx_hal_msp.c **** }
 318              		.loc 1 153 0
 319 001c 02B0     		add	sp, sp, #8
 320              		@ sp needed
 321 001e 7047     		bx	lr
 322              	.L19:
 323              		.align	2
 324              	.L18:
 325 0020 00100040 		.word	1073745920
 326 0024 00100240 		.word	1073876992
 327              		.cfi_endproc
 328              	.LFE38:
 330              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 331              		.align	1
 332              		.global	HAL_TIM_Base_MspDeInit
 333              		.syntax unified
 334              		.code	16
 335              		.thumb_func
 336              		.fpu softvfp
ARM GAS  /tmp/ccryvKQt.s 			page 10


 338              	HAL_TIM_Base_MspDeInit:
 339              	.LFB39:
 154:Src/stm32f0xx_hal_msp.c **** 
 155:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base)
 156:Src/stm32f0xx_hal_msp.c **** {
 340              		.loc 1 156 0
 341              		.cfi_startproc
 342              	.LVL16:
 157:Src/stm32f0xx_hal_msp.c **** 
 158:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM6)
 343              		.loc 1 158 0
 344 0000 044B     		ldr	r3, .L22
 345 0002 0268     		ldr	r2, [r0]
 346 0004 9A42     		cmp	r2, r3
 347 0006 04D1     		bne	.L20
 159:Src/stm32f0xx_hal_msp.c ****   {
 160:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspDeInit 0 */
 161:Src/stm32f0xx_hal_msp.c **** 
 162:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM6_MspDeInit 0 */
 163:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 164:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM6_CLK_DISABLE();
 348              		.loc 1 164 0
 349 0008 1021     		movs	r1, #16
 350 000a 034A     		ldr	r2, .L22+4
 351 000c D369     		ldr	r3, [r2, #28]
 352 000e 8B43     		bics	r3, r1
 353 0010 D361     		str	r3, [r2, #28]
 354              	.L20:
 165:Src/stm32f0xx_hal_msp.c ****   }
 166:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspDeInit 1 */
 167:Src/stm32f0xx_hal_msp.c **** 
 168:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM6_MspDeInit 1 */
 169:Src/stm32f0xx_hal_msp.c **** 
 170:Src/stm32f0xx_hal_msp.c **** }
 355              		.loc 1 170 0
 356              		@ sp needed
 357 0012 7047     		bx	lr
 358              	.L23:
 359              		.align	2
 360              	.L22:
 361 0014 00100040 		.word	1073745920
 362 0018 00100240 		.word	1073876992
 363              		.cfi_endproc
 364              	.LFE39:
 366              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 367              		.align	1
 368              		.global	HAL_UART_MspInit
 369              		.syntax unified
 370              		.code	16
 371              		.thumb_func
 372              		.fpu softvfp
 374              	HAL_UART_MspInit:
 375              	.LFB40:
 171:Src/stm32f0xx_hal_msp.c **** 
 172:Src/stm32f0xx_hal_msp.c **** void HAL_UART_MspInit(UART_HandleTypeDef* huart)
 173:Src/stm32f0xx_hal_msp.c **** {
 376              		.loc 1 173 0
ARM GAS  /tmp/ccryvKQt.s 			page 11


 377              		.cfi_startproc
 378              	.LVL17:
 379 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 380              	.LCFI5:
 381              		.cfi_def_cfa_offset 32
 382              		.cfi_offset 0, -32
 383              		.cfi_offset 1, -28
 384              		.cfi_offset 2, -24
 385              		.cfi_offset 3, -20
 386              		.cfi_offset 4, -16
 387              		.cfi_offset 5, -12
 388              		.cfi_offset 6, -8
 389              		.cfi_offset 14, -4
 174:Src/stm32f0xx_hal_msp.c **** 
 175:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 176:Src/stm32f0xx_hal_msp.c ****   if(huart->Instance==USART1)
 390              		.loc 1 176 0
 391 0002 0F4B     		ldr	r3, .L26
 392 0004 0268     		ldr	r2, [r0]
 393 0006 9A42     		cmp	r2, r3
 394 0008 18D1     		bne	.L24
 395              	.LBB11:
 177:Src/stm32f0xx_hal_msp.c ****   {
 178:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
 179:Src/stm32f0xx_hal_msp.c **** 
 180:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 0 */
 181:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 182:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 396              		.loc 1 182 0
 397 000a 8020     		movs	r0, #128
 398              	.LVL18:
 399 000c 0D4A     		ldr	r2, .L26+4
 400 000e C001     		lsls	r0, r0, #7
 401 0010 9169     		ldr	r1, [r2, #24]
 402 0012 0143     		orrs	r1, r0
 403 0014 9161     		str	r1, [r2, #24]
 404 0016 9369     		ldr	r3, [r2, #24]
 405              	.LBE11:
 183:Src/stm32f0xx_hal_msp.c **** 
 184:Src/stm32f0xx_hal_msp.c ****     /**USART1 GPIO Configuration
 185:Src/stm32f0xx_hal_msp.c ****     PA9     ------> USART1_TX
 186:Src/stm32f0xx_hal_msp.c ****     PA10     ------> USART1_RX
 187:Src/stm32f0xx_hal_msp.c ****     */
 188:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 189:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 190:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 191:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 406              		.loc 1 191 0
 407 0018 0322     		movs	r2, #3
 408              	.LBB12:
 182:Src/stm32f0xx_hal_msp.c **** 
 409              		.loc 1 182 0
 410 001a 0340     		ands	r3, r0
 411 001c 0093     		str	r3, [sp]
 412 001e 009B     		ldr	r3, [sp]
 413              	.LBE12:
 188:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccryvKQt.s 			page 12


 414              		.loc 1 188 0
 415 0020 C023     		movs	r3, #192
 416 0022 DB00     		lsls	r3, r3, #3
 417 0024 0193     		str	r3, [sp, #4]
 192:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 193:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 418              		.loc 1 193 0
 419 0026 9020     		movs	r0, #144
 189:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 420              		.loc 1 189 0
 421 0028 0223     		movs	r3, #2
 422              		.loc 1 193 0
 423 002a 01A9     		add	r1, sp, #4
 189:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 424              		.loc 1 189 0
 425 002c 0293     		str	r3, [sp, #8]
 426              		.loc 1 193 0
 427 002e C005     		lsls	r0, r0, #23
 190:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 428              		.loc 1 190 0
 429 0030 013B     		subs	r3, r3, #1
 430 0032 0393     		str	r3, [sp, #12]
 191:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 431              		.loc 1 191 0
 432 0034 0492     		str	r2, [sp, #16]
 192:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 433              		.loc 1 192 0
 434 0036 0593     		str	r3, [sp, #20]
 435              		.loc 1 193 0
 436 0038 FFF7FEFF 		bl	HAL_GPIO_Init
 437              	.LVL19:
 438              	.L24:
 194:Src/stm32f0xx_hal_msp.c **** 
 195:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 196:Src/stm32f0xx_hal_msp.c **** 
 197:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 1 */
 198:Src/stm32f0xx_hal_msp.c ****   }
 199:Src/stm32f0xx_hal_msp.c **** 
 200:Src/stm32f0xx_hal_msp.c **** }
 439              		.loc 1 200 0
 440 003c 07B0     		add	sp, sp, #28
 441              		@ sp needed
 442 003e 00BD     		pop	{pc}
 443              	.L27:
 444              		.align	2
 445              	.L26:
 446 0040 00380140 		.word	1073821696
 447 0044 00100240 		.word	1073876992
 448              		.cfi_endproc
 449              	.LFE40:
 451              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 452              		.align	1
 453              		.global	HAL_UART_MspDeInit
 454              		.syntax unified
 455              		.code	16
 456              		.thumb_func
 457              		.fpu softvfp
ARM GAS  /tmp/ccryvKQt.s 			page 13


 459              	HAL_UART_MspDeInit:
 460              	.LFB41:
 201:Src/stm32f0xx_hal_msp.c **** 
 202:Src/stm32f0xx_hal_msp.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
 203:Src/stm32f0xx_hal_msp.c **** {
 461              		.loc 1 203 0
 462              		.cfi_startproc
 463              	.LVL20:
 204:Src/stm32f0xx_hal_msp.c **** 
 205:Src/stm32f0xx_hal_msp.c ****   if(huart->Instance==USART1)
 464              		.loc 1 205 0
 465 0000 084B     		ldr	r3, .L30
 466 0002 0268     		ldr	r2, [r0]
 203:Src/stm32f0xx_hal_msp.c **** 
 467              		.loc 1 203 0
 468 0004 10B5     		push	{r4, lr}
 469              	.LCFI6:
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 4, -8
 472              		.cfi_offset 14, -4
 473              		.loc 1 205 0
 474 0006 9A42     		cmp	r2, r3
 475 0008 0AD1     		bne	.L28
 206:Src/stm32f0xx_hal_msp.c ****   {
 207:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 208:Src/stm32f0xx_hal_msp.c **** 
 209:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 0 */
 210:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 211:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 476              		.loc 1 211 0
 477 000a 074A     		ldr	r2, .L30+4
 478 000c 0749     		ldr	r1, .L30+8
 479 000e 9369     		ldr	r3, [r2, #24]
 212:Src/stm32f0xx_hal_msp.c **** 
 213:Src/stm32f0xx_hal_msp.c ****     /**USART1 GPIO Configuration
 214:Src/stm32f0xx_hal_msp.c ****     PA9     ------> USART1_TX
 215:Src/stm32f0xx_hal_msp.c ****     PA10     ------> USART1_RX
 216:Src/stm32f0xx_hal_msp.c ****     */
 217:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 480              		.loc 1 217 0
 481 0010 9020     		movs	r0, #144
 482              	.LVL21:
 211:Src/stm32f0xx_hal_msp.c **** 
 483              		.loc 1 211 0
 484 0012 0B40     		ands	r3, r1
 485              		.loc 1 217 0
 486 0014 C021     		movs	r1, #192
 211:Src/stm32f0xx_hal_msp.c **** 
 487              		.loc 1 211 0
 488 0016 9361     		str	r3, [r2, #24]
 489              		.loc 1 217 0
 490 0018 C900     		lsls	r1, r1, #3
 491 001a C005     		lsls	r0, r0, #23
 492 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 493              	.LVL22:
 494              	.L28:
 218:Src/stm32f0xx_hal_msp.c **** 
ARM GAS  /tmp/ccryvKQt.s 			page 14


 219:Src/stm32f0xx_hal_msp.c ****   }
 220:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 221:Src/stm32f0xx_hal_msp.c **** 
 222:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 1 */
 223:Src/stm32f0xx_hal_msp.c **** 
 224:Src/stm32f0xx_hal_msp.c **** }
 495              		.loc 1 224 0
 496              		@ sp needed
 497 0020 10BD     		pop	{r4, pc}
 498              	.L31:
 499 0022 C046     		.align	2
 500              	.L30:
 501 0024 00380140 		.word	1073821696
 502 0028 00100240 		.word	1073876992
 503 002c FFBFFFFF 		.word	-16385
 504              		.cfi_endproc
 505              	.LFE41:
 507              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
 508              		.align	1
 509              		.global	HAL_PCD_MspInit
 510              		.syntax unified
 511              		.code	16
 512              		.thumb_func
 513              		.fpu softvfp
 515              	HAL_PCD_MspInit:
 516              	.LFB42:
 225:Src/stm32f0xx_hal_msp.c **** 
 226:Src/stm32f0xx_hal_msp.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
 227:Src/stm32f0xx_hal_msp.c **** {
 517              		.loc 1 227 0
 518              		.cfi_startproc
 519              	.LVL23:
 228:Src/stm32f0xx_hal_msp.c **** 
 229:Src/stm32f0xx_hal_msp.c ****   if(hpcd->Instance==USB)
 520              		.loc 1 229 0
 521 0000 084B     		ldr	r3, .L34
 522 0002 0268     		ldr	r2, [r0]
 227:Src/stm32f0xx_hal_msp.c **** 
 523              		.loc 1 227 0
 524 0004 82B0     		sub	sp, sp, #8
 525              	.LCFI7:
 526              		.cfi_def_cfa_offset 8
 527              		.loc 1 229 0
 528 0006 9A42     		cmp	r2, r3
 529 0008 09D1     		bne	.L32
 530              	.LBB13:
 230:Src/stm32f0xx_hal_msp.c ****   {
 231:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspInit 0 */
 232:Src/stm32f0xx_hal_msp.c **** 
 233:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspInit 0 */
 234:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 235:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USB_CLK_ENABLE();
 531              		.loc 1 235 0
 532 000a 8020     		movs	r0, #128
 533              	.LVL24:
 534 000c 064A     		ldr	r2, .L34+4
 535 000e 0004     		lsls	r0, r0, #16
ARM GAS  /tmp/ccryvKQt.s 			page 15


 536 0010 D169     		ldr	r1, [r2, #28]
 537 0012 0143     		orrs	r1, r0
 538 0014 D161     		str	r1, [r2, #28]
 539 0016 D369     		ldr	r3, [r2, #28]
 540 0018 0340     		ands	r3, r0
 541 001a 0193     		str	r3, [sp, #4]
 542 001c 019B     		ldr	r3, [sp, #4]
 543              	.L32:
 544              	.LBE13:
 236:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspInit 1 */
 237:Src/stm32f0xx_hal_msp.c **** 
 238:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspInit 1 */
 239:Src/stm32f0xx_hal_msp.c ****   }
 240:Src/stm32f0xx_hal_msp.c **** 
 241:Src/stm32f0xx_hal_msp.c **** }
 545              		.loc 1 241 0
 546 001e 02B0     		add	sp, sp, #8
 547              		@ sp needed
 548 0020 7047     		bx	lr
 549              	.L35:
 550 0022 C046     		.align	2
 551              	.L34:
 552 0024 005C0040 		.word	1073765376
 553 0028 00100240 		.word	1073876992
 554              		.cfi_endproc
 555              	.LFE42:
 557              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
 558              		.align	1
 559              		.global	HAL_PCD_MspDeInit
 560              		.syntax unified
 561              		.code	16
 562              		.thumb_func
 563              		.fpu softvfp
 565              	HAL_PCD_MspDeInit:
 566              	.LFB43:
 242:Src/stm32f0xx_hal_msp.c **** 
 243:Src/stm32f0xx_hal_msp.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef* hpcd)
 244:Src/stm32f0xx_hal_msp.c **** {
 567              		.loc 1 244 0
 568              		.cfi_startproc
 569              	.LVL25:
 245:Src/stm32f0xx_hal_msp.c **** 
 246:Src/stm32f0xx_hal_msp.c ****   if(hpcd->Instance==USB)
 570              		.loc 1 246 0
 571 0000 044B     		ldr	r3, .L38
 572 0002 0268     		ldr	r2, [r0]
 573 0004 9A42     		cmp	r2, r3
 574 0006 04D1     		bne	.L36
 247:Src/stm32f0xx_hal_msp.c ****   {
 248:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspDeInit 0 */
 249:Src/stm32f0xx_hal_msp.c **** 
 250:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspDeInit 0 */
 251:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 252:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USB_CLK_DISABLE();
 575              		.loc 1 252 0
 576 0008 034A     		ldr	r2, .L38+4
 577 000a 0449     		ldr	r1, .L38+8
ARM GAS  /tmp/ccryvKQt.s 			page 16


 578 000c D369     		ldr	r3, [r2, #28]
 579 000e 0B40     		ands	r3, r1
 580 0010 D361     		str	r3, [r2, #28]
 581              	.L36:
 253:Src/stm32f0xx_hal_msp.c ****   }
 254:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspDeInit 1 */
 255:Src/stm32f0xx_hal_msp.c **** 
 256:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspDeInit 1 */
 257:Src/stm32f0xx_hal_msp.c **** 
 258:Src/stm32f0xx_hal_msp.c **** }
 582              		.loc 1 258 0
 583              		@ sp needed
 584 0012 7047     		bx	lr
 585              	.L39:
 586              		.align	2
 587              	.L38:
 588 0014 005C0040 		.word	1073765376
 589 0018 00100240 		.word	1073876992
 590 001c FFFF7FFF 		.word	-8388609
 591              		.cfi_endproc
 592              	.LFE43:
 594              		.text
 595              	.Letext0:
 596              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 597              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 598              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 599              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 600              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 601              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 602              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 603              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 604              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 605              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 606              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 607              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dac.h"
 608              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd.h"
 609              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 610              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 611              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccryvKQt.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_msp.c
     /tmp/ccryvKQt.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccryvKQt.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccryvKQt.s:89     .text.HAL_MspInit:0000000000000038 $d
     /tmp/ccryvKQt.s:94     .text.HAL_DAC_MspInit:0000000000000000 $t
     /tmp/ccryvKQt.s:101    .text.HAL_DAC_MspInit:0000000000000000 HAL_DAC_MspInit
     /tmp/ccryvKQt.s:213    .text.HAL_DAC_MspInit:000000000000006c $d
     /tmp/ccryvKQt.s:221    .text.HAL_DAC_MspDeInit:0000000000000000 $t
     /tmp/ccryvKQt.s:228    .text.HAL_DAC_MspDeInit:0000000000000000 HAL_DAC_MspDeInit
     /tmp/ccryvKQt.s:275    .text.HAL_DAC_MspDeInit:0000000000000028 $d
     /tmp/ccryvKQt.s:282    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccryvKQt.s:289    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccryvKQt.s:325    .text.HAL_TIM_Base_MspInit:0000000000000020 $d
     /tmp/ccryvKQt.s:331    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccryvKQt.s:338    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccryvKQt.s:361    .text.HAL_TIM_Base_MspDeInit:0000000000000014 $d
     /tmp/ccryvKQt.s:367    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccryvKQt.s:374    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccryvKQt.s:446    .text.HAL_UART_MspInit:0000000000000040 $d
     /tmp/ccryvKQt.s:452    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccryvKQt.s:459    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccryvKQt.s:501    .text.HAL_UART_MspDeInit:0000000000000024 $d
     /tmp/ccryvKQt.s:508    .text.HAL_PCD_MspInit:0000000000000000 $t
     /tmp/ccryvKQt.s:515    .text.HAL_PCD_MspInit:0000000000000000 HAL_PCD_MspInit
     /tmp/ccryvKQt.s:552    .text.HAL_PCD_MspInit:0000000000000024 $d
     /tmp/ccryvKQt.s:558    .text.HAL_PCD_MspDeInit:0000000000000000 $t
     /tmp/ccryvKQt.s:565    .text.HAL_PCD_MspDeInit:0000000000000000 HAL_PCD_MspDeInit
     /tmp/ccryvKQt.s:588    .text.HAL_PCD_MspDeInit:0000000000000014 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_GPIO_Init
HAL_DMA_Init
Error_Handler
hdma_dac_ch1
HAL_GPIO_DeInit
HAL_DMA_DeInit

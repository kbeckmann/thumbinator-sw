ARM GAS  /tmp/cc65HKdE.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_msp.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB35:
  25              		.file 1 "Src/stm32f0xx_hal_msp.c"
   1:Src/stm32f0xx_hal_msp.c **** /**
   2:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   3:Src/stm32f0xx_hal_msp.c ****   * File Name          : stm32f0xx_hal_msp.c
   4:Src/stm32f0xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization
   5:Src/stm32f0xx_hal_msp.c ****   *                      and de-Initialization codes.
   6:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   7:Src/stm32f0xx_hal_msp.c ****   *
   8:Src/stm32f0xx_hal_msp.c ****   * COPYRIGHT(c) 2016 STMicroelectronics
   9:Src/stm32f0xx_hal_msp.c ****   *
  10:Src/stm32f0xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f0xx_hal_msp.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f0xx_hal_msp.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f0xx_hal_msp.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f0xx_hal_msp.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f0xx_hal_msp.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f0xx_hal_msp.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f0xx_hal_msp.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f0xx_hal_msp.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f0xx_hal_msp.c ****   *      without specific prior written permission.
  20:Src/stm32f0xx_hal_msp.c ****   *
  21:Src/stm32f0xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f0xx_hal_msp.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f0xx_hal_msp.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f0xx_hal_msp.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f0xx_hal_msp.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f0xx_hal_msp.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f0xx_hal_msp.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f0xx_hal_msp.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f0xx_hal_msp.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f0xx_hal_msp.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/stm32f0xx_hal_msp.c ****   *
  32:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
  33:Src/stm32f0xx_hal_msp.c ****   */
ARM GAS  /tmp/cc65HKdE.s 			page 2


  34:Src/stm32f0xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  35:Src/stm32f0xx_hal_msp.c **** #include "stm32f0xx_hal.h"
  36:Src/stm32f0xx_hal_msp.c **** 
  37:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_dac_ch1;
  38:Src/stm32f0xx_hal_msp.c **** 
  39:Src/stm32f0xx_hal_msp.c **** extern void Error_Handler(void);
  40:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  41:Src/stm32f0xx_hal_msp.c **** 
  42:Src/stm32f0xx_hal_msp.c **** /* USER CODE END 0 */
  43:Src/stm32f0xx_hal_msp.c **** /**
  44:Src/stm32f0xx_hal_msp.c ****   * Initializes the Global MSP.
  45:Src/stm32f0xx_hal_msp.c ****   */
  46:Src/stm32f0xx_hal_msp.c **** void HAL_MspInit(void)
  47:Src/stm32f0xx_hal_msp.c **** {
  26              		.loc 1 47 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 82B0     		sub	sp, sp, #8
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  39              	.LBB2:
  48:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  49:Src/stm32f0xx_hal_msp.c **** 
  50:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  51:Src/stm32f0xx_hal_msp.c **** 
  52:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  40              		.loc 1 52 0
  41 0006 124B     		ldr	r3, .L2
  42 0008 114A     		ldr	r2, .L2
  43 000a 9269     		ldr	r2, [r2, #24]
  44 000c 0121     		movs	r1, #1
  45 000e 0A43     		orrs	r2, r1
  46 0010 9A61     		str	r2, [r3, #24]
  47 0012 0F4B     		ldr	r3, .L2
  48 0014 9B69     		ldr	r3, [r3, #24]
  49 0016 0122     		movs	r2, #1
  50 0018 1340     		ands	r3, r2
  51 001a 7B60     		str	r3, [r7, #4]
  52 001c 7B68     		ldr	r3, [r7, #4]
  53              	.LBE2:
  53:Src/stm32f0xx_hal_msp.c **** 
  54:Src/stm32f0xx_hal_msp.c ****   /* System interrupt init*/
  55:Src/stm32f0xx_hal_msp.c ****   /* SVC_IRQn interrupt configuration */
  56:Src/stm32f0xx_hal_msp.c ****   HAL_NVIC_SetPriority(SVC_IRQn, 0, 0);
  54              		.loc 1 56 0
  55 001e 0523     		movs	r3, #5
  56 0020 5B42     		rsbs	r3, r3, #0
  57 0022 0022     		movs	r2, #0
  58 0024 0021     		movs	r1, #0
  59 0026 1800     		movs	r0, r3
ARM GAS  /tmp/cc65HKdE.s 			page 3


  60 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  57:Src/stm32f0xx_hal_msp.c ****   /* PendSV_IRQn interrupt configuration */
  58:Src/stm32f0xx_hal_msp.c ****   HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
  61              		.loc 1 58 0
  62 002c 0223     		movs	r3, #2
  63 002e 5B42     		rsbs	r3, r3, #0
  64 0030 0022     		movs	r2, #0
  65 0032 0021     		movs	r1, #0
  66 0034 1800     		movs	r0, r3
  67 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  59:Src/stm32f0xx_hal_msp.c ****   /* SysTick_IRQn interrupt configuration */
  60:Src/stm32f0xx_hal_msp.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
  68              		.loc 1 60 0
  69 003a 0123     		movs	r3, #1
  70 003c 5B42     		rsbs	r3, r3, #0
  71 003e 0022     		movs	r2, #0
  72 0040 0021     		movs	r1, #0
  73 0042 1800     		movs	r0, r3
  74 0044 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  61:Src/stm32f0xx_hal_msp.c **** 
  62:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
  63:Src/stm32f0xx_hal_msp.c **** 
  64:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
  65:Src/stm32f0xx_hal_msp.c **** }
  75              		.loc 1 65 0
  76 0048 C046     		nop
  77 004a BD46     		mov	sp, r7
  78 004c 02B0     		add	sp, sp, #8
  79              		@ sp needed
  80 004e 80BD     		pop	{r7, pc}
  81              	.L3:
  82              		.align	2
  83              	.L2:
  84 0050 00100240 		.word	1073876992
  85              		.cfi_endproc
  86              	.LFE35:
  88              		.section	.text.HAL_DAC_MspInit,"ax",%progbits
  89              		.align	1
  90              		.global	HAL_DAC_MspInit
  91              		.syntax unified
  92              		.code	16
  93              		.thumb_func
  94              		.fpu softvfp
  96              	HAL_DAC_MspInit:
  97              	.LFB36:
  66:Src/stm32f0xx_hal_msp.c **** 
  67:Src/stm32f0xx_hal_msp.c **** void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
  68:Src/stm32f0xx_hal_msp.c **** {
  98              		.loc 1 68 0
  99              		.cfi_startproc
 100 0000 80B5     		push	{r7, lr}
 101              	.LCFI3:
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 7, -8
 104              		.cfi_offset 14, -4
 105 0002 88B0     		sub	sp, sp, #32
 106              	.LCFI4:
ARM GAS  /tmp/cc65HKdE.s 			page 4


 107              		.cfi_def_cfa_offset 40
 108 0004 00AF     		add	r7, sp, #0
 109              	.LCFI5:
 110              		.cfi_def_cfa_register 7
 111 0006 7860     		str	r0, [r7, #4]
  69:Src/stm32f0xx_hal_msp.c **** 
  70:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  71:Src/stm32f0xx_hal_msp.c ****   if(hdac->Instance==DAC)
 112              		.loc 1 71 0
 113 0008 7B68     		ldr	r3, [r7, #4]
 114 000a 1B68     		ldr	r3, [r3]
 115 000c 274A     		ldr	r2, .L8
 116 000e 9342     		cmp	r3, r2
 117 0010 47D1     		bne	.L7
 118              	.LBB3:
  72:Src/stm32f0xx_hal_msp.c ****   {
  73:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspInit 0 */
  74:Src/stm32f0xx_hal_msp.c **** 
  75:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END DAC_MspInit 0 */
  76:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
  77:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_DAC1_CLK_ENABLE();
 119              		.loc 1 77 0
 120 0012 274B     		ldr	r3, .L8+4
 121 0014 264A     		ldr	r2, .L8+4
 122 0016 D269     		ldr	r2, [r2, #28]
 123 0018 8021     		movs	r1, #128
 124 001a 8905     		lsls	r1, r1, #22
 125 001c 0A43     		orrs	r2, r1
 126 001e DA61     		str	r2, [r3, #28]
 127 0020 234B     		ldr	r3, .L8+4
 128 0022 DA69     		ldr	r2, [r3, #28]
 129 0024 8023     		movs	r3, #128
 130 0026 9B05     		lsls	r3, r3, #22
 131 0028 1340     		ands	r3, r2
 132 002a BB60     		str	r3, [r7, #8]
 133 002c BB68     		ldr	r3, [r7, #8]
 134              	.LBE3:
  78:Src/stm32f0xx_hal_msp.c **** 
  79:Src/stm32f0xx_hal_msp.c ****     /**DAC GPIO Configuration
  80:Src/stm32f0xx_hal_msp.c ****     PA4     ------> DAC_OUT1
  81:Src/stm32f0xx_hal_msp.c ****     PA5     ------> DAC_OUT2
  82:Src/stm32f0xx_hal_msp.c ****     */
  83:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 135              		.loc 1 83 0
 136 002e 0C23     		movs	r3, #12
 137 0030 FB18     		adds	r3, r7, r3
 138 0032 3022     		movs	r2, #48
 139 0034 1A60     		str	r2, [r3]
  84:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 140              		.loc 1 84 0
 141 0036 0C23     		movs	r3, #12
 142 0038 FB18     		adds	r3, r7, r3
 143 003a 0322     		movs	r2, #3
 144 003c 5A60     		str	r2, [r3, #4]
  85:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 85 0
 146 003e 0C23     		movs	r3, #12
ARM GAS  /tmp/cc65HKdE.s 			page 5


 147 0040 FB18     		adds	r3, r7, r3
 148 0042 0022     		movs	r2, #0
 149 0044 9A60     		str	r2, [r3, #8]
  86:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 150              		.loc 1 86 0
 151 0046 0C23     		movs	r3, #12
 152 0048 FA18     		adds	r2, r7, r3
 153 004a 9023     		movs	r3, #144
 154 004c DB05     		lsls	r3, r3, #23
 155 004e 1100     		movs	r1, r2
 156 0050 1800     		movs	r0, r3
 157 0052 FFF7FEFF 		bl	HAL_GPIO_Init
  87:Src/stm32f0xx_hal_msp.c **** 
  88:Src/stm32f0xx_hal_msp.c ****     /* Peripheral DMA init*/
  89:Src/stm32f0xx_hal_msp.c **** 
  90:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Instance = DMA1_Channel3;
 158              		.loc 1 90 0
 159 0056 174B     		ldr	r3, .L8+8
 160 0058 174A     		ldr	r2, .L8+12
 161 005a 1A60     		str	r2, [r3]
  91:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 162              		.loc 1 91 0
 163 005c 154B     		ldr	r3, .L8+8
 164 005e 1022     		movs	r2, #16
 165 0060 5A60     		str	r2, [r3, #4]
  92:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 166              		.loc 1 92 0
 167 0062 144B     		ldr	r3, .L8+8
 168 0064 0022     		movs	r2, #0
 169 0066 9A60     		str	r2, [r3, #8]
  93:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.MemInc = DMA_MINC_ENABLE;
 170              		.loc 1 93 0
 171 0068 124B     		ldr	r3, .L8+8
 172 006a 8022     		movs	r2, #128
 173 006c DA60     		str	r2, [r3, #12]
  94:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 174              		.loc 1 94 0
 175 006e 114B     		ldr	r3, .L8+8
 176 0070 0022     		movs	r2, #0
 177 0072 1A61     		str	r2, [r3, #16]
  95:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 178              		.loc 1 95 0
 179 0074 0F4B     		ldr	r3, .L8+8
 180 0076 0022     		movs	r2, #0
 181 0078 5A61     		str	r2, [r3, #20]
  96:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.Mode = DMA_CIRCULAR;
 182              		.loc 1 96 0
 183 007a 0E4B     		ldr	r3, .L8+8
 184 007c 2022     		movs	r2, #32
 185 007e 9A61     		str	r2, [r3, #24]
  97:Src/stm32f0xx_hal_msp.c ****     hdma_dac_ch1.Init.Priority = DMA_PRIORITY_LOW;
 186              		.loc 1 97 0
 187 0080 0C4B     		ldr	r3, .L8+8
 188 0082 0022     		movs	r2, #0
 189 0084 DA61     		str	r2, [r3, #28]
  98:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_dac_ch1) != HAL_OK)
 190              		.loc 1 98 0
ARM GAS  /tmp/cc65HKdE.s 			page 6


 191 0086 0B4B     		ldr	r3, .L8+8
 192 0088 1800     		movs	r0, r3
 193 008a FFF7FEFF 		bl	HAL_DMA_Init
 194 008e 031E     		subs	r3, r0, #0
 195 0090 01D0     		beq	.L6
  99:Src/stm32f0xx_hal_msp.c ****     {
 100:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 196              		.loc 1 100 0
 197 0092 FFF7FEFF 		bl	Error_Handler
 198              	.L6:
 101:Src/stm32f0xx_hal_msp.c ****     }
 102:Src/stm32f0xx_hal_msp.c **** 
 103:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(hdac,DMA_Handle1,hdma_dac_ch1);
 199              		.loc 1 103 0
 200 0096 7B68     		ldr	r3, [r7, #4]
 201 0098 064A     		ldr	r2, .L8+8
 202 009a 9A60     		str	r2, [r3, #8]
 203 009c 054B     		ldr	r3, .L8+8
 204 009e 7A68     		ldr	r2, [r7, #4]
 205 00a0 5A62     		str	r2, [r3, #36]
 206              	.L7:
 104:Src/stm32f0xx_hal_msp.c **** 
 105:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspInit 1 */
 106:Src/stm32f0xx_hal_msp.c **** 
 107:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END DAC_MspInit 1 */
 108:Src/stm32f0xx_hal_msp.c ****   }
 109:Src/stm32f0xx_hal_msp.c **** 
 110:Src/stm32f0xx_hal_msp.c **** }
 207              		.loc 1 110 0
 208 00a2 C046     		nop
 209 00a4 BD46     		mov	sp, r7
 210 00a6 08B0     		add	sp, sp, #32
 211              		@ sp needed
 212 00a8 80BD     		pop	{r7, pc}
 213              	.L9:
 214 00aa C046     		.align	2
 215              	.L8:
 216 00ac 00740040 		.word	1073771520
 217 00b0 00100240 		.word	1073876992
 218 00b4 00000000 		.word	hdma_dac_ch1
 219 00b8 30000240 		.word	1073872944
 220              		.cfi_endproc
 221              	.LFE36:
 223              		.section	.text.HAL_DAC_MspDeInit,"ax",%progbits
 224              		.align	1
 225              		.global	HAL_DAC_MspDeInit
 226              		.syntax unified
 227              		.code	16
 228              		.thumb_func
 229              		.fpu softvfp
 231              	HAL_DAC_MspDeInit:
 232              	.LFB37:
 111:Src/stm32f0xx_hal_msp.c **** 
 112:Src/stm32f0xx_hal_msp.c **** void HAL_DAC_MspDeInit(DAC_HandleTypeDef* hdac)
 113:Src/stm32f0xx_hal_msp.c **** {
 233              		.loc 1 113 0
 234              		.cfi_startproc
ARM GAS  /tmp/cc65HKdE.s 			page 7


 235 0000 80B5     		push	{r7, lr}
 236              	.LCFI6:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 82B0     		sub	sp, sp, #8
 241              	.LCFI7:
 242              		.cfi_def_cfa_offset 16
 243 0004 00AF     		add	r7, sp, #0
 244              	.LCFI8:
 245              		.cfi_def_cfa_register 7
 246 0006 7860     		str	r0, [r7, #4]
 114:Src/stm32f0xx_hal_msp.c **** 
 115:Src/stm32f0xx_hal_msp.c ****   if(hdac->Instance==DAC)
 247              		.loc 1 115 0
 248 0008 7B68     		ldr	r3, [r7, #4]
 249 000a 1B68     		ldr	r3, [r3]
 250 000c 0B4A     		ldr	r2, .L13
 251 000e 9342     		cmp	r3, r2
 252 0010 10D1     		bne	.L12
 116:Src/stm32f0xx_hal_msp.c ****   {
 117:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspDeInit 0 */
 118:Src/stm32f0xx_hal_msp.c **** 
 119:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END DAC_MspDeInit 0 */
 120:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 121:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_DAC1_CLK_DISABLE();
 253              		.loc 1 121 0
 254 0012 0B4B     		ldr	r3, .L13+4
 255 0014 0A4A     		ldr	r2, .L13+4
 256 0016 D269     		ldr	r2, [r2, #28]
 257 0018 0A49     		ldr	r1, .L13+8
 258 001a 0A40     		ands	r2, r1
 259 001c DA61     		str	r2, [r3, #28]
 122:Src/stm32f0xx_hal_msp.c **** 
 123:Src/stm32f0xx_hal_msp.c ****     /**DAC GPIO Configuration
 124:Src/stm32f0xx_hal_msp.c ****     PA4     ------> DAC_OUT1
 125:Src/stm32f0xx_hal_msp.c ****     PA5     ------> DAC_OUT2
 126:Src/stm32f0xx_hal_msp.c ****     */
 127:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_4|GPIO_PIN_5);
 260              		.loc 1 127 0
 261 001e 9023     		movs	r3, #144
 262 0020 DB05     		lsls	r3, r3, #23
 263 0022 3021     		movs	r1, #48
 264 0024 1800     		movs	r0, r3
 265 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 128:Src/stm32f0xx_hal_msp.c **** 
 129:Src/stm32f0xx_hal_msp.c ****     /* Peripheral DMA DeInit*/
 130:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(hdac->DMA_Handle1);
 266              		.loc 1 130 0
 267 002a 7B68     		ldr	r3, [r7, #4]
 268 002c 9B68     		ldr	r3, [r3, #8]
 269 002e 1800     		movs	r0, r3
 270 0030 FFF7FEFF 		bl	HAL_DMA_DeInit
 271              	.L12:
 131:Src/stm32f0xx_hal_msp.c ****   }
 132:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN DAC_MspDeInit 1 */
 133:Src/stm32f0xx_hal_msp.c **** 
ARM GAS  /tmp/cc65HKdE.s 			page 8


 134:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END DAC_MspDeInit 1 */
 135:Src/stm32f0xx_hal_msp.c **** 
 136:Src/stm32f0xx_hal_msp.c **** }
 272              		.loc 1 136 0
 273 0034 C046     		nop
 274 0036 BD46     		mov	sp, r7
 275 0038 02B0     		add	sp, sp, #8
 276              		@ sp needed
 277 003a 80BD     		pop	{r7, pc}
 278              	.L14:
 279              		.align	2
 280              	.L13:
 281 003c 00740040 		.word	1073771520
 282 0040 00100240 		.word	1073876992
 283 0044 FFFFFFDF 		.word	-536870913
 284              		.cfi_endproc
 285              	.LFE37:
 287              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 288              		.align	1
 289              		.global	HAL_TIM_Base_MspInit
 290              		.syntax unified
 291              		.code	16
 292              		.thumb_func
 293              		.fpu softvfp
 295              	HAL_TIM_Base_MspInit:
 296              	.LFB38:
 137:Src/stm32f0xx_hal_msp.c **** 
 138:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
 139:Src/stm32f0xx_hal_msp.c **** {
 297              		.loc 1 139 0
 298              		.cfi_startproc
 299 0000 80B5     		push	{r7, lr}
 300              	.LCFI9:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 84B0     		sub	sp, sp, #16
 305              	.LCFI10:
 306              		.cfi_def_cfa_offset 24
 307 0004 00AF     		add	r7, sp, #0
 308              	.LCFI11:
 309              		.cfi_def_cfa_register 7
 310 0006 7860     		str	r0, [r7, #4]
 140:Src/stm32f0xx_hal_msp.c **** 
 141:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM6)
 311              		.loc 1 141 0
 312 0008 7B68     		ldr	r3, [r7, #4]
 313 000a 1B68     		ldr	r3, [r3]
 314 000c 094A     		ldr	r2, .L18
 315 000e 9342     		cmp	r3, r2
 316 0010 0BD1     		bne	.L17
 317              	.LBB4:
 142:Src/stm32f0xx_hal_msp.c ****   {
 143:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspInit 0 */
 144:Src/stm32f0xx_hal_msp.c **** 
 145:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM6_MspInit 0 */
 146:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
ARM GAS  /tmp/cc65HKdE.s 			page 9


 147:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM6_CLK_ENABLE();
 318              		.loc 1 147 0
 319 0012 094B     		ldr	r3, .L18+4
 320 0014 084A     		ldr	r2, .L18+4
 321 0016 D269     		ldr	r2, [r2, #28]
 322 0018 1021     		movs	r1, #16
 323 001a 0A43     		orrs	r2, r1
 324 001c DA61     		str	r2, [r3, #28]
 325 001e 064B     		ldr	r3, .L18+4
 326 0020 DB69     		ldr	r3, [r3, #28]
 327 0022 1022     		movs	r2, #16
 328 0024 1340     		ands	r3, r2
 329 0026 FB60     		str	r3, [r7, #12]
 330 0028 FB68     		ldr	r3, [r7, #12]
 331              	.L17:
 332              	.LBE4:
 148:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspInit 1 */
 149:Src/stm32f0xx_hal_msp.c **** 
 150:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM6_MspInit 1 */
 151:Src/stm32f0xx_hal_msp.c ****   }
 152:Src/stm32f0xx_hal_msp.c **** 
 153:Src/stm32f0xx_hal_msp.c **** }
 333              		.loc 1 153 0
 334 002a C046     		nop
 335 002c BD46     		mov	sp, r7
 336 002e 04B0     		add	sp, sp, #16
 337              		@ sp needed
 338 0030 80BD     		pop	{r7, pc}
 339              	.L19:
 340 0032 C046     		.align	2
 341              	.L18:
 342 0034 00100040 		.word	1073745920
 343 0038 00100240 		.word	1073876992
 344              		.cfi_endproc
 345              	.LFE38:
 347              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 348              		.align	1
 349              		.global	HAL_TIM_Base_MspDeInit
 350              		.syntax unified
 351              		.code	16
 352              		.thumb_func
 353              		.fpu softvfp
 355              	HAL_TIM_Base_MspDeInit:
 356              	.LFB39:
 154:Src/stm32f0xx_hal_msp.c **** 
 155:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base)
 156:Src/stm32f0xx_hal_msp.c **** {
 357              		.loc 1 156 0
 358              		.cfi_startproc
 359 0000 80B5     		push	{r7, lr}
 360              	.LCFI12:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              	.LCFI13:
 366              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc65HKdE.s 			page 10


 367 0004 00AF     		add	r7, sp, #0
 368              	.LCFI14:
 369              		.cfi_def_cfa_register 7
 370 0006 7860     		str	r0, [r7, #4]
 157:Src/stm32f0xx_hal_msp.c **** 
 158:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM6)
 371              		.loc 1 158 0
 372 0008 7B68     		ldr	r3, [r7, #4]
 373 000a 1B68     		ldr	r3, [r3]
 374 000c 064A     		ldr	r2, .L23
 375 000e 9342     		cmp	r3, r2
 376 0010 05D1     		bne	.L22
 159:Src/stm32f0xx_hal_msp.c ****   {
 160:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspDeInit 0 */
 161:Src/stm32f0xx_hal_msp.c **** 
 162:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM6_MspDeInit 0 */
 163:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 164:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM6_CLK_DISABLE();
 377              		.loc 1 164 0
 378 0012 064B     		ldr	r3, .L23+4
 379 0014 054A     		ldr	r2, .L23+4
 380 0016 D269     		ldr	r2, [r2, #28]
 381 0018 1021     		movs	r1, #16
 382 001a 8A43     		bics	r2, r1
 383 001c DA61     		str	r2, [r3, #28]
 384              	.L22:
 165:Src/stm32f0xx_hal_msp.c ****   }
 166:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM6_MspDeInit 1 */
 167:Src/stm32f0xx_hal_msp.c **** 
 168:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM6_MspDeInit 1 */
 169:Src/stm32f0xx_hal_msp.c **** 
 170:Src/stm32f0xx_hal_msp.c **** }
 385              		.loc 1 170 0
 386 001e C046     		nop
 387 0020 BD46     		mov	sp, r7
 388 0022 02B0     		add	sp, sp, #8
 389              		@ sp needed
 390 0024 80BD     		pop	{r7, pc}
 391              	.L24:
 392 0026 C046     		.align	2
 393              	.L23:
 394 0028 00100040 		.word	1073745920
 395 002c 00100240 		.word	1073876992
 396              		.cfi_endproc
 397              	.LFE39:
 399              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 400              		.align	1
 401              		.global	HAL_UART_MspInit
 402              		.syntax unified
 403              		.code	16
 404              		.thumb_func
 405              		.fpu softvfp
 407              	HAL_UART_MspInit:
 408              	.LFB40:
 171:Src/stm32f0xx_hal_msp.c **** 
 172:Src/stm32f0xx_hal_msp.c **** void HAL_UART_MspInit(UART_HandleTypeDef* huart)
 173:Src/stm32f0xx_hal_msp.c **** {
ARM GAS  /tmp/cc65HKdE.s 			page 11


 409              		.loc 1 173 0
 410              		.cfi_startproc
 411 0000 80B5     		push	{r7, lr}
 412              	.LCFI15:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 88B0     		sub	sp, sp, #32
 417              	.LCFI16:
 418              		.cfi_def_cfa_offset 40
 419 0004 00AF     		add	r7, sp, #0
 420              	.LCFI17:
 421              		.cfi_def_cfa_register 7
 422 0006 7860     		str	r0, [r7, #4]
 174:Src/stm32f0xx_hal_msp.c **** 
 175:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 176:Src/stm32f0xx_hal_msp.c ****   if(huart->Instance==USART1)
 423              		.loc 1 176 0
 424 0008 7B68     		ldr	r3, [r7, #4]
 425 000a 1B68     		ldr	r3, [r3]
 426 000c 184A     		ldr	r2, .L28
 427 000e 9342     		cmp	r3, r2
 428 0010 2AD1     		bne	.L27
 429              	.LBB5:
 177:Src/stm32f0xx_hal_msp.c ****   {
 178:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
 179:Src/stm32f0xx_hal_msp.c **** 
 180:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 0 */
 181:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 182:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 430              		.loc 1 182 0
 431 0012 184B     		ldr	r3, .L28+4
 432 0014 174A     		ldr	r2, .L28+4
 433 0016 9269     		ldr	r2, [r2, #24]
 434 0018 8021     		movs	r1, #128
 435 001a C901     		lsls	r1, r1, #7
 436 001c 0A43     		orrs	r2, r1
 437 001e 9A61     		str	r2, [r3, #24]
 438 0020 144B     		ldr	r3, .L28+4
 439 0022 9A69     		ldr	r2, [r3, #24]
 440 0024 8023     		movs	r3, #128
 441 0026 DB01     		lsls	r3, r3, #7
 442 0028 1340     		ands	r3, r2
 443 002a BB60     		str	r3, [r7, #8]
 444 002c BB68     		ldr	r3, [r7, #8]
 445              	.LBE5:
 183:Src/stm32f0xx_hal_msp.c **** 
 184:Src/stm32f0xx_hal_msp.c ****     /**USART1 GPIO Configuration
 185:Src/stm32f0xx_hal_msp.c ****     PA9     ------> USART1_TX
 186:Src/stm32f0xx_hal_msp.c ****     PA10     ------> USART1_RX
 187:Src/stm32f0xx_hal_msp.c ****     */
 188:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 446              		.loc 1 188 0
 447 002e 0C23     		movs	r3, #12
 448 0030 FB18     		adds	r3, r7, r3
 449 0032 C022     		movs	r2, #192
 450 0034 D200     		lsls	r2, r2, #3
ARM GAS  /tmp/cc65HKdE.s 			page 12


 451 0036 1A60     		str	r2, [r3]
 189:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 452              		.loc 1 189 0
 453 0038 0C23     		movs	r3, #12
 454 003a FB18     		adds	r3, r7, r3
 455 003c 0222     		movs	r2, #2
 456 003e 5A60     		str	r2, [r3, #4]
 190:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 457              		.loc 1 190 0
 458 0040 0C23     		movs	r3, #12
 459 0042 FB18     		adds	r3, r7, r3
 460 0044 0122     		movs	r2, #1
 461 0046 9A60     		str	r2, [r3, #8]
 191:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 462              		.loc 1 191 0
 463 0048 0C23     		movs	r3, #12
 464 004a FB18     		adds	r3, r7, r3
 465 004c 0322     		movs	r2, #3
 466 004e DA60     		str	r2, [r3, #12]
 192:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 467              		.loc 1 192 0
 468 0050 0C23     		movs	r3, #12
 469 0052 FB18     		adds	r3, r7, r3
 470 0054 0122     		movs	r2, #1
 471 0056 1A61     		str	r2, [r3, #16]
 193:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 472              		.loc 1 193 0
 473 0058 0C23     		movs	r3, #12
 474 005a FA18     		adds	r2, r7, r3
 475 005c 9023     		movs	r3, #144
 476 005e DB05     		lsls	r3, r3, #23
 477 0060 1100     		movs	r1, r2
 478 0062 1800     		movs	r0, r3
 479 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 480              	.L27:
 194:Src/stm32f0xx_hal_msp.c **** 
 195:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 196:Src/stm32f0xx_hal_msp.c **** 
 197:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 1 */
 198:Src/stm32f0xx_hal_msp.c ****   }
 199:Src/stm32f0xx_hal_msp.c **** 
 200:Src/stm32f0xx_hal_msp.c **** }
 481              		.loc 1 200 0
 482 0068 C046     		nop
 483 006a BD46     		mov	sp, r7
 484 006c 08B0     		add	sp, sp, #32
 485              		@ sp needed
 486 006e 80BD     		pop	{r7, pc}
 487              	.L29:
 488              		.align	2
 489              	.L28:
 490 0070 00380140 		.word	1073821696
 491 0074 00100240 		.word	1073876992
 492              		.cfi_endproc
 493              	.LFE40:
 495              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 496              		.align	1
ARM GAS  /tmp/cc65HKdE.s 			page 13


 497              		.global	HAL_UART_MspDeInit
 498              		.syntax unified
 499              		.code	16
 500              		.thumb_func
 501              		.fpu softvfp
 503              	HAL_UART_MspDeInit:
 504              	.LFB41:
 201:Src/stm32f0xx_hal_msp.c **** 
 202:Src/stm32f0xx_hal_msp.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
 203:Src/stm32f0xx_hal_msp.c **** {
 505              		.loc 1 203 0
 506              		.cfi_startproc
 507 0000 80B5     		push	{r7, lr}
 508              	.LCFI18:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 7, -8
 511              		.cfi_offset 14, -4
 512 0002 82B0     		sub	sp, sp, #8
 513              	.LCFI19:
 514              		.cfi_def_cfa_offset 16
 515 0004 00AF     		add	r7, sp, #0
 516              	.LCFI20:
 517              		.cfi_def_cfa_register 7
 518 0006 7860     		str	r0, [r7, #4]
 204:Src/stm32f0xx_hal_msp.c **** 
 205:Src/stm32f0xx_hal_msp.c ****   if(huart->Instance==USART1)
 519              		.loc 1 205 0
 520 0008 7B68     		ldr	r3, [r7, #4]
 521 000a 1B68     		ldr	r3, [r3]
 522 000c 0A4A     		ldr	r2, .L33
 523 000e 9342     		cmp	r3, r2
 524 0010 0DD1     		bne	.L32
 206:Src/stm32f0xx_hal_msp.c ****   {
 207:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 208:Src/stm32f0xx_hal_msp.c **** 
 209:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 0 */
 210:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 211:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 525              		.loc 1 211 0
 526 0012 0A4B     		ldr	r3, .L33+4
 527 0014 094A     		ldr	r2, .L33+4
 528 0016 9269     		ldr	r2, [r2, #24]
 529 0018 0949     		ldr	r1, .L33+8
 530 001a 0A40     		ands	r2, r1
 531 001c 9A61     		str	r2, [r3, #24]
 212:Src/stm32f0xx_hal_msp.c **** 
 213:Src/stm32f0xx_hal_msp.c ****     /**USART1 GPIO Configuration
 214:Src/stm32f0xx_hal_msp.c ****     PA9     ------> USART1_TX
 215:Src/stm32f0xx_hal_msp.c ****     PA10     ------> USART1_RX
 216:Src/stm32f0xx_hal_msp.c ****     */
 217:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 532              		.loc 1 217 0
 533 001e C023     		movs	r3, #192
 534 0020 DA00     		lsls	r2, r3, #3
 535 0022 9023     		movs	r3, #144
 536 0024 DB05     		lsls	r3, r3, #23
 537 0026 1100     		movs	r1, r2
ARM GAS  /tmp/cc65HKdE.s 			page 14


 538 0028 1800     		movs	r0, r3
 539 002a FFF7FEFF 		bl	HAL_GPIO_DeInit
 540              	.L32:
 218:Src/stm32f0xx_hal_msp.c **** 
 219:Src/stm32f0xx_hal_msp.c ****   }
 220:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 221:Src/stm32f0xx_hal_msp.c **** 
 222:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 1 */
 223:Src/stm32f0xx_hal_msp.c **** 
 224:Src/stm32f0xx_hal_msp.c **** }
 541              		.loc 1 224 0
 542 002e C046     		nop
 543 0030 BD46     		mov	sp, r7
 544 0032 02B0     		add	sp, sp, #8
 545              		@ sp needed
 546 0034 80BD     		pop	{r7, pc}
 547              	.L34:
 548 0036 C046     		.align	2
 549              	.L33:
 550 0038 00380140 		.word	1073821696
 551 003c 00100240 		.word	1073876992
 552 0040 FFBFFFFF 		.word	-16385
 553              		.cfi_endproc
 554              	.LFE41:
 556              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
 557              		.align	1
 558              		.global	HAL_PCD_MspInit
 559              		.syntax unified
 560              		.code	16
 561              		.thumb_func
 562              		.fpu softvfp
 564              	HAL_PCD_MspInit:
 565              	.LFB42:
 225:Src/stm32f0xx_hal_msp.c **** 
 226:Src/stm32f0xx_hal_msp.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
 227:Src/stm32f0xx_hal_msp.c **** {
 566              		.loc 1 227 0
 567              		.cfi_startproc
 568 0000 80B5     		push	{r7, lr}
 569              	.LCFI21:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 84B0     		sub	sp, sp, #16
 574              	.LCFI22:
 575              		.cfi_def_cfa_offset 24
 576 0004 00AF     		add	r7, sp, #0
 577              	.LCFI23:
 578              		.cfi_def_cfa_register 7
 579 0006 7860     		str	r0, [r7, #4]
 228:Src/stm32f0xx_hal_msp.c **** 
 229:Src/stm32f0xx_hal_msp.c ****   if(hpcd->Instance==USB)
 580              		.loc 1 229 0
 581 0008 7B68     		ldr	r3, [r7, #4]
 582 000a 1B68     		ldr	r3, [r3]
 583 000c 0A4A     		ldr	r2, .L38
 584 000e 9342     		cmp	r3, r2
ARM GAS  /tmp/cc65HKdE.s 			page 15


 585 0010 0DD1     		bne	.L37
 586              	.LBB6:
 230:Src/stm32f0xx_hal_msp.c ****   {
 231:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspInit 0 */
 232:Src/stm32f0xx_hal_msp.c **** 
 233:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspInit 0 */
 234:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 235:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USB_CLK_ENABLE();
 587              		.loc 1 235 0
 588 0012 0A4B     		ldr	r3, .L38+4
 589 0014 094A     		ldr	r2, .L38+4
 590 0016 D269     		ldr	r2, [r2, #28]
 591 0018 8021     		movs	r1, #128
 592 001a 0904     		lsls	r1, r1, #16
 593 001c 0A43     		orrs	r2, r1
 594 001e DA61     		str	r2, [r3, #28]
 595 0020 064B     		ldr	r3, .L38+4
 596 0022 DA69     		ldr	r2, [r3, #28]
 597 0024 8023     		movs	r3, #128
 598 0026 1B04     		lsls	r3, r3, #16
 599 0028 1340     		ands	r3, r2
 600 002a FB60     		str	r3, [r7, #12]
 601 002c FB68     		ldr	r3, [r7, #12]
 602              	.L37:
 603              	.LBE6:
 236:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspInit 1 */
 237:Src/stm32f0xx_hal_msp.c **** 
 238:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspInit 1 */
 239:Src/stm32f0xx_hal_msp.c ****   }
 240:Src/stm32f0xx_hal_msp.c **** 
 241:Src/stm32f0xx_hal_msp.c **** }
 604              		.loc 1 241 0
 605 002e C046     		nop
 606 0030 BD46     		mov	sp, r7
 607 0032 04B0     		add	sp, sp, #16
 608              		@ sp needed
 609 0034 80BD     		pop	{r7, pc}
 610              	.L39:
 611 0036 C046     		.align	2
 612              	.L38:
 613 0038 005C0040 		.word	1073765376
 614 003c 00100240 		.word	1073876992
 615              		.cfi_endproc
 616              	.LFE42:
 618              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
 619              		.align	1
 620              		.global	HAL_PCD_MspDeInit
 621              		.syntax unified
 622              		.code	16
 623              		.thumb_func
 624              		.fpu softvfp
 626              	HAL_PCD_MspDeInit:
 627              	.LFB43:
 242:Src/stm32f0xx_hal_msp.c **** 
 243:Src/stm32f0xx_hal_msp.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef* hpcd)
 244:Src/stm32f0xx_hal_msp.c **** {
 628              		.loc 1 244 0
ARM GAS  /tmp/cc65HKdE.s 			page 16


 629              		.cfi_startproc
 630 0000 80B5     		push	{r7, lr}
 631              	.LCFI24:
 632              		.cfi_def_cfa_offset 8
 633              		.cfi_offset 7, -8
 634              		.cfi_offset 14, -4
 635 0002 82B0     		sub	sp, sp, #8
 636              	.LCFI25:
 637              		.cfi_def_cfa_offset 16
 638 0004 00AF     		add	r7, sp, #0
 639              	.LCFI26:
 640              		.cfi_def_cfa_register 7
 641 0006 7860     		str	r0, [r7, #4]
 245:Src/stm32f0xx_hal_msp.c **** 
 246:Src/stm32f0xx_hal_msp.c ****   if(hpcd->Instance==USB)
 642              		.loc 1 246 0
 643 0008 7B68     		ldr	r3, [r7, #4]
 644 000a 1B68     		ldr	r3, [r3]
 645 000c 064A     		ldr	r2, .L43
 646 000e 9342     		cmp	r3, r2
 647 0010 05D1     		bne	.L42
 247:Src/stm32f0xx_hal_msp.c ****   {
 248:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspDeInit 0 */
 249:Src/stm32f0xx_hal_msp.c **** 
 250:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspDeInit 0 */
 251:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 252:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USB_CLK_DISABLE();
 648              		.loc 1 252 0
 649 0012 064B     		ldr	r3, .L43+4
 650 0014 054A     		ldr	r2, .L43+4
 651 0016 D269     		ldr	r2, [r2, #28]
 652 0018 0549     		ldr	r1, .L43+8
 653 001a 0A40     		ands	r2, r1
 654 001c DA61     		str	r2, [r3, #28]
 655              	.L42:
 253:Src/stm32f0xx_hal_msp.c ****   }
 254:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USB_MspDeInit 1 */
 255:Src/stm32f0xx_hal_msp.c **** 
 256:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USB_MspDeInit 1 */
 257:Src/stm32f0xx_hal_msp.c **** 
 258:Src/stm32f0xx_hal_msp.c **** }
 656              		.loc 1 258 0
 657 001e C046     		nop
 658 0020 BD46     		mov	sp, r7
 659 0022 02B0     		add	sp, sp, #8
 660              		@ sp needed
 661 0024 80BD     		pop	{r7, pc}
 662              	.L44:
 663 0026 C046     		.align	2
 664              	.L43:
 665 0028 005C0040 		.word	1073765376
 666 002c 00100240 		.word	1073876992
 667 0030 FFFF7FFF 		.word	-8388609
 668              		.cfi_endproc
 669              	.LFE43:
 671              		.text
 672              	.Letext0:
ARM GAS  /tmp/cc65HKdE.s 			page 17


 673              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 674              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 675              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 676              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 677              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 678              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 679              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 680              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 681              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 682              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 683              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 684              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dac.h"
 685              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd.h"
 686              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 687              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
ARM GAS  /tmp/cc65HKdE.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_msp.c
     /tmp/cc65HKdE.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cc65HKdE.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cc65HKdE.s:84     .text.HAL_MspInit:0000000000000050 $d
     /tmp/cc65HKdE.s:89     .text.HAL_DAC_MspInit:0000000000000000 $t
     /tmp/cc65HKdE.s:96     .text.HAL_DAC_MspInit:0000000000000000 HAL_DAC_MspInit
     /tmp/cc65HKdE.s:216    .text.HAL_DAC_MspInit:00000000000000ac $d
     /tmp/cc65HKdE.s:224    .text.HAL_DAC_MspDeInit:0000000000000000 $t
     /tmp/cc65HKdE.s:231    .text.HAL_DAC_MspDeInit:0000000000000000 HAL_DAC_MspDeInit
     /tmp/cc65HKdE.s:281    .text.HAL_DAC_MspDeInit:000000000000003c $d
     /tmp/cc65HKdE.s:288    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/cc65HKdE.s:295    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/cc65HKdE.s:342    .text.HAL_TIM_Base_MspInit:0000000000000034 $d
     /tmp/cc65HKdE.s:348    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/cc65HKdE.s:355    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/cc65HKdE.s:394    .text.HAL_TIM_Base_MspDeInit:0000000000000028 $d
     /tmp/cc65HKdE.s:400    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc65HKdE.s:407    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc65HKdE.s:490    .text.HAL_UART_MspInit:0000000000000070 $d
     /tmp/cc65HKdE.s:496    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc65HKdE.s:503    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc65HKdE.s:550    .text.HAL_UART_MspDeInit:0000000000000038 $d
     /tmp/cc65HKdE.s:557    .text.HAL_PCD_MspInit:0000000000000000 $t
     /tmp/cc65HKdE.s:564    .text.HAL_PCD_MspInit:0000000000000000 HAL_PCD_MspInit
     /tmp/cc65HKdE.s:613    .text.HAL_PCD_MspInit:0000000000000038 $d
     /tmp/cc65HKdE.s:619    .text.HAL_PCD_MspDeInit:0000000000000000 $t
     /tmp/cc65HKdE.s:626    .text.HAL_PCD_MspDeInit:0000000000000000 HAL_PCD_MspDeInit
     /tmp/cc65HKdE.s:665    .text.HAL_PCD_MspDeInit:0000000000000028 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_GPIO_Init
HAL_DMA_Init
Error_Handler
hdma_dac_ch1
HAL_GPIO_DeInit
HAL_DMA_DeInit

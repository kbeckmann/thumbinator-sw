ARM GAS  /tmp/ccuFjBEr.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB53:
  25              		.cfi_startproc
  26              		@ sp needed
  27 0000 7047     		bx	lr
  28              		.cfi_endproc
  29              	.LFE53:
  31              		.section	.text.HAL_MspDeInit,"ax",%progbits
  32              		.align	1
  33              		.weak	HAL_MspDeInit
  34              		.syntax unified
  35              		.code	16
  36              		.thumb_func
  37              		.fpu softvfp
  39              	HAL_MspDeInit:
  40              	.LFB38:
  41              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @version V1.4.0
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @date    27-May-2016
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
ARM GAS  /tmp/ccuFjBEr.s 			page 2


  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * are permitted provided that the following conditions are met:
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer.
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      and/or other materials provided with the distribution.
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      without specific prior written permission.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number V1.4.0
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x04) /*!< [23:16] sub1 version */
ARM GAS  /tmp/ccuFjBEr.s 			page 3


  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x00) /*!< [15:8]  sub2 version */
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24)\
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16)\
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8 )\
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           is needed and the backup domain when enabled.
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority. 
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
ARM GAS  /tmp/ccuFjBEr.s 			page 4


 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
ARM GAS  /tmp/ccuFjBEr.s 			page 5


 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initializes the MSP.
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  42              		.loc 1 216 0
  43              		.cfi_startproc
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  44              		.loc 1 220 0
  45              		@ sp needed
  46 0000 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE38:
  50              		.section	.text.HAL_DeInit,"ax",%progbits
  51              		.align	1
  52              		.global	HAL_DeInit
  53              		.syntax unified
  54              		.code	16
  55              		.thumb_func
  56              		.fpu softvfp
  58              	HAL_DeInit:
  59              	.LFB36:
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
  60              		.loc 1 182 0
  61              		.cfi_startproc
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  62              		.loc 1 184 0
  63 0000 0122     		movs	r2, #1
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
  64              		.loc 1 182 0
  65 0002 10B5     		push	{r4, lr}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccuFjBEr.s 			page 6


  68              		.cfi_offset 4, -8
  69              		.cfi_offset 14, -4
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  70              		.loc 1 185 0
  71 0004 0024     		movs	r4, #0
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  72              		.loc 1 184 0
  73 0006 064B     		ldr	r3, .L4
  74 0008 5242     		rsbs	r2, r2, #0
  75 000a 1A61     		str	r2, [r3, #16]
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  76              		.loc 1 185 0
  77 000c 1C61     		str	r4, [r3, #16]
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  78              		.loc 1 187 0
  79 000e DA60     		str	r2, [r3, #12]
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  80              		.loc 1 188 0
  81 0010 DC60     		str	r4, [r3, #12]
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  82              		.loc 1 190 0
  83 0012 9A62     		str	r2, [r3, #40]
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  84              		.loc 1 191 0
  85 0014 9C62     		str	r4, [r3, #40]
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
  86              		.loc 1 194 0
  87 0016 FFF7FEFF 		bl	HAL_MspDeInit
  88              	.LVL0:
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  89              		.loc 1 198 0
  90              		@ sp needed
  91 001a 2000     		movs	r0, r4
  92 001c 10BD     		pop	{r4, pc}
  93              	.L5:
  94 001e C046     		.align	2
  95              	.L4:
  96 0020 00100240 		.word	1073876992
  97              		.cfi_endproc
  98              	.LFE36:
 100              		.global	__aeabi_uidiv
 101              		.section	.text.HAL_InitTick,"ax",%progbits
 102              		.align	1
 103              		.weak	HAL_InitTick
 104              		.syntax unified
 105              		.code	16
 106              		.thumb_func
 107              		.fpu softvfp
 109              	HAL_InitTick:
 110              	.LFB39:
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
ARM GAS  /tmp/ccuFjBEr.s 			page 7


 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 111              		.loc 1 239 0
 112              		.cfi_startproc
 113              	.LVL1:
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 119              		.loc 1 239 0
 120 0002 0400     		movs	r4, r0
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 121              		.loc 1 241 0
 122 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 123              	.LVL2:
 124 0008 FA21     		movs	r1, #250
 125 000a 8900     		lsls	r1, r1, #2
 126 000c FFF7FEFF 		bl	__aeabi_uidiv
 127              	.LVL3:
 128 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 129              	.LVL4:
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick IRQ priority */
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0);
 130              		.loc 1 244 0
 131 0014 0120     		movs	r0, #1
 132 0016 0022     		movs	r2, #0
 133 0018 2100     		movs	r1, r4
 134 001a 4042     		rsbs	r0, r0, #0
 135 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 136              	.LVL5:
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 137              		.loc 1 248 0
 138              		@ sp needed
 139 0020 0020     		movs	r0, #0
 140              	.LVL6:
 141 0022 10BD     		pop	{r4, pc}
 142              		.cfi_endproc
 143              	.LFE39:
 145              		.section	.text.HAL_Init,"ax",%progbits
 146              		.align	1
 147              		.global	HAL_Init
ARM GAS  /tmp/ccuFjBEr.s 			page 8


 148              		.syntax unified
 149              		.code	16
 150              		.thumb_func
 151              		.fpu softvfp
 153              	HAL_Init:
 154              	.LFB35:
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 155              		.loc 1 158 0
 156              		.cfi_startproc
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 157              		.loc 1 161 0
 158 0000 1023     		movs	r3, #16
 159 0002 064A     		ldr	r2, .L8
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 160              		.loc 1 158 0
 161 0004 10B5     		push	{r4, lr}
 162              	.LCFI2:
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 4, -8
 165              		.cfi_offset 14, -4
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 166              		.loc 1 161 0
 167 0006 1168     		ldr	r1, [r2]
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 168              		.loc 1 166 0
 169 0008 0020     		movs	r0, #0
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 170              		.loc 1 161 0
 171 000a 0B43     		orrs	r3, r1
 172 000c 1360     		str	r3, [r2]
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 173              		.loc 1 166 0
 174 000e FFF7FEFF 		bl	HAL_InitTick
 175              	.LVL7:
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 176              		.loc 1 173 0
 177              		@ sp needed
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 178              		.loc 1 169 0
 179 0012 FFF7FEFF 		bl	HAL_MspInit
 180              	.LVL8:
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 181              		.loc 1 173 0
 182 0016 0020     		movs	r0, #0
 183 0018 10BD     		pop	{r4, pc}
 184              	.L9:
 185 001a C046     		.align	2
 186              	.L8:
 187 001c 00200240 		.word	1073881088
 188              		.cfi_endproc
 189              	.LFE35:
 191              		.section	.text.HAL_IncTick,"ax",%progbits
 192              		.align	1
 193              		.weak	HAL_IncTick
 194              		.syntax unified
 195              		.code	16
 196              		.thumb_func
ARM GAS  /tmp/ccuFjBEr.s 			page 9


 197              		.fpu softvfp
 199              	HAL_IncTick:
 200              	.LFB40:
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in Systick ISR.
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 201              		.loc 1 287 0
 202              		.cfi_startproc
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick++;
 203              		.loc 1 288 0
 204 0000 024A     		ldr	r2, .L11
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 205              		.loc 1 289 0
 206              		@ sp needed
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick++;
 207              		.loc 1 288 0
 208 0002 1368     		ldr	r3, [r2]
 209 0004 0133     		adds	r3, r3, #1
 210 0006 1360     		str	r3, [r2]
 211              		.loc 1 289 0
 212 0008 7047     		bx	lr
ARM GAS  /tmp/ccuFjBEr.s 			page 10


 213              	.L12:
 214 000a C046     		.align	2
 215              	.L11:
 216 000c 00000000 		.word	uwTick
 217              		.cfi_endproc
 218              	.LFE40:
 220              		.section	.text.HAL_GetTick,"ax",%progbits
 221              		.align	1
 222              		.weak	HAL_GetTick
 223              		.syntax unified
 224              		.code	16
 225              		.thumb_func
 226              		.fpu softvfp
 228              	HAL_GetTick:
 229              	.LFB41:
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 230              		.loc 1 298 0
 231              		.cfi_startproc
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 232              		.loc 1 299 0
 233 0000 014B     		ldr	r3, .L14
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 234              		.loc 1 300 0
 235              		@ sp needed
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 236              		.loc 1 299 0
 237 0002 1868     		ldr	r0, [r3]
 238              		.loc 1 300 0
 239 0004 7047     		bx	lr
 240              	.L15:
 241 0006 C046     		.align	2
 242              	.L14:
 243 0008 00000000 		.word	uwTick
 244              		.cfi_endproc
 245              	.LFE41:
 247              		.section	.text.HAL_Delay,"ax",%progbits
 248              		.align	1
 249              		.weak	HAL_Delay
 250              		.syntax unified
 251              		.code	16
 252              		.thumb_func
 253              		.fpu softvfp
 255              	HAL_Delay:
 256              	.LFB42:
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
ARM GAS  /tmp/ccuFjBEr.s 			page 11


 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay: specifies the delay time length, in milliseconds.
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 257              		.loc 1 314 0
 258              		.cfi_startproc
 259              	.LVL9:
 260 0000 13B5     		push	{r0, r1, r4, lr}
 261              	.LCFI3:
 262              		.cfi_def_cfa_offset 16
 263              		.cfi_offset 0, -16
 264              		.cfi_offset 1, -12
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267              		.loc 1 314 0
 268 0002 0190     		str	r0, [sp, #4]
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = 0;
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   tickstart = HAL_GetTick();
 269              		.loc 1 316 0
 270 0004 FFF7FEFF 		bl	HAL_GetTick
 271              	.LVL10:
 272 0008 0400     		movs	r4, r0
 273              	.LVL11:
 274              	.L17:
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < Delay)
 275              		.loc 1 317 0 discriminator 1
 276 000a FFF7FEFF 		bl	HAL_GetTick
 277              	.LVL12:
 278 000e 019B     		ldr	r3, [sp, #4]
 279 0010 001B     		subs	r0, r0, r4
 280 0012 9842     		cmp	r0, r3
 281 0014 F9D3     		bcc	.L17
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 282              		.loc 1 320 0
 283              		@ sp needed
 284              	.LVL13:
 285 0016 13BD     		pop	{r0, r1, r4, pc}
 286              		.cfi_endproc
 287              	.LFE42:
 289              		.section	.text.HAL_SuspendTick,"ax",%progbits
 290              		.align	1
 291              		.weak	HAL_SuspendTick
 292              		.syntax unified
 293              		.code	16
 294              		.thumb_func
 295              		.fpu softvfp
 297              	HAL_SuspendTick:
 298              	.LFB43:
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
ARM GAS  /tmp/ccuFjBEr.s 			page 12


 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 299              		.loc 1 334 0
 300              		.cfi_startproc
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 301              		.loc 1 336 0
 302 0000 0221     		movs	r1, #2
 303 0002 024A     		ldr	r2, .L20
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 304              		.loc 1 337 0
 305              		@ sp needed
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 306              		.loc 1 336 0
 307 0004 1368     		ldr	r3, [r2]
 308 0006 8B43     		bics	r3, r1
 309 0008 1360     		str	r3, [r2]
 310              		.loc 1 337 0
 311 000a 7047     		bx	lr
 312              	.L21:
 313              		.align	2
 314              	.L20:
 315 000c 10E000E0 		.word	-536813552
 316              		.cfi_endproc
 317              	.LFE43:
 319              		.section	.text.HAL_ResumeTick,"ax",%progbits
 320              		.align	1
 321              		.weak	HAL_ResumeTick
 322              		.syntax unified
 323              		.code	16
 324              		.thumb_func
 325              		.fpu softvfp
 327              	HAL_ResumeTick:
 328              	.LFB44:
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
ARM GAS  /tmp/ccuFjBEr.s 			page 13


 329              		.loc 1 350 0
 330              		.cfi_startproc
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 331              		.loc 1 352 0
 332 0000 0223     		movs	r3, #2
 333 0002 024A     		ldr	r2, .L23
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 334              		.loc 1 353 0
 335              		@ sp needed
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 336              		.loc 1 352 0
 337 0004 1168     		ldr	r1, [r2]
 338 0006 0B43     		orrs	r3, r1
 339 0008 1360     		str	r3, [r2]
 340              		.loc 1 353 0
 341 000a 7047     		bx	lr
 342              	.L24:
 343              		.align	2
 344              	.L23:
 345 000c 10E000E0 		.word	-536813552
 346              		.cfi_endproc
 347              	.LFE44:
 349              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 350              		.align	1
 351              		.global	HAL_GetHalVersion
 352              		.syntax unified
 353              		.code	16
 354              		.thumb_func
 355              		.fpu softvfp
 357              	HAL_GetHalVersion:
 358              	.LFB45:
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 359              		.loc 1 360 0
 360              		.cfi_startproc
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 361              		.loc 1 362 0
 362 0000 8220     		movs	r0, #130
 363              		@ sp needed
 364 0002 4004     		lsls	r0, r0, #17
 365 0004 7047     		bx	lr
 366              		.cfi_endproc
 367              	.LFE45:
 369              		.section	.text.HAL_GetREVID,"ax",%progbits
 370              		.align	1
 371              		.global	HAL_GetREVID
 372              		.syntax unified
 373              		.code	16
 374              		.thumb_func
 375              		.fpu softvfp
ARM GAS  /tmp/ccuFjBEr.s 			page 14


 377              	HAL_GetREVID:
 378              	.LFB46:
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 379              		.loc 1 369 0
 380              		.cfi_startproc
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16);
 381              		.loc 1 370 0
 382 0000 014B     		ldr	r3, .L27
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 383              		.loc 1 371 0
 384              		@ sp needed
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16);
 385              		.loc 1 370 0
 386 0002 1868     		ldr	r0, [r3]
 387 0004 000C     		lsrs	r0, r0, #16
 388              		.loc 1 371 0
 389 0006 7047     		bx	lr
 390              	.L28:
 391              		.align	2
 392              	.L27:
 393 0008 00580140 		.word	1073829888
 394              		.cfi_endproc
 395              	.LFE46:
 397              		.section	.text.HAL_GetDEVID,"ax",%progbits
 398              		.align	1
 399              		.global	HAL_GetDEVID
 400              		.syntax unified
 401              		.code	16
 402              		.thumb_func
 403              		.fpu softvfp
 405              	HAL_GetDEVID:
 406              	.LFB47:
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 407              		.loc 1 378 0
 408              		.cfi_startproc
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 409              		.loc 1 379 0
 410 0000 024B     		ldr	r3, .L30
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 411              		.loc 1 380 0
 412              		@ sp needed
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 413              		.loc 1 379 0
 414 0002 1868     		ldr	r0, [r3]
 415 0004 0005     		lsls	r0, r0, #20
ARM GAS  /tmp/ccuFjBEr.s 			page 15


 416 0006 000D     		lsrs	r0, r0, #20
 417              		.loc 1 380 0
 418 0008 7047     		bx	lr
 419              	.L31:
 420 000a C046     		.align	2
 421              	.L30:
 422 000c 00580140 		.word	1073829888
 423              		.cfi_endproc
 424              	.LFE47:
 426              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 427              		.align	1
 428              		.global	HAL_DBGMCU_EnableDBGStopMode
 429              		.syntax unified
 430              		.code	16
 431              		.thumb_func
 432              		.fpu softvfp
 434              	HAL_DBGMCU_EnableDBGStopMode:
 435              	.LFB48:
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode       
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 436              		.loc 1 387 0
 437              		.cfi_startproc
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 438              		.loc 1 388 0
 439 0000 0223     		movs	r3, #2
 440 0002 024A     		ldr	r2, .L33
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 441              		.loc 1 389 0
 442              		@ sp needed
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 443              		.loc 1 388 0
 444 0004 5168     		ldr	r1, [r2, #4]
 445 0006 0B43     		orrs	r3, r1
 446 0008 5360     		str	r3, [r2, #4]
 447              		.loc 1 389 0
 448 000a 7047     		bx	lr
 449              	.L34:
 450              		.align	2
 451              	.L33:
 452 000c 00580140 		.word	1073829888
 453              		.cfi_endproc
 454              	.LFE48:
 456              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 457              		.align	1
 458              		.global	HAL_DBGMCU_DisableDBGStopMode
 459              		.syntax unified
 460              		.code	16
 461              		.thumb_func
 462              		.fpu softvfp
 464              	HAL_DBGMCU_DisableDBGStopMode:
 465              	.LFB49:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
ARM GAS  /tmp/ccuFjBEr.s 			page 16


 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode       
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 466              		.loc 1 396 0
 467              		.cfi_startproc
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 468              		.loc 1 397 0
 469 0000 0221     		movs	r1, #2
 470 0002 024A     		ldr	r2, .L36
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 471              		.loc 1 398 0
 472              		@ sp needed
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 473              		.loc 1 397 0
 474 0004 5368     		ldr	r3, [r2, #4]
 475 0006 8B43     		bics	r3, r1
 476 0008 5360     		str	r3, [r2, #4]
 477              		.loc 1 398 0
 478 000a 7047     		bx	lr
 479              	.L37:
 480              		.align	2
 481              	.L36:
 482 000c 00580140 		.word	1073829888
 483              		.cfi_endproc
 484              	.LFE49:
 486              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 487              		.align	1
 488              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 489              		.syntax unified
 490              		.code	16
 491              		.thumb_func
 492              		.fpu softvfp
 494              	HAL_DBGMCU_EnableDBGStandbyMode:
 495              	.LFB50:
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode       
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 496              		.loc 1 405 0
 497              		.cfi_startproc
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 498              		.loc 1 406 0
 499 0000 0423     		movs	r3, #4
 500 0002 024A     		ldr	r2, .L39
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 501              		.loc 1 407 0
 502              		@ sp needed
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 503              		.loc 1 406 0
 504 0004 5168     		ldr	r1, [r2, #4]
 505 0006 0B43     		orrs	r3, r1
ARM GAS  /tmp/ccuFjBEr.s 			page 17


 506 0008 5360     		str	r3, [r2, #4]
 507              		.loc 1 407 0
 508 000a 7047     		bx	lr
 509              	.L40:
 510              		.align	2
 511              	.L39:
 512 000c 00580140 		.word	1073829888
 513              		.cfi_endproc
 514              	.LFE50:
 516              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 517              		.align	1
 518              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 519              		.syntax unified
 520              		.code	16
 521              		.thumb_func
 522              		.fpu softvfp
 524              	HAL_DBGMCU_DisableDBGStandbyMode:
 525              	.LFB51:
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode       
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 526              		.loc 1 414 0
 527              		.cfi_startproc
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 528              		.loc 1 415 0
 529 0000 0421     		movs	r1, #4
 530 0002 024A     		ldr	r2, .L42
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 531              		.loc 1 416 0
 532              		@ sp needed
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 533              		.loc 1 415 0
 534 0004 5368     		ldr	r3, [r2, #4]
 535 0006 8B43     		bics	r3, r1
 536 0008 5360     		str	r3, [r2, #4]
 537              		.loc 1 416 0
 538 000a 7047     		bx	lr
 539              	.L43:
 540              		.align	2
 541              	.L42:
 542 000c 00580140 		.word	1073829888
 543              		.cfi_endproc
 544              	.LFE51:
 546              		.comm	uwTick,4,4
 547              		.text
 548              	.Letext0:
 549              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 550              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 551              		.file 4 "Drivers/CMSIS/Include/core_cm0.h"
 552              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 553              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 554              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 555              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
ARM GAS  /tmp/ccuFjBEr.s 			page 18


 556              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 557              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 558              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 559              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 560              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccuFjBEr.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal.c
     /tmp/ccuFjBEr.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccuFjBEr.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccuFjBEr.s:32     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccuFjBEr.s:39     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccuFjBEr.s:51     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccuFjBEr.s:58     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccuFjBEr.s:96     .text.HAL_DeInit:0000000000000020 $d
     /tmp/ccuFjBEr.s:102    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccuFjBEr.s:109    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccuFjBEr.s:146    .text.HAL_Init:0000000000000000 $t
     /tmp/ccuFjBEr.s:153    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccuFjBEr.s:187    .text.HAL_Init:000000000000001c $d
     /tmp/ccuFjBEr.s:192    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccuFjBEr.s:199    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccuFjBEr.s:216    .text.HAL_IncTick:000000000000000c $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccuFjBEr.s:221    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccuFjBEr.s:228    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccuFjBEr.s:243    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccuFjBEr.s:248    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccuFjBEr.s:255    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccuFjBEr.s:290    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccuFjBEr.s:297    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccuFjBEr.s:315    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccuFjBEr.s:320    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccuFjBEr.s:327    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccuFjBEr.s:345    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccuFjBEr.s:350    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccuFjBEr.s:357    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccuFjBEr.s:370    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccuFjBEr.s:377    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccuFjBEr.s:393    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccuFjBEr.s:398    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccuFjBEr.s:405    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccuFjBEr.s:422    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccuFjBEr.s:427    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccuFjBEr.s:434    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccuFjBEr.s:452    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccuFjBEr.s:457    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccuFjBEr.s:464    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccuFjBEr.s:482    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccuFjBEr.s:487    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccuFjBEr.s:494    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccuFjBEr.s:512    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccuFjBEr.s:517    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccuFjBEr.s:524    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccuFjBEr.s:542    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_NVIC_SetPriority

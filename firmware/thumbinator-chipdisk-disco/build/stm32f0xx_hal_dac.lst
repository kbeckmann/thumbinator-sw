ARM GAS  /tmp/ccNRPv4k.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_dac.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_DAC_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_DAC_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_DAC_MspInit:
  24              	.LFB64:
  25              		.cfi_startproc
  26              		@ sp needed
  27 0000 7047     		bx	lr
  28              		.cfi_endproc
  29              	.LFE64:
  31              		.section	.text.HAL_DAC_Init,"ax",%progbits
  32              		.align	1
  33              		.global	HAL_DAC_Init
  34              		.syntax unified
  35              		.code	16
  36              		.thumb_func
  37              		.fpu softvfp
  39              	HAL_DAC_Init:
  40              	.LFB35:
  41              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @file    stm32f0xx_hal_dac.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @version V1.4.0
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @date    27-May-2016
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief   DAC HAL module driver.
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         This file provides firmware functions to manage the following 
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         functionalities of the Digital to Analog Converter (DAC) peripheral:
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *           + IO operation functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *           + Peripheral Control functions
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *           + Peripheral State and Errors functions      
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *     
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   @verbatim      
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ==============================================================================
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****                       ##### DAC Peripheral features #####
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ==============================================================================
ARM GAS  /tmp/ccNRPv4k.s 			page 2


  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     [..]        
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       *** DAC Channels ***
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       ====================  
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     [..]  
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     STM32F0 devices integrates no, one or two 12-bit Digital Analog Converters.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     STM32F05x devices have one converter (channel1)
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     STM32F07x & STM32F09x devices have two converters (i.e. channel1 & channel2)
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     When 2 converters are present (i.e. channel1 & channel2)  they 
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     can be used independently or simultaneously (dual mode):
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (#) DAC channel1 with DAC_OUT1 (PA4) as output
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (#) DAC channel2 with DAC_OUT2 (PA5) as output
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       *** DAC Triggers ***
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       ====================
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     [..]
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     Digital to Analog conversion can be non-triggered using DAC_TRIGGER_NONE
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register. 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     [..] 
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     Digital to Analog conversion can be triggered by:
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (#) External event: EXTI Line 9 (any GPIOx_PIN_9) using DAC_TRIGGER_EXT_IT9.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****           The used pin (GPIOx_PIN_9) must be configured in input mode.
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (#) Timers TRGO: TIM2, TIM3, TIM6, and TIM15 
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****           (DAC_TRIGGER_T2_TRGO, DAC_TRIGGER_T3_TRGO...)
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (#) Software using DAC_TRIGGER_SOFTWARE
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       *** DAC Buffer mode feature ***
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       =============================== 
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       [..] 
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       Each DAC channel integrates an output buffer that can be used to 
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       reduce the output impedance, and to drive external loads directly
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       without having to add an external operational amplifier.
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       To enable, the output buffer use  
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       [..]           
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (@) Refer to the device datasheet for more details about output 
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****           impedance value with and without output buffer.
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       *** GPIO configurations guidelines ***
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       =====================
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       [..] 
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       When a DAC channel is used (ex channel1 on PA4) and the other is not 
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (ex channel1 on PA5 is configured in Analog and disabled).
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       Channel1 may disturb channel2 as coupling effect.
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       Note that there is no coupling on channel2 as soon as channel2 is turned on.
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       Coupling on adjacent channel could be avoided as follows:
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       when unused PA5 is configured as INPUT PULL-UP or DOWN. 
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       PA5 is configured in ANALOG just before it is turned on.     
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****             
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        *** DAC wave generation feature ***
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        =================================== 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        [..]     
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        Both DAC channels can be used to generate
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****          (#) Noise wave 
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****          (#) Triangle wave
ARM GAS  /tmp/ccNRPv4k.s 			page 3


  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****             
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        *** DAC data format ***
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        =======================
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        [..]   
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        The DAC data format can be:
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****          (#) 8-bit right alignment using DAC_ALIGN_8B_R
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****          (#) 12-bit left alignment using DAC_ALIGN_12B_L
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****          (#) 12-bit right alignment using DAC_ALIGN_12B_R
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        *** DAC data value to voltage correspondance ***  
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        ================================================ 
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        [..] 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        The analog output voltage on each DAC channel pin is determined
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        by the following equation: 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        [..]
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        DAC_OUTx = VREF+ * DOR / 4095
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        (+) with  DOR is the Data Output Register
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        [..]
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****           VEF+ is the input voltage reference (refer to the device datasheet)
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        [..]
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****         e.g. To set DAC_OUT1 to 0.7V, use
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        (+) Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        *** DMA requests  ***
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        =====================
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        [..]    
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        A DMA1 request can be generated when an external trigger (but not
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        a software trigger) occurs if DMA1 requests are enabled using
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        HAL_DAC_Start_DMA()
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        [..]
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        DMA1 requests are mapped as following:
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****          (#) DAC channel1 : mapped on DMA1 channel3 which must be 
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****              already configured
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****          (#) DAC channel2 : mapped on DMA1 channel4 which must be 
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****              already configured
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     (@) For Dual mode and specific signal (Triangle and noise) generation please 
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****         refer to Extended Features Driver description        
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****         STM32F0 devices with one channel (one converting capability) does not
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****         support Dual mode and specific signal (Triangle and noise) generation.
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****                       ##### How to use this driver #####
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ==============================================================================
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     [..]          
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) DAC APB clock must be enabled to get write access to DAC
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****           registers using HAL_DAC_Init()
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Configure the DAC channel using HAL_DAC_ConfigChannel() function.
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Enable the DAC channel using HAL_DAC_Start() or HAL_DAC_Start_DMA() functions.
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      *** Polling mode IO operation ***
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      =================================
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      [..]    
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        (+) Start the DAC peripheral using HAL_DAC_Start() 
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        (+) To read the DAC last data output value, use the HAL_DAC_GetValue() function.
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        (+) Stop the DAC peripheral using HAL_DAC_Stop()
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        
ARM GAS  /tmp/ccNRPv4k.s 			page 4


 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      *** DMA mode IO operation ***    
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      ==============================
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      [..]    
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        (+) Start the DAC peripheral using HAL_DAC_Start_DMA(), at this stage the user specify the l
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****            of data to be transferred at each end of conversion
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        (+) At the middle of data transfer HAL_DAC_ConvHalfCpltCallbackCh1() or HAL_DACEx_ConvHalfCp
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****            function is executed and user can add his own code by customization of function pointer 
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****            HAL_DAC_ConvHalfCpltCallbackCh1() or HAL_DACEx_ConvHalfCpltCallbackCh2()
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        (+) At The end of data transfer HAL_DAC_ConvCpltCallbackCh1() or HAL_DACEx_ConvHalfCpltCallb
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****            function is executed and user can add his own code by customization of function pointer 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****            HAL_DAC_ConvCpltCallbackCh1() or HAL_DACEx_ConvHalfCpltCallbackCh2()
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        (+) In case of transfer Error, HAL_DAC_ErrorCallbackCh1() function is executed and user can 
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****             add his own code by customization of function pointer HAL_DAC_ErrorCallbackCh1
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        (+) In case of DMA underrun, DAC interruption triggers and execute internal function HAL_DAC
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****            HAL_DAC_DMAUnderrunCallbackCh1() or HAL_DACEx_DMAUnderrunCallbackCh2()  
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****            function is executed and user can add his own code by customization of function pointer 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****            HAL_DAC_DMAUnderrunCallbackCh1() or HAL_DACEx_DMAUnderrunCallbackCh2() and
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****            add his own code by customization of function pointer HAL_DAC_ErrorCallbackCh1()
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        (+) Stop the DAC peripheral using HAL_DAC_Stop_DMA()
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****                     
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      *** DAC HAL driver macros list ***
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      ============================================= 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      [..]
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        Below the list of most used macros in DAC HAL driver.
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) __HAL_DAC_ENABLE : Enable the DAC peripheral
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) __HAL_DAC_DISABLE : Disable the DAC peripheral
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) __HAL_DAC_CLEAR_FLAG: Clear the DAC's pending flags
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) __HAL_DAC_GET_FLAG: Get the selected DAC's flag status
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      [..]
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (@) You can refer to the DAC HAL driver header file for more useful macros  
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****    
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****  @endverbatim    
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ******************************************************************************
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @attention
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * Redistribution and use in source and binary forms, with or without modification,
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * are permitted provided that the following conditions are met:
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *      this list of conditions and the following disclaimer.
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *      this list of conditions and the following disclaimer in the documentation
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *      and/or other materials provided with the distribution.
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *      may be used to endorse or promote products derived from this software
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *      without specific prior written permission.
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/ccNRPv4k.s 			page 5


 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ******************************************************************************
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */ 
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /* Includes ------------------------------------------------------------------*/
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** #include "stm32f0xx_hal.h"
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /** @addtogroup STM32F0xx_HAL_Driver
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @{
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** #ifdef HAL_DAC_MODULE_ENABLED
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** #if defined(STM32F051x8) || defined(STM32F058xx) || \
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || \
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     defined(STM32F091xC) || defined (STM32F098xx)
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /** @defgroup DAC DAC
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief DAC driver modules
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @{
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */ 
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /* Private typedef -----------------------------------------------------------*/
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /* Private define ------------------------------------------------------------*/
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /* Private macro -------------------------------------------------------------*/
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /** @defgroup DAC_Private_Macros DAC Private Macros
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @{
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @}
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /* Private variables ---------------------------------------------------------*/
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /* Private function prototypes -----------------------------------------------*/
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /** @defgroup DAC_Private_Functions DAC Private Functions
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @{
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @}
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /* Exported functions -------------------------------------------------------*/
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /** @defgroup DAC_Exported_Functions DAC Exported Functions
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @{
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /** @defgroup DAC_Exported_Functions_Group1 Initialization and de-initialization functions 
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****  *  @brief    Initialization and Configuration functions 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****  *
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** @verbatim    
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ==============================================================================
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****               ##### Initialization and de-initialization functions #####
ARM GAS  /tmp/ccNRPv4k.s 			page 6


 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ==============================================================================
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     [..]  This section provides functions allowing to:
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Initialize and configure the DAC. 
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) De-initialize the DAC. 
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****          
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** @endverbatim
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @{
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Initialize the DAC peripheral according to the specified parameters
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         in the DAC_InitStruct and initialize the associated handle.
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval HAL status
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** { 
  42              		.loc 1 265 0
  43              		.cfi_startproc
  44              	.LVL0:
  45              		.loc 1 265 0
  46 0000 10B5     		push	{r4, lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 4, -8
  50              		.cfi_offset 14, -4
  51              		.loc 1 265 0
  52 0002 0400     		movs	r4, r0
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Check DAC handle */
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   if(hdac == NULL)
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      return HAL_ERROR;
  53              		.loc 1 269 0
  54 0004 0120     		movs	r0, #1
  55              	.LVL1:
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {
  56              		.loc 1 267 0
  57 0006 002C     		cmp	r4, #0
  58 0008 0DD0     		beq	.L3
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   }
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Check the parameters */
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   if(hdac->State == HAL_DAC_STATE_RESET)
  59              		.loc 1 274 0
  60 000a 2379     		ldrb	r3, [r4, #4]
  61 000c DBB2     		uxtb	r3, r3
  62 000e 002B     		cmp	r3, #0
  63 0010 03D1     		bne	.L4
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {  
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     /* Allocate lock resource and initialize it */
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     hdac->Lock = HAL_UNLOCKED;
  64              		.loc 1 277 0
  65 0012 6371     		strb	r3, [r4, #5]
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     /* Init the low level hardware */
ARM GAS  /tmp/ccNRPv4k.s 			page 7


 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     HAL_DAC_MspInit(hdac);
  66              		.loc 1 280 0
  67 0014 2000     		movs	r0, r4
  68 0016 FFF7FEFF 		bl	HAL_DAC_MspInit
  69              	.LVL2:
  70              	.L4:
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   }
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Initialize the DAC state*/
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   hdac->State = HAL_DAC_STATE_BUSY;
  71              		.loc 1 284 0
  72 001a 0223     		movs	r3, #2
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Set DAC error code to none */
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   hdac->ErrorCode = HAL_DAC_ERROR_NONE;
  73              		.loc 1 287 0
  74 001c 0020     		movs	r0, #0
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
  75              		.loc 1 284 0
  76 001e 2371     		strb	r3, [r4, #4]
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Initialize the DAC state*/
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   hdac->State = HAL_DAC_STATE_READY;
  77              		.loc 1 290 0
  78 0020 013B     		subs	r3, r3, #1
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
  79              		.loc 1 287 0
  80 0022 2061     		str	r0, [r4, #16]
  81              		.loc 1 290 0
  82 0024 2371     		strb	r3, [r4, #4]
  83              	.L3:
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Return function status */
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   return HAL_OK;
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
  84              		.loc 1 294 0
  85              		@ sp needed
  86              	.LVL3:
  87 0026 10BD     		pop	{r4, pc}
  88              		.cfi_endproc
  89              	.LFE35:
  91              		.section	.text.HAL_DAC_MspDeInit,"ax",%progbits
  92              		.align	1
  93              		.weak	HAL_DAC_MspDeInit
  94              		.syntax unified
  95              		.code	16
  96              		.thumb_func
  97              		.fpu softvfp
  99              	HAL_DAC_MspDeInit:
 100              	.LFB62:
 101              		.cfi_startproc
 102              		@ sp needed
 103 0000 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE62:
 107              		.section	.text.HAL_DAC_DeInit,"ax",%progbits
 108              		.align	1
ARM GAS  /tmp/ccNRPv4k.s 			page 8


 109              		.global	HAL_DAC_DeInit
 110              		.syntax unified
 111              		.code	16
 112              		.thumb_func
 113              		.fpu softvfp
 115              	HAL_DAC_DeInit:
 116              	.LFB36:
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Deinitialize the DAC peripheral registers to their default reset values.
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval HAL status
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** HAL_StatusTypeDef HAL_DAC_DeInit(DAC_HandleTypeDef* hdac)
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 117              		.loc 1 303 0
 118              		.cfi_startproc
 119              	.LVL4:
 120              		.loc 1 303 0
 121 0000 10B5     		push	{r4, lr}
 122              	.LCFI1:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 126              		.loc 1 303 0
 127 0002 0400     		movs	r4, r0
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Check DAC handle */
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   if(hdac == NULL)
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****      return HAL_ERROR;
 128              		.loc 1 307 0
 129 0004 0120     		movs	r0, #1
 130              	.LVL5:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {
 131              		.loc 1 305 0
 132 0006 002C     		cmp	r4, #0
 133 0008 08D0     		beq	.L8
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   }
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Check the parameters */
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Change DAC state */
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   hdac->State = HAL_DAC_STATE_BUSY;
 134              		.loc 1 314 0
 135 000a 0223     		movs	r3, #2
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* DeInit the low level hardware */
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   HAL_DAC_MspDeInit(hdac);
 136              		.loc 1 317 0
 137 000c 2000     		movs	r0, r4
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 138              		.loc 1 314 0
 139 000e 2371     		strb	r3, [r4, #4]
 140              		.loc 1 317 0
 141 0010 FFF7FEFF 		bl	HAL_DAC_MspDeInit
ARM GAS  /tmp/ccNRPv4k.s 			page 9


 142              	.LVL6:
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Set DAC error code to none */
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 143              		.loc 1 320 0
 144 0014 0020     		movs	r0, #0
 145 0016 2061     		str	r0, [r4, #16]
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Change DAC state */
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   hdac->State = HAL_DAC_STATE_RESET;
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Release Lock */
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   __HAL_UNLOCK(hdac);
 146              		.loc 1 326 0
 147 0018 6071     		strb	r0, [r4, #5]
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 148              		.loc 1 323 0
 149 001a 2071     		strb	r0, [r4, #4]
 150              	.L8:
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Return function status */
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   return HAL_OK;
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 151              		.loc 1 330 0
 152              		@ sp needed
 153              	.LVL7:
 154 001c 10BD     		pop	{r4, pc}
 155              		.cfi_endproc
 156              	.LFE36:
 158              		.section	.text.HAL_DAC_Start,"ax",%progbits
 159              		.align	1
 160              		.weak	HAL_DAC_Start
 161              		.syntax unified
 162              		.code	16
 163              		.thumb_func
 164              		.fpu softvfp
 166              	HAL_DAC_Start:
 167              	.LFB39:
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Initialize the DAC MSP.
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval None
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** __weak void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** { 
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Prevent unused argument(s) compilation warning */
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(hdac);
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****             the HAL_DAC_MspInit could be implemented in the user file
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****    */ 
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  DeInitialize the DAC MSP.
ARM GAS  /tmp/ccNRPv4k.s 			page 10


 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.  
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval None
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** __weak void HAL_DAC_MspDeInit(DAC_HandleTypeDef* hdac)
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Prevent unused argument(s) compilation warning */
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(hdac);
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****             the HAL_DAC_MspDeInit could be implemented in the user file
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****    */ 
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @}
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /** @defgroup DAC_Exported_Functions_Group2 IO operation functions
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****  *  @brief    IO operation functions 
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****  *
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** @verbatim   
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ==============================================================================
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****              ##### IO operation functions #####
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ==============================================================================  
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     [..]  This section provides functions allowing to:
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Start conversion.
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Stop conversion.
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Start conversion and enable DMA transfer.
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Stop conversion and disable DMA transfer.
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Set the specified data holding register value for DAC channel.
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****                      
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** @endverbatim
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @{
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Enables DAC and starts conversion of channel.
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  Channel: The selected DAC channel. 
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *          This parameter can be one of the following values:
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_1: DAC Channel1 selected
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_2: DAC Channel2 selected
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval HAL status
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** __weak HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 168              		.loc 1 397 0
 169              		.cfi_startproc
 170              	.LVL8:
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Prevent unused argument(s) compilation warning */
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(hdac);
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(Channel);
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Note : This function is defined into this file for library reference. */
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /*        Function content is located into file stm32f0xx_hal_dac_ex.c   */
ARM GAS  /tmp/ccNRPv4k.s 			page 11


 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Return error status as not implemented here */
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   return HAL_ERROR;
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 171              		.loc 1 407 0
 172 0000 0120     		movs	r0, #1
 173              	.LVL9:
 174              		@ sp needed
 175 0002 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE39:
 179              		.section	.text.HAL_DAC_Stop,"ax",%progbits
 180              		.align	1
 181              		.global	HAL_DAC_Stop
 182              		.syntax unified
 183              		.code	16
 184              		.thumb_func
 185              		.fpu softvfp
 187              	HAL_DAC_Stop:
 188              	.LFB40:
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Disables DAC and stop conversion of channel.
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  Channel: The selected DAC channel. 
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *          This parameter can be one of the following values:
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_1: DAC Channel1 selected
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_2: DAC Channel2 selected  
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval HAL status
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** HAL_StatusTypeDef HAL_DAC_Stop(DAC_HandleTypeDef* hdac, uint32_t Channel)
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 189              		.loc 1 420 0
 190              		.cfi_startproc
 191              	.LVL10:
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Check the parameters */
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   assert_param(IS_DAC_CHANNEL(Channel));
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Disable the Peripheral */
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   __HAL_DAC_DISABLE(hdac, Channel);
 192              		.loc 1 425 0
 193 0000 0122     		movs	r2, #1
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Check the parameters */
 194              		.loc 1 420 0
 195 0002 30B5     		push	{r4, r5, lr}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 12
 198              		.cfi_offset 4, -12
 199              		.cfi_offset 5, -8
 200              		.cfi_offset 14, -4
 201              		.loc 1 425 0
 202 0004 1500     		movs	r5, r2
 203 0006 8D40     		lsls	r5, r5, r1
 204 0008 0468     		ldr	r4, [r0]
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Change DAC state */
ARM GAS  /tmp/ccNRPv4k.s 			page 12


 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   hdac->State = HAL_DAC_STATE_READY;
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Return function status */
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   return HAL_OK;
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 205              		.loc 1 432 0
 206              		@ sp needed
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 207              		.loc 1 425 0
 208 000a 2368     		ldr	r3, [r4]
 209 000c AB43     		bics	r3, r5
 210 000e 2360     		str	r3, [r4]
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 211              		.loc 1 428 0
 212 0010 0271     		strb	r2, [r0, #4]
 213              		.loc 1 432 0
 214 0012 0020     		movs	r0, #0
 215              	.LVL11:
 216 0014 30BD     		pop	{r4, r5, pc}
 217              		.cfi_endproc
 218              	.LFE40:
 220              		.section	.text.HAL_DAC_Start_DMA,"ax",%progbits
 221              		.align	1
 222              		.weak	HAL_DAC_Start_DMA
 223              		.syntax unified
 224              		.code	16
 225              		.thumb_func
 226              		.fpu softvfp
 228              	HAL_DAC_Start_DMA:
 229              	.LFB41:
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Enables DAC and starts conversion of channel.
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  Channel: The selected DAC channel. 
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *          This parameter can be one of the following values:
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_1: DAC Channel1 selected
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_2: DAC Channel2 selected
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  pData: The destination peripheral Buffer address.
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  Length: The length of data to be transferred from memory to DAC peripheral
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  Alignment: Specifies the data alignment for DAC channel.
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *          This parameter can be one of the following values:
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_ALIGN_8B_R: 8bit right data alignment selected
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_ALIGN_12B_L: 12bit left data alignment selected
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval HAL status
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** __weak HAL_StatusTypeDef HAL_DAC_Start_DMA(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t* pDa
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 230              		.loc 1 452 0
 231              		.cfi_startproc
 232              	.LVL12:
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Prevent unused argument(s) compilation warning */
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(hdac);
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(Channel);
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(pData);
ARM GAS  /tmp/ccNRPv4k.s 			page 13


 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(Length);
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(Alignment);
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Note : This function is defined into this file for library reference. */
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /*        Function content is located into file stm32f0xx_hal_dac_ex.c   */
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Return error status as not implemented here */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   return HAL_ERROR;
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 233              		.loc 1 465 0
 234 0000 0120     		movs	r0, #1
 235              	.LVL13:
 236              		@ sp needed
 237 0002 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE41:
 241              		.section	.text.HAL_DAC_Stop_DMA,"ax",%progbits
 242              		.align	1
 243              		.global	HAL_DAC_Stop_DMA
 244              		.syntax unified
 245              		.code	16
 246              		.thumb_func
 247              		.fpu softvfp
 249              	HAL_DAC_Stop_DMA:
 250              	.LFB42:
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Disables DAC and stop conversion of channel.
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  Channel: The selected DAC channel. 
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *          This parameter can be one of the following values:
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_1: DAC Channel1 selected
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_2: DAC Channel2 selected   
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval HAL status
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** HAL_StatusTypeDef HAL_DAC_Stop_DMA(DAC_HandleTypeDef* hdac, uint32_t Channel)
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 251              		.loc 1 478 0
 252              		.cfi_startproc
 253              	.LVL14:
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****    HAL_StatusTypeDef status = HAL_OK;
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Check the parameters */
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   assert_param(IS_DAC_CHANNEL(Channel));
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Disable the selected DAC channel DMA request */
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     hdac->Instance->CR &= ~(DAC_CR_DMAEN1 << Channel);
 254              		.loc 1 485 0
 255 0000 0368     		ldr	r3, [r0]
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****    HAL_StatusTypeDef status = HAL_OK;
 256              		.loc 1 478 0
 257 0002 10B5     		push	{r4, lr}
 258              	.LCFI3:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
ARM GAS  /tmp/ccNRPv4k.s 			page 14


 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****    HAL_StatusTypeDef status = HAL_OK;
 262              		.loc 1 478 0
 263 0004 0400     		movs	r4, r0
 264              		.loc 1 485 0
 265 0006 8020     		movs	r0, #128
 266              	.LVL15:
 267 0008 4001     		lsls	r0, r0, #5
 268 000a 8840     		lsls	r0, r0, r1
 269 000c 1A68     		ldr	r2, [r3]
 270 000e 8243     		bics	r2, r0
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Disable the Peripheral */
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   __HAL_DAC_DISABLE(hdac, Channel);
 271              		.loc 1 488 0
 272 0010 0120     		movs	r0, #1
 273 0012 8840     		lsls	r0, r0, r1
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     
 274              		.loc 1 485 0
 275 0014 1A60     		str	r2, [r3]
 276              		.loc 1 488 0
 277 0016 1A68     		ldr	r2, [r3]
 278 0018 8243     		bics	r2, r0
 279 001a 1A60     		str	r2, [r3]
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Disable the DMA channel */
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Channel1 is used */
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   if (Channel == DAC_CHANNEL_1)
 280              		.loc 1 492 0
 281 001c 0029     		cmp	r1, #0
 282 001e 0DD1     		bne	.L14
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     /* Disable the DMA channel */
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     status = HAL_DMA_Abort(hdac->DMA_Handle1);   
 283              		.loc 1 495 0
 284 0020 A068     		ldr	r0, [r4, #8]
 285 0022 FFF7FEFF 		bl	HAL_DMA_Abort
 286              	.LVL16:
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     /* Disable the DAC DMA underrun interrupt */
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     __HAL_DAC_DISABLE_IT(hdac, DAC_IT_DMAUDR1);
 287              		.loc 1 498 0
 288 0026 2268     		ldr	r2, [r4]
 289 0028 0849     		ldr	r1, .L20
 290 002a 1368     		ldr	r3, [r2]
 291              	.LVL17:
 292              	.L18:
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   }
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** #if defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || \
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     defined(STM32F091xC) || defined (STM32F098xx)
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Does not apply to STM32F051x8 & STM32F058xx */
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   else /* Channel2 is used for */
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     /* Disable the DMA channel */
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     status = HAL_DMA_Abort(hdac->DMA_Handle2);   
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     
ARM GAS  /tmp/ccNRPv4k.s 			page 15


 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     /* Disable the DAC DMA underrun interrupt */
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     __HAL_DAC_DISABLE_IT(hdac, DAC_IT_DMAUDR2);
 293              		.loc 1 511 0
 294 002c 0B40     		ands	r3, r1
 295 002e 1360     		str	r3, [r2]
 296              	.LVL18:
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   }
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** #endif /* STM32F071xB || STM32F072xB || STM32F078xx || */
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****        /* STM32F091xC || STM32F098xx */ 
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Check if DMA Channel effectively disabled */
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   if (status != HAL_OK)
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Update DAC state machine to error */
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   hdac->State = HAL_DAC_STATE_ERROR; 
 297              		.loc 1 520 0
 298 0030 0423     		movs	r3, #4
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {
 299              		.loc 1 517 0
 300 0032 0028     		cmp	r0, #0
 301 0034 00D1     		bne	.L19
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   }
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   else
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Change DAC state */
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   hdac->State = HAL_DAC_STATE_READY;
 302              		.loc 1 525 0
 303 0036 0123     		movs	r3, #1
 304              	.L19:
 305 0038 2371     		strb	r3, [r4, #4]
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   }
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Return function status */
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   return status;
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 306              		.loc 1 530 0
 307              		@ sp needed
 308              	.LVL19:
 309 003a 10BD     		pop	{r4, pc}
 310              	.LVL20:
 311              	.L14:
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     
 312              		.loc 1 508 0
 313 003c E068     		ldr	r0, [r4, #12]
 314 003e FFF7FEFF 		bl	HAL_DMA_Abort
 315              	.LVL21:
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   }
 316              		.loc 1 511 0
 317 0042 2268     		ldr	r2, [r4]
 318 0044 0249     		ldr	r1, .L20+4
 319 0046 1368     		ldr	r3, [r2]
 320 0048 F0E7     		b	.L18
 321              	.L21:
 322 004a C046     		.align	2
 323              	.L20:
 324 004c FFDFFFFF 		.word	-8193
 325 0050 FFFFFFDF 		.word	-536870913
ARM GAS  /tmp/ccNRPv4k.s 			page 16


 326              		.cfi_endproc
 327              	.LFE42:
 329              		.section	.text.HAL_DAC_IRQHandler,"ax",%progbits
 330              		.align	1
 331              		.weak	HAL_DAC_IRQHandler
 332              		.syntax unified
 333              		.code	16
 334              		.thumb_func
 335              		.fpu softvfp
 337              	HAL_DAC_IRQHandler:
 338              	.LFB60:
 339              		.cfi_startproc
 340              		@ sp needed
 341 0000 7047     		bx	lr
 342              		.cfi_endproc
 343              	.LFE60:
 345              		.section	.text.HAL_DAC_SetValue,"ax",%progbits
 346              		.align	1
 347              		.global	HAL_DAC_SetValue
 348              		.syntax unified
 349              		.code	16
 350              		.thumb_func
 351              		.fpu softvfp
 353              	HAL_DAC_SetValue:
 354              	.LFB44:
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Handles DAC interrupt request  
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval None
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** __weak void HAL_DAC_IRQHandler(DAC_HandleTypeDef* hdac)
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Prevent unused argument(s) compilation warning */
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(hdac);
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Note : This function is defined into this file for library reference. */
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /*        Function content is located into file stm32f0xx_hal_dac_ex.c   */
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Set the specified data holding register value for DAC channel.
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  Channel: The selected DAC channel. 
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *          This parameter can be one of the following values:
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_1: DAC Channel1 selected
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_2: DAC Channel2 selected  
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  Alignment: Specifies the data alignment.
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *          This parameter can be one of the following values:
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_ALIGN_8B_R: 8bit right data alignment selected
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_ALIGN_12B_L: 12bit left data alignment selected
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval HAL status
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
ARM GAS  /tmp/ccNRPv4k.s 			page 17


 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, u
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {  
 355              		.loc 1 564 0
 356              		.cfi_startproc
 357              	.LVL22:
 358              		.loc 1 564 0
 359 0000 13B5     		push	{r0, r1, r4, lr}
 360              	.LCFI4:
 361              		.cfi_def_cfa_offset 16
 362              		.cfi_offset 0, -16
 363              		.cfi_offset 1, -12
 364              		.cfi_offset 4, -8
 365              		.cfi_offset 14, -4
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   __IO uint32_t tmp = 0;
 366              		.loc 1 565 0
 367 0002 0024     		movs	r4, #0
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Check the parameters */
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   assert_param(IS_DAC_CHANNEL(Channel));
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   assert_param(IS_DAC_ALIGN(Alignment));
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   assert_param(IS_DAC_DATA(Data));
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   tmp = (uint32_t)hdac->Instance; 
 368              		.loc 1 572 0
 369 0004 0068     		ldr	r0, [r0]
 370              	.LVL23:
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   __IO uint32_t tmp = 0;
 371              		.loc 1 565 0
 372 0006 0194     		str	r4, [sp, #4]
 373              		.loc 1 572 0
 374 0008 0190     		str	r0, [sp, #4]
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   if(Channel == DAC_CHANNEL_1)
 375              		.loc 1 573 0
 376 000a A142     		cmp	r1, r4
 377 000c 07D1     		bne	.L24
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 378              		.loc 1 575 0
 379 000e 0199     		ldr	r1, [sp, #4]
 380              	.LVL24:
 381 0010 0831     		adds	r1, r1, #8
 382              	.L26:
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   }
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   else
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   {
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 383              		.loc 1 579 0
 384 0012 8A18     		adds	r2, r1, r2
 385              	.LVL25:
 386 0014 0192     		str	r2, [sp, #4]
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   }
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Set the DAC channel1 selected data holding register */
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *(__IO uint32_t *) tmp = Data;
 387              		.loc 1 583 0
 388 0016 019A     		ldr	r2, [sp, #4]
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
ARM GAS  /tmp/ccNRPv4k.s 			page 18


 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Return function status */
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   return HAL_OK;
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 389              		.loc 1 587 0
 390 0018 0020     		movs	r0, #0
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 391              		.loc 1 583 0
 392 001a 1360     		str	r3, [r2]
 393              		.loc 1 587 0
 394              		@ sp needed
 395 001c 16BD     		pop	{r1, r2, r4, pc}
 396              	.LVL26:
 397              	.L24:
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   }
 398              		.loc 1 579 0
 399 001e 0199     		ldr	r1, [sp, #4]
 400              	.LVL27:
 401 0020 1431     		adds	r1, r1, #20
 402 0022 F6E7     		b	.L26
 403              		.cfi_endproc
 404              	.LFE44:
 406              		.section	.text.HAL_DAC_ConvCpltCallbackCh1,"ax",%progbits
 407              		.align	1
 408              		.weak	HAL_DAC_ConvCpltCallbackCh1
 409              		.syntax unified
 410              		.code	16
 411              		.thumb_func
 412              		.fpu softvfp
 414              	HAL_DAC_ConvCpltCallbackCh1:
 415              	.LFB58:
 416              		.cfi_startproc
 417              		@ sp needed
 418 0000 7047     		bx	lr
 419              		.cfi_endproc
 420              	.LFE58:
 422              		.section	.text.HAL_DAC_ConvHalfCpltCallbackCh1,"ax",%progbits
 423              		.align	1
 424              		.weak	HAL_DAC_ConvHalfCpltCallbackCh1
 425              		.syntax unified
 426              		.code	16
 427              		.thumb_func
 428              		.fpu softvfp
 430              	HAL_DAC_ConvHalfCpltCallbackCh1:
 431              	.LFB56:
 432              		.cfi_startproc
 433              		@ sp needed
 434 0000 7047     		bx	lr
 435              		.cfi_endproc
 436              	.LFE56:
 438              		.section	.text.HAL_DAC_ErrorCallbackCh1,"ax",%progbits
 439              		.align	1
 440              		.weak	HAL_DAC_ErrorCallbackCh1
 441              		.syntax unified
 442              		.code	16
 443              		.thumb_func
 444              		.fpu softvfp
 446              	HAL_DAC_ErrorCallbackCh1:
ARM GAS  /tmp/ccNRPv4k.s 			page 19


 447              	.LFB54:
 448              		.cfi_startproc
 449              		@ sp needed
 450 0000 7047     		bx	lr
 451              		.cfi_endproc
 452              	.LFE54:
 454              		.section	.text.HAL_DAC_DMAUnderrunCallbackCh1,"ax",%progbits
 455              		.align	1
 456              		.weak	HAL_DAC_DMAUnderrunCallbackCh1
 457              		.syntax unified
 458              		.code	16
 459              		.thumb_func
 460              		.fpu softvfp
 462              	HAL_DAC_DMAUnderrunCallbackCh1:
 463              	.LFB48:
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Conversion complete callback in non blocking mode for Channel1 
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval None
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** __weak void HAL_DAC_ConvCpltCallbackCh1(DAC_HandleTypeDef* hdac)
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Prevent unused argument(s) compilation warning */
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(hdac);
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****             the HAL_DAC_ConvCpltCallbackCh1 could be implemented in the user file
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****    */
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Conversion half DMA transfer callback in non-blocking mode for Channel1 
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval None
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** __weak void HAL_DAC_ConvHalfCpltCallbackCh1(DAC_HandleTypeDef* hdac)
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Prevent unused argument(s) compilation warning */
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(hdac);
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****             the HAL_DAC_ConvHalfCpltCallbackCh1 could be implemented in the user file
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****    */
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Error DAC callback for Channel1.
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval None
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** __weak void HAL_DAC_ErrorCallbackCh1(DAC_HandleTypeDef *hdac)
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccNRPv4k.s 			page 20


 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(hdac);
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****             the HAL_DAC_ErrorCallbackCh1 could be implemented in the user file
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****    */
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  DMA underrun DAC callback for channel1.
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval None
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** __weak void HAL_DAC_DMAUnderrunCallbackCh1(DAC_HandleTypeDef *hdac)
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 464              		.loc 1 644 0
 465              		.cfi_startproc
 466              	.LVL28:
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Prevent unused argument(s) compilation warning */
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(hdac);
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****             the HAL_DAC_DMAUnderrunCallbackCh1 could be implemented in the user file
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****    */
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 467              		.loc 1 651 0
 468              		@ sp needed
 469 0000 7047     		bx	lr
 470              		.cfi_endproc
 471              	.LFE48:
 473              		.section	.text.HAL_DAC_GetValue,"ax",%progbits
 474              		.align	1
 475              		.weak	HAL_DAC_GetValue
 476              		.syntax unified
 477              		.code	16
 478              		.thumb_func
 479              		.fpu softvfp
 481              	HAL_DAC_GetValue:
 482              	.LFB49:
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @}
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /** @defgroup DAC_Exported_Functions_Group3 Peripheral Control functions
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****  *  @brief    Peripheral Control functions 
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****  *
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** @verbatim
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ==============================================================================
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****              ##### Peripheral Control functions #####
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ==============================================================================  
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     [..]  This section provides functions allowing to:
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Configure channels. 
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Get result of conversion.
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** @endverbatim
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @{
ARM GAS  /tmp/ccNRPv4k.s 			page 21


 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  Channel: The selected DAC channel. 
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *          This parameter can be one of the following values:
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_1: DAC Channel1 selected
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_2: DAC Channel2 selected
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval The selected DAC channel data output value.
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** __weak uint32_t HAL_DAC_GetValue(DAC_HandleTypeDef* hdac, uint32_t Channel)
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 483              		.loc 1 683 0
 484              		.cfi_startproc
 485              	.LVL29:
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Prevent unused argument(s) compilation warning */
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(hdac);
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(Channel);
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Note : This function is defined into this file for library reference. */
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /*        Function content is located into file stm32f0xx_hal_dac_ex.c   */
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Return error status as not implemented here */
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   return HAL_ERROR;
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 486              		.loc 1 693 0
 487 0000 0120     		movs	r0, #1
 488              	.LVL30:
 489              		@ sp needed
 490 0002 7047     		bx	lr
 491              		.cfi_endproc
 492              	.LFE49:
 494              		.section	.text.HAL_DAC_ConfigChannel,"ax",%progbits
 495              		.align	1
 496              		.weak	HAL_DAC_ConfigChannel
 497              		.syntax unified
 498              		.code	16
 499              		.thumb_func
 500              		.fpu softvfp
 502              	HAL_DAC_ConfigChannel:
 503              	.LFB50:
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Configures the selected DAC channel.
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  sConfig: DAC configuration structure.
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  Channel: The selected DAC channel. 
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *          This parameter can be one of the following values:
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_1: DAC Channel1 selected
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *            @arg DAC_CHANNEL_2: DAC Channel2 selected
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval HAL status
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** __weak HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sCo
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
ARM GAS  /tmp/ccNRPv4k.s 			page 22


 504              		.loc 1 707 0
 505              		.cfi_startproc
 506              	.LVL31:
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Prevent unused argument(s) compilation warning */
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(hdac);
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(sConfig);
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   UNUSED(Channel);
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Note : This function is defined into this file for library reference. */
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /*        Function content is located into file stm32f0xx_hal_dac_ex.c   */
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Return error status as not implemented here */
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   return HAL_ERROR;
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 507              		.loc 1 718 0
 508 0000 0120     		movs	r0, #1
 509              	.LVL32:
 510              		@ sp needed
 511 0002 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE50:
 515              		.section	.text.HAL_DAC_GetState,"ax",%progbits
 516              		.align	1
 517              		.global	HAL_DAC_GetState
 518              		.syntax unified
 519              		.code	16
 520              		.thumb_func
 521              		.fpu softvfp
 523              	HAL_DAC_GetState:
 524              	.LFB51:
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @}
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /** @defgroup DAC_Exported_Functions_Group4 Peripheral State and Errors functions
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****  *  @brief   Peripheral State and Errors functions 
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****  *
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** @verbatim   
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ==============================================================================
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****             ##### Peripheral State and Errors functions #####
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   ==============================================================================  
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     [..]
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****     This subsection provides functions allowing to
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Check the DAC state.
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****       (+) Check the DAC Errors.
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****         
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** @endverbatim
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @{
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  return the DAC handle state
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval HAL state
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
ARM GAS  /tmp/ccNRPv4k.s 			page 23


 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** HAL_DAC_StateTypeDef HAL_DAC_GetState(DAC_HandleTypeDef* hdac)
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 525              		.loc 1 747 0
 526              		.cfi_startproc
 527              	.LVL33:
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   /* Return DAC handle state */
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   return hdac->State;
 528              		.loc 1 749 0
 529 0000 0079     		ldrb	r0, [r0, #4]
 530              	.LVL34:
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 531              		.loc 1 750 0
 532              		@ sp needed
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 533              		.loc 1 749 0
 534 0002 C0B2     		uxtb	r0, r0
 535              		.loc 1 750 0
 536 0004 7047     		bx	lr
 537              		.cfi_endproc
 538              	.LFE51:
 540              		.section	.text.HAL_DAC_GetError,"ax",%progbits
 541              		.align	1
 542              		.global	HAL_DAC_GetError
 543              		.syntax unified
 544              		.code	16
 545              		.thumb_func
 546              		.fpu softvfp
 548              	HAL_DAC_GetError:
 549              	.LFB52:
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** 
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** /**
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @brief  Return the DAC error code
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @param  hdac: pointer to a DAC_HandleTypeDef structure that contains
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   *         the configuration information for the specified DAC.
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   * @retval DAC Error Code
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   */
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** uint32_t HAL_DAC_GetError(DAC_HandleTypeDef *hdac)
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** {
 550              		.loc 1 760 0
 551              		.cfi_startproc
 552              	.LVL35:
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c ****   return hdac->ErrorCode;
 553              		.loc 1 761 0
 554 0000 0069     		ldr	r0, [r0, #16]
 555              	.LVL36:
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dac.c **** }
 556              		.loc 1 762 0
 557              		@ sp needed
 558 0002 7047     		bx	lr
 559              		.cfi_endproc
 560              	.LFE52:
 562              		.text
 563              	.Letext0:
 564              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 565              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 566              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
ARM GAS  /tmp/ccNRPv4k.s 			page 24


 567              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 568              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 569              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 570              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 571              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 572              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 573              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 574              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dac.h"
ARM GAS  /tmp/ccNRPv4k.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_dac.c
     /tmp/ccNRPv4k.s:16     .text.HAL_DAC_MspInit:0000000000000000 $t
     /tmp/ccNRPv4k.s:23     .text.HAL_DAC_MspInit:0000000000000000 HAL_DAC_MspInit
     /tmp/ccNRPv4k.s:32     .text.HAL_DAC_Init:0000000000000000 $t
     /tmp/ccNRPv4k.s:39     .text.HAL_DAC_Init:0000000000000000 HAL_DAC_Init
     /tmp/ccNRPv4k.s:92     .text.HAL_DAC_MspDeInit:0000000000000000 $t
     /tmp/ccNRPv4k.s:99     .text.HAL_DAC_MspDeInit:0000000000000000 HAL_DAC_MspDeInit
     /tmp/ccNRPv4k.s:108    .text.HAL_DAC_DeInit:0000000000000000 $t
     /tmp/ccNRPv4k.s:115    .text.HAL_DAC_DeInit:0000000000000000 HAL_DAC_DeInit
     /tmp/ccNRPv4k.s:159    .text.HAL_DAC_Start:0000000000000000 $t
     /tmp/ccNRPv4k.s:166    .text.HAL_DAC_Start:0000000000000000 HAL_DAC_Start
     /tmp/ccNRPv4k.s:180    .text.HAL_DAC_Stop:0000000000000000 $t
     /tmp/ccNRPv4k.s:187    .text.HAL_DAC_Stop:0000000000000000 HAL_DAC_Stop
     /tmp/ccNRPv4k.s:221    .text.HAL_DAC_Start_DMA:0000000000000000 $t
     /tmp/ccNRPv4k.s:228    .text.HAL_DAC_Start_DMA:0000000000000000 HAL_DAC_Start_DMA
     /tmp/ccNRPv4k.s:242    .text.HAL_DAC_Stop_DMA:0000000000000000 $t
     /tmp/ccNRPv4k.s:249    .text.HAL_DAC_Stop_DMA:0000000000000000 HAL_DAC_Stop_DMA
     /tmp/ccNRPv4k.s:324    .text.HAL_DAC_Stop_DMA:000000000000004c $d
     /tmp/ccNRPv4k.s:330    .text.HAL_DAC_IRQHandler:0000000000000000 $t
     /tmp/ccNRPv4k.s:337    .text.HAL_DAC_IRQHandler:0000000000000000 HAL_DAC_IRQHandler
     /tmp/ccNRPv4k.s:346    .text.HAL_DAC_SetValue:0000000000000000 $t
     /tmp/ccNRPv4k.s:353    .text.HAL_DAC_SetValue:0000000000000000 HAL_DAC_SetValue
     /tmp/ccNRPv4k.s:407    .text.HAL_DAC_ConvCpltCallbackCh1:0000000000000000 $t
     /tmp/ccNRPv4k.s:414    .text.HAL_DAC_ConvCpltCallbackCh1:0000000000000000 HAL_DAC_ConvCpltCallbackCh1
     /tmp/ccNRPv4k.s:423    .text.HAL_DAC_ConvHalfCpltCallbackCh1:0000000000000000 $t
     /tmp/ccNRPv4k.s:430    .text.HAL_DAC_ConvHalfCpltCallbackCh1:0000000000000000 HAL_DAC_ConvHalfCpltCallbackCh1
     /tmp/ccNRPv4k.s:439    .text.HAL_DAC_ErrorCallbackCh1:0000000000000000 $t
     /tmp/ccNRPv4k.s:446    .text.HAL_DAC_ErrorCallbackCh1:0000000000000000 HAL_DAC_ErrorCallbackCh1
     /tmp/ccNRPv4k.s:455    .text.HAL_DAC_DMAUnderrunCallbackCh1:0000000000000000 $t
     /tmp/ccNRPv4k.s:462    .text.HAL_DAC_DMAUnderrunCallbackCh1:0000000000000000 HAL_DAC_DMAUnderrunCallbackCh1
     /tmp/ccNRPv4k.s:474    .text.HAL_DAC_GetValue:0000000000000000 $t
     /tmp/ccNRPv4k.s:481    .text.HAL_DAC_GetValue:0000000000000000 HAL_DAC_GetValue
     /tmp/ccNRPv4k.s:495    .text.HAL_DAC_ConfigChannel:0000000000000000 $t
     /tmp/ccNRPv4k.s:502    .text.HAL_DAC_ConfigChannel:0000000000000000 HAL_DAC_ConfigChannel
     /tmp/ccNRPv4k.s:516    .text.HAL_DAC_GetState:0000000000000000 $t
     /tmp/ccNRPv4k.s:523    .text.HAL_DAC_GetState:0000000000000000 HAL_DAC_GetState
     /tmp/ccNRPv4k.s:541    .text.HAL_DAC_GetError:0000000000000000 $t
     /tmp/ccNRPv4k.s:548    .text.HAL_DAC_GetError:0000000000000000 HAL_DAC_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Abort

ARM GAS  /tmp/ccWGxEc3.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB44:
  25              		.cfi_startproc
  26              		@ sp needed
  27 0000 7047     		bx	lr
  28              		.cfi_endproc
  29              	.LFE44:
  31              		.section	.text.HardFault_Handler,"ax",%progbits
  32              		.align	1
  33              		.global	HardFault_Handler
  34              		.syntax unified
  35              		.code	16
  36              		.thumb_func
  37              		.fpu softvfp
  39              	HardFault_Handler:
  40              	.LFB36:
  41              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /**
   2:Src/stm32f0xx_it.c ****   ******************************************************************************
   3:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   4:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f0xx_it.c ****   ******************************************************************************
   6:Src/stm32f0xx_it.c ****   *
   7:Src/stm32f0xx_it.c ****   * COPYRIGHT(c) 2016 STMicroelectronics
   8:Src/stm32f0xx_it.c ****   *
   9:Src/stm32f0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f0xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f0xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f0xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f0xx_it.c ****   *
ARM GAS  /tmp/ccWGxEc3.s 			page 2


  20:Src/stm32f0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f0xx_it.c ****   *
  31:Src/stm32f0xx_it.c ****   ******************************************************************************
  32:Src/stm32f0xx_it.c ****   */
  33:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f0xx_it.c **** #include "stm32f0xx_hal.h"
  35:Src/stm32f0xx_it.c **** #include "stm32f0xx.h"
  36:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  37:Src/stm32f0xx_it.c **** 
  38:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f0xx_it.c **** 
  40:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f0xx_it.c **** 
  42:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_dac_ch1;
  44:Src/stm32f0xx_it.c **** 
  45:Src/stm32f0xx_it.c **** /******************************************************************************/
  46:Src/stm32f0xx_it.c **** /*            Cortex-M0 Processor Interruption and Exception Handlers         */ 
  47:Src/stm32f0xx_it.c **** /******************************************************************************/
  48:Src/stm32f0xx_it.c **** 
  49:Src/stm32f0xx_it.c **** /**
  50:Src/stm32f0xx_it.c **** * @brief This function handles Non maskable interrupt.
  51:Src/stm32f0xx_it.c **** */
  52:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  53:Src/stm32f0xx_it.c **** {
  54:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  55:Src/stm32f0xx_it.c **** 
  56:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  57:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  58:Src/stm32f0xx_it.c **** 
  59:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  60:Src/stm32f0xx_it.c **** }
  61:Src/stm32f0xx_it.c **** 
  62:Src/stm32f0xx_it.c **** /**
  63:Src/stm32f0xx_it.c **** * @brief This function handles Hard fault interrupt.
  64:Src/stm32f0xx_it.c **** */
  65:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  66:Src/stm32f0xx_it.c **** {
  42              		.loc 1 66 0
  43              		.cfi_startproc
  44              	.L3:
  45 0000 FEE7     		b	.L3
  46              		.cfi_endproc
  47              	.LFE36:
  49              		.section	.text.SVC_Handler,"ax",%progbits
  50              		.align	1
  51              		.global	SVC_Handler
  52              		.syntax unified
ARM GAS  /tmp/ccWGxEc3.s 			page 3


  53              		.code	16
  54              		.thumb_func
  55              		.fpu softvfp
  57              	SVC_Handler:
  58              	.LFB42:
  59              		.cfi_startproc
  60              		@ sp needed
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE42:
  65              		.section	.text.PendSV_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	PendSV_Handler
  68              		.syntax unified
  69              		.code	16
  70              		.thumb_func
  71              		.fpu softvfp
  73              	PendSV_Handler:
  74              	.LFB38:
  67:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  68:Src/stm32f0xx_it.c **** 
  69:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  70:Src/stm32f0xx_it.c ****   while (1)
  71:Src/stm32f0xx_it.c ****   {
  72:Src/stm32f0xx_it.c ****   }
  73:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  74:Src/stm32f0xx_it.c **** 
  75:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  76:Src/stm32f0xx_it.c **** }
  77:Src/stm32f0xx_it.c **** 
  78:Src/stm32f0xx_it.c **** /**
  79:Src/stm32f0xx_it.c **** * @brief This function handles System service call via SWI instruction.
  80:Src/stm32f0xx_it.c **** */
  81:Src/stm32f0xx_it.c **** void SVC_Handler(void)
  82:Src/stm32f0xx_it.c **** {
  83:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
  84:Src/stm32f0xx_it.c **** 
  85:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
  86:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
  87:Src/stm32f0xx_it.c **** 
  88:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
  89:Src/stm32f0xx_it.c **** }
  90:Src/stm32f0xx_it.c **** 
  91:Src/stm32f0xx_it.c **** /**
  92:Src/stm32f0xx_it.c **** * @brief This function handles Pendable request for system service.
  93:Src/stm32f0xx_it.c **** */
  94:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
  95:Src/stm32f0xx_it.c **** {
  75              		.loc 1 95 0
  76              		.cfi_startproc
  96:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
  97:Src/stm32f0xx_it.c **** 
  98:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
  99:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 100:Src/stm32f0xx_it.c **** 
 101:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 102:Src/stm32f0xx_it.c **** }
ARM GAS  /tmp/ccWGxEc3.s 			page 4


  77              		.loc 1 102 0
  78              		@ sp needed
  79 0000 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE38:
  83              		.section	.text.SysTick_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	SysTick_Handler
  86              		.syntax unified
  87              		.code	16
  88              		.thumb_func
  89              		.fpu softvfp
  91              	SysTick_Handler:
  92              	.LFB39:
 103:Src/stm32f0xx_it.c **** 
 104:Src/stm32f0xx_it.c **** /**
 105:Src/stm32f0xx_it.c **** * @brief This function handles System tick timer.
 106:Src/stm32f0xx_it.c **** */
 107:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 108:Src/stm32f0xx_it.c **** {
  93              		.loc 1 108 0
  94              		.cfi_startproc
  95 0000 10B5     		push	{r4, lr}
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 109:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 110:Src/stm32f0xx_it.c **** 
 111:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 112:Src/stm32f0xx_it.c ****   HAL_IncTick();
 100              		.loc 1 112 0
 101 0002 FFF7FEFF 		bl	HAL_IncTick
 102              	.LVL0:
 113:Src/stm32f0xx_it.c ****   HAL_SYSTICK_IRQHandler();
 114:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 115:Src/stm32f0xx_it.c **** 
 116:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 117:Src/stm32f0xx_it.c **** }
 103              		.loc 1 117 0
 104              		@ sp needed
 113:Src/stm32f0xx_it.c ****   HAL_SYSTICK_IRQHandler();
 105              		.loc 1 113 0
 106 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 107              	.LVL1:
 108              		.loc 1 117 0
 109 000a 10BD     		pop	{r4, pc}
 110              		.cfi_endproc
 111              	.LFE39:
 113              		.section	.text.DMA1_Channel2_3_IRQHandler,"ax",%progbits
 114              		.align	1
 115              		.global	DMA1_Channel2_3_IRQHandler
 116              		.syntax unified
 117              		.code	16
 118              		.thumb_func
 119              		.fpu softvfp
 121              	DMA1_Channel2_3_IRQHandler:
ARM GAS  /tmp/ccWGxEc3.s 			page 5


 122              	.LFB40:
 118:Src/stm32f0xx_it.c **** 
 119:Src/stm32f0xx_it.c **** /******************************************************************************/
 120:Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 121:Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 122:Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 123:Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 124:Src/stm32f0xx_it.c **** /******************************************************************************/
 125:Src/stm32f0xx_it.c **** 
 126:Src/stm32f0xx_it.c **** /**
 127:Src/stm32f0xx_it.c **** * @brief This function handles DMA1 channel 2 and 3 interrupts.
 128:Src/stm32f0xx_it.c **** */
 129:Src/stm32f0xx_it.c **** void DMA1_Channel2_3_IRQHandler(void)
 130:Src/stm32f0xx_it.c **** {
 123              		.loc 1 130 0
 124              		.cfi_startproc
 125 0000 10B5     		push	{r4, lr}
 126              	.LCFI1:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
 131:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */
 132:Src/stm32f0xx_it.c **** 
 133:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 0 */
 134:Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac_ch1);
 130              		.loc 1 134 0
 131 0002 0248     		ldr	r0, .L8
 132 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 133              	.LVL2:
 135:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */
 136:Src/stm32f0xx_it.c **** 
 137:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 1 */
 138:Src/stm32f0xx_it.c **** }
 134              		.loc 1 138 0
 135              		@ sp needed
 136 0008 10BD     		pop	{r4, pc}
 137              	.L9:
 138 000a C046     		.align	2
 139              	.L8:
 140 000c 00000000 		.word	hdma_dac_ch1
 141              		.cfi_endproc
 142              	.LFE40:
 144              		.text
 145              	.Letext0:
 146              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 147              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 148              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 149              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 150              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 151              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 152              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 153              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 154              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 155              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 156              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 157              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccWGxEc3.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_it.c
     /tmp/ccWGxEc3.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccWGxEc3.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccWGxEc3.s:32     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccWGxEc3.s:39     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccWGxEc3.s:50     .text.SVC_Handler:0000000000000000 $t
     /tmp/ccWGxEc3.s:57     .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccWGxEc3.s:66     .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccWGxEc3.s:73     .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccWGxEc3.s:84     .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccWGxEc3.s:91     .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccWGxEc3.s:114    .text.DMA1_Channel2_3_IRQHandler:0000000000000000 $t
     /tmp/ccWGxEc3.s:121    .text.DMA1_Channel2_3_IRQHandler:0000000000000000 DMA1_Channel2_3_IRQHandler
     /tmp/ccWGxEc3.s:140    .text.DMA1_Channel2_3_IRQHandler:000000000000000c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_DMA_IRQHandler
hdma_dac_ch1

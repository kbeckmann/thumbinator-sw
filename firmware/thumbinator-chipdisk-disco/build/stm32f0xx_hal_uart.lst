ARM GAS  /tmp/ccjaQwTr.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_UART_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_UART_MspInit:
  24              	.LFB88:
  25              		.cfi_startproc
  26              		@ sp needed
  27 0000 7047     		bx	lr
  28              		.cfi_endproc
  29              	.LFE88:
  31              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
  32              		.align	1
  33              		.weak	HAL_UART_MspDeInit
  34              		.syntax unified
  35              		.code	16
  36              		.thumb_func
  37              		.fpu softvfp
  39              	HAL_UART_MspDeInit:
  40              	.LFB86:
  41              		.cfi_startproc
  42              		@ sp needed
  43 0000 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE86:
  47              		.section	.text.HAL_UART_DeInit,"ax",%progbits
  48              		.align	1
  49              		.global	HAL_UART_DeInit
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  53              		.fpu softvfp
  55              	HAL_UART_DeInit:
  56              	.LFB38:
  57              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @file    stm32f0xx_hal_uart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @version V1.4.0
ARM GAS  /tmp/ccjaQwTr.s 			page 2


   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @date    27-May-2016
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + IO operation functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral Control functions
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @verbatim
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                         ##### How to use this driver #####
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   [..]
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART pins configuration:
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART interrupts handling:
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_UART_Init() API.
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjaQwTr.s 			page 3


  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (@) These APIs(HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         Three operation modes are available within this driver :     
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      =================================
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** DMA mode IO operation ***    
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ==============================
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** UART HAL driver macros list ***
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ============================================= 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
ARM GAS  /tmp/ccjaQwTr.s 			page 4


 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @endverbatim
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @attention
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      without specific prior written permission.
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #include "stm32f0xx_hal.h"
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART UART
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief HAL UART module driver
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_TEACK_REACK_TIMEOUT ((uint32_t) 1000)              /*!< UART TX or RX enable acknowled
ARM GAS  /tmp/ccjaQwTr.s 			page 5


 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** ===============================================================================
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in asynchronous mode.
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Baud Rate
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Word Length
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Stop Bit
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Parity
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Hardware flow control
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Over Sampling Method
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) data logical level inversion
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX and TX pins swap
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX overrun detection disabling
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA disabling on RX error
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) MSB first on communication line
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) auto Baud rate detection
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init() and HAL_MultiProcessor_Init()
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex and multiprocessor mode
ARM GAS  /tmp/ccjaQwTr.s 			page 6


 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual).
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /*
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Additional Table:  If the parity is enabled, then the MSB bit of the data written
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      in the data register is transmitted but is changed by the parity bit.
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      According to device capability (support or not of 7-bit word length),
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      frame length is either defined by the M bit (8-bits or 9-bits)
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      Possible UART frame formats are as listed in the following table:
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       Table 1. UART frame format.             
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and initialize the associated handle.
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjaQwTr.s 			page 7


 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_CLKEN);
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL);
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_HDSEL | USART_CR3_IREN);
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_HDSEL);
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
ARM GAS  /tmp/ccjaQwTr.s 			page 8


 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART instance */
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), and IREN (if IrDA is supported)  bits in the USART_CR3 regist
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_CLKEN);
ARM GAS  /tmp/ccjaQwTr.s 			page 9


 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_IREN);
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_SCEN);
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_IREN);
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 |= USART_CR3_HDSEL;
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and initialize the associated handle.
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Address: UART node address (4-, 6-, 7- or 8-bit long).
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param WakeUpMethod: specifies the UART wakeup method.
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg UART_WAKEUPMETHOD_IDLELINE: WakeUp by an idle line detection
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg UART_WAKEUPMETHOD_ADDRESSMARK: WakeUp by an address mark
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the wake up method parameter */
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
ARM GAS  /tmp/ccjaQwTr.s 			page 10


 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_CLKEN);
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL);
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_HDSEL | USART_CR3_IREN);
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_HDSEL);
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
ARM GAS  /tmp/ccjaQwTr.s 			page 11


 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  58              		.loc 1 527 0
  59              		.cfi_startproc
  60              	.LVL0:
  61              		.loc 1 527 0
  62 0000 70B5     		push	{r4, r5, r6, lr}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 16
  65              		.cfi_offset 4, -16
  66              		.cfi_offset 5, -12
  67              		.cfi_offset 6, -8
  68              		.cfi_offset 14, -4
  69              		.loc 1 527 0
  70 0002 0500     		movs	r5, r0
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
  71              		.loc 1 531 0
  72 0004 0120     		movs	r0, #1
  73              	.LVL1:
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
  74              		.loc 1 529 0
  75 0006 002D     		cmp	r5, #0
  76 0008 16D0     		beq	.L4
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  77              		.loc 1 537 0
  78 000a 2E00     		movs	r6, r5
  79 000c 2423     		movs	r3, #36
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0;
  80              		.loc 1 542 0
  81 000e 0024     		movs	r4, #0
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  82              		.loc 1 537 0
  83 0010 6936     		adds	r6, r6, #105
  84 0012 3370     		strb	r3, [r6]
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  85              		.loc 1 540 0
  86 0014 2B68     		ldr	r3, [r5]
  87 0016 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccjaQwTr.s 			page 12


  88 0018 8243     		bics	r2, r0
  89 001a 1A60     		str	r2, [r3]
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0;
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0;
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
  90              		.loc 1 547 0
  91 001c 2800     		movs	r0, r5
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0;
  92              		.loc 1 542 0
  93 001e 1C60     		str	r4, [r3]
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0;
  94              		.loc 1 543 0
  95 0020 5C60     		str	r4, [r3, #4]
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  96              		.loc 1 544 0
  97 0022 9C60     		str	r4, [r3, #8]
  98              		.loc 1 547 0
  99 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 100              	.LVL2:
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 101              		.loc 1 551 0
 102 0028 2B00     		movs	r3, r5
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlock */
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 103              		.loc 1 556 0
 104 002a 2000     		movs	r0, r4
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 105              		.loc 1 549 0
 106 002c EC66     		str	r4, [r5, #108]
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 107              		.loc 1 551 0
 108 002e 6A33     		adds	r3, r3, #106
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 109              		.loc 1 554 0
 110 0030 6835     		adds	r5, r5, #104
 111              	.LVL3:
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 112              		.loc 1 550 0
 113 0032 3470     		strb	r4, [r6]
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 114              		.loc 1 551 0
 115 0034 1C70     		strb	r4, [r3]
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 116              		.loc 1 554 0
 117 0036 2C70     		strb	r4, [r5]
 118              	.LVL4:
 119              	.L4:
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 120              		.loc 1 557 0
ARM GAS  /tmp/ccjaQwTr.s 			page 13


 121              		@ sp needed
 122 0038 70BD     		pop	{r4, r5, r6, pc}
 123              		.cfi_endproc
 124              	.LFE38:
 126              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 127              		.align	1
 128              		.global	HAL_UART_Transmit_IT
 129              		.syntax unified
 130              		.code	16
 131              		.thumb_func
 132              		.fpu softvfp
 134              	HAL_UART_Transmit_IT:
 135              	.LFB43:
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief UART Transmit/Receive functions
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### IO operation functions #####
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and Half duplex data transfers.
ARM GAS  /tmp/ccjaQwTr.s 			page 14


 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) There are two mode of transfer:
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             after finishing transfer.
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) No-Blocking mode: The communication is performed using Interrupts
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            using DMA mode.
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Blocking mode API's are :
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive()
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) No-Blocking mode API's with DMA are :
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in No_Blocking mode:
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: Pointer to data buffer.
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: Amount of data to be sent.
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
ARM GAS  /tmp/ccjaQwTr.s 			page 15


 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    uint16_t* tmp;
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, Timeout) != HAL_OK)
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFF);
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, Timeout) != HAL_OK)
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjaQwTr.s 			page 16


 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: amount of data to be received.
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask;
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
ARM GAS  /tmp/ccjaQwTr.s 			page 17


 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* as long as data have to be received */
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->RxXferCount > 0)
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount--;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2;
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: amount of data to be sent.
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 136              		.loc 1 822 0
 137              		.cfi_startproc
 138              	.LVL5:
 139 0000 70B5     		push	{r4, r5, r6, lr}
 140              	.LCFI1:
 141              		.cfi_def_cfa_offset 16
 142              		.cfi_offset 4, -16
ARM GAS  /tmp/ccjaQwTr.s 			page 18


 143              		.cfi_offset 5, -12
 144              		.cfi_offset 6, -8
 145              		.cfi_offset 14, -4
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 146              		.loc 1 824 0
 147 0002 0600     		movs	r6, r0
 148 0004 6936     		adds	r6, r6, #105
 149 0006 3378     		ldrb	r3, [r6]
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 150              		.loc 1 822 0
 151 0008 0400     		movs	r4, r0
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 152              		.loc 1 862 0
 153 000a 0220     		movs	r0, #2
 154              	.LVL6:
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 155              		.loc 1 824 0
 156 000c 202B     		cmp	r3, #32
 157 000e 24D1     		bne	.L7
ARM GAS  /tmp/ccjaQwTr.s 			page 19


 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 158              		.loc 1 828 0
 159 0010 0138     		subs	r0, r0, #1
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 160              		.loc 1 826 0
 161 0012 0029     		cmp	r1, #0
 162 0014 21D0     		beq	.L7
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 163              		.loc 1 826 0 is_stmt 0 discriminator 1
 164 0016 002A     		cmp	r2, #0
 165 0018 1FD0     		beq	.L7
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 166              		.loc 1 834 0 is_stmt 1
 167 001a 8023     		movs	r3, #128
 168 001c A568     		ldr	r5, [r4, #8]
 169 001e 5B01     		lsls	r3, r3, #5
 170 0020 9D42     		cmp	r5, r3
 171 0022 04D1     		bne	.L8
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 172              		.loc 1 834 0 is_stmt 0 discriminator 1
 173 0024 2369     		ldr	r3, [r4, #16]
 174 0026 002B     		cmp	r3, #0
 175 0028 01D1     		bne	.L8
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 176              		.loc 1 836 0 is_stmt 1
 177 002a 0142     		tst	r1, r0
 178 002c 15D1     		bne	.L7
 179              	.L8:
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 180              		.loc 1 843 0
 181 002e 2500     		movs	r5, r4
 182 0030 6835     		adds	r5, r5, #104
 183 0032 2B78     		ldrb	r3, [r5]
 184              		.loc 1 862 0
 185 0034 0220     		movs	r0, #2
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 186              		.loc 1 843 0
 187 0036 012B     		cmp	r3, #1
 188 0038 0FD0     		beq	.L7
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 189              		.loc 1 846 0 discriminator 2
 190 003a 2300     		movs	r3, r4
 191 003c 5033     		adds	r3, r3, #80
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 192              		.loc 1 845 0 discriminator 2
 193 003e E164     		str	r1, [r4, #76]
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 194              		.loc 1 846 0 discriminator 2
 195 0040 1A80     		strh	r2, [r3]
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 196              		.loc 1 847 0 discriminator 2
 197 0042 5A80     		strh	r2, [r3, #2]
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 198              		.loc 1 849 0 discriminator 2
 199 0044 0023     		movs	r3, #0
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 200              		.loc 1 850 0 discriminator 2
ARM GAS  /tmp/ccjaQwTr.s 			page 20


 201 0046 2122     		movs	r2, #33
 202              	.LVL7:
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 203              		.loc 1 856 0 discriminator 2
 204 0048 2168     		ldr	r1, [r4]
 205              	.LVL8:
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 206              		.loc 1 849 0 discriminator 2
 207 004a E366     		str	r3, [r4, #108]
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 208              		.loc 1 850 0 discriminator 2
 209 004c 3270     		strb	r2, [r6]
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 210              		.loc 1 856 0 discriminator 2
 211 004e 0868     		ldr	r0, [r1]
 212 0050 5F32     		adds	r2, r2, #95
 213 0052 0243     		orrs	r2, r0
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 214              		.loc 1 858 0 discriminator 2
 215 0054 1800     		movs	r0, r3
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 216              		.loc 1 853 0 discriminator 2
 217 0056 2B70     		strb	r3, [r5]
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 218              		.loc 1 856 0 discriminator 2
 219 0058 0A60     		str	r2, [r1]
 220              	.LVL9:
 221              	.L7:
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 222              		.loc 1 864 0
 223              		@ sp needed
 224              	.LVL10:
 225              	.LVL11:
 226 005a 70BD     		pop	{r4, r5, r6, pc}
 227              		.cfi_endproc
 228              	.LFE43:
 230              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 231              		.align	1
 232              		.global	HAL_UART_Receive_IT
 233              		.syntax unified
 234              		.code	16
 235              		.thumb_func
 236              		.fpu softvfp
 238              	HAL_UART_Receive_IT:
 239              	.LFB44:
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: amount of data to be received.
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccjaQwTr.s 			page 21


 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 240              		.loc 1 878 0
 241              		.cfi_startproc
 242              	.LVL12:
 243 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 244              	.LCFI2:
 245              		.cfi_def_cfa_offset 20
 246              		.cfi_offset 4, -20
 247              		.cfi_offset 5, -16
 248              		.cfi_offset 6, -12
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 251              		.loc 1 880 0
 252 0002 0600     		movs	r6, r0
 253 0004 6A36     		adds	r6, r6, #106
 254 0006 3478     		ldrb	r4, [r6]
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 255              		.loc 1 878 0
 256 0008 0300     		movs	r3, r0
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
ARM GAS  /tmp/ccjaQwTr.s 			page 22


 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 257              		.loc 1 927 0
 258 000a 0220     		movs	r0, #2
 259              	.LVL13:
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 260              		.loc 1 880 0
 261 000c 202C     		cmp	r4, #32
 262 000e 38D1     		bne	.L17
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 263              		.loc 1 884 0
 264 0010 0138     		subs	r0, r0, #1
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 265              		.loc 1 882 0
 266 0012 0029     		cmp	r1, #0
 267 0014 35D0     		beq	.L17
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 268              		.loc 1 882 0 is_stmt 0 discriminator 1
 269 0016 002A     		cmp	r2, #0
 270 0018 33D0     		beq	.L17
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 271              		.loc 1 890 0 is_stmt 1
 272 001a 8025     		movs	r5, #128
 273 001c 9C68     		ldr	r4, [r3, #8]
 274 001e 6D01     		lsls	r5, r5, #5
 275 0020 AC42     		cmp	r4, r5
 276 0022 04D1     		bne	.L18
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 277              		.loc 1 890 0 is_stmt 0 discriminator 1
 278 0024 1D69     		ldr	r5, [r3, #16]
 279 0026 002D     		cmp	r5, #0
 280 0028 01D1     		bne	.L18
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 281              		.loc 1 892 0 is_stmt 1
 282 002a 0142     		tst	r1, r0
 283 002c 29D1     		bne	.L17
 284              	.L18:
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 285              		.loc 1 899 0
 286 002e 1D00     		movs	r5, r3
 287 0030 6835     		adds	r5, r5, #104
 288 0032 2F78     		ldrb	r7, [r5]
 289              		.loc 1 927 0
 290 0034 0220     		movs	r0, #2
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 291              		.loc 1 899 0
ARM GAS  /tmp/ccjaQwTr.s 			page 23


 292 0036 012F     		cmp	r7, #1
 293 0038 23D0     		beq	.L17
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 294              		.loc 1 899 0 is_stmt 0 discriminator 2
 295 003a 0138     		subs	r0, r0, #1
 296 003c 2870     		strb	r0, [r5]
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 297              		.loc 1 901 0 is_stmt 1 discriminator 2
 298 003e 5965     		str	r1, [r3, #84]
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 299              		.loc 1 902 0 discriminator 2
 300 0040 1900     		movs	r1, r3
 301              	.LVL14:
 302 0042 5831     		adds	r1, r1, #88
 303              	.LVL15:
 304 0044 0A80     		strh	r2, [r1]
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 305              		.loc 1 903 0 discriminator 2
 306 0046 4A80     		strh	r2, [r1, #2]
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 307              		.loc 1 906 0 discriminator 2
 308 0048 8022     		movs	r2, #128
 309              	.LVL16:
 310 004a 5201     		lsls	r2, r2, #5
 311 004c 9442     		cmp	r4, r2
 312 004e 1BD1     		bne	.L19
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 313              		.loc 1 906 0 is_stmt 0 discriminator 1
 314 0050 1A69     		ldr	r2, [r3, #16]
 315 0052 002A     		cmp	r2, #0
 316 0054 16D1     		bne	.L20
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 317              		.loc 1 906 0 discriminator 3
 318 0056 1449     		ldr	r1, .L38
 319              	.LVL17:
 320              	.L37:
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 321              		.loc 1 906 0 discriminator 11
 322 0058 1A00     		movs	r2, r3
 323 005a 5C32     		adds	r2, r2, #92
 324 005c 1180     		strh	r1, [r2]
 325              	.L21:
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 326              		.loc 1 908 0 is_stmt 1
 327 005e 0020     		movs	r0, #0
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 328              		.loc 1 909 0
 329 0060 2222     		movs	r2, #34
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 330              		.loc 1 908 0
 331 0062 D866     		str	r0, [r3, #108]
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 332              		.loc 1 912 0
 333 0064 1B68     		ldr	r3, [r3]
 334              	.LVL18:
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 335              		.loc 1 909 0
ARM GAS  /tmp/ccjaQwTr.s 			page 24


 336 0066 3270     		strb	r2, [r6]
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 337              		.loc 1 912 0
 338 0068 1968     		ldr	r1, [r3]
 339 006a DE32     		adds	r2, r2, #222
 340 006c 0A43     		orrs	r2, r1
 341 006e 1A60     		str	r2, [r3]
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 342              		.loc 1 915 0
 343 0070 0122     		movs	r2, #1
 344 0072 9968     		ldr	r1, [r3, #8]
 345 0074 0A43     		orrs	r2, r1
 346 0076 9A60     		str	r2, [r3, #8]
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 347              		.loc 1 921 0
 348 0078 2022     		movs	r2, #32
 349 007a 1968     		ldr	r1, [r3]
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 350              		.loc 1 918 0
 351 007c 2870     		strb	r0, [r5]
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 352              		.loc 1 921 0
 353 007e 0A43     		orrs	r2, r1
 354 0080 1A60     		str	r2, [r3]
 355              	.LVL19:
 356              	.L17:
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 357              		.loc 1 929 0
 358              		@ sp needed
 359              	.LVL20:
 360 0082 F0BD     		pop	{r4, r5, r6, r7, pc}
 361              	.LVL21:
 362              	.L20:
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 363              		.loc 1 906 0 discriminator 4
 364 0084 FF21     		movs	r1, #255
 365              	.LVL22:
 366 0086 E7E7     		b	.L37
 367              	.LVL23:
 368              	.L19:
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 369              		.loc 1 906 0 is_stmt 0 discriminator 2
 370 0088 002C     		cmp	r4, #0
 371 008a 04D1     		bne	.L22
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 372              		.loc 1 906 0 discriminator 5
 373 008c 1A69     		ldr	r2, [r3, #16]
 374 008e 002A     		cmp	r2, #0
 375 0090 F8D0     		beq	.L20
 376              	.L23:
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 377              		.loc 1 906 0 discriminator 8
 378 0092 7F21     		movs	r1, #127
 379              	.LVL24:
 380 0094 E0E7     		b	.L37
 381              	.LVL25:
ARM GAS  /tmp/ccjaQwTr.s 			page 25


 382              	.L22:
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 383              		.loc 1 906 0 discriminator 6
 384 0096 8022     		movs	r2, #128
 385 0098 5205     		lsls	r2, r2, #21
 386 009a 9442     		cmp	r4, r2
 387 009c DFD1     		bne	.L21
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 388              		.loc 1 906 0 discriminator 9
 389 009e 1A69     		ldr	r2, [r3, #16]
 390 00a0 002A     		cmp	r2, #0
 391 00a2 F6D0     		beq	.L23
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 392              		.loc 1 906 0 discriminator 11
 393 00a4 3F21     		movs	r1, #63
 394              	.LVL26:
 395 00a6 D7E7     		b	.L37
 396              	.L39:
 397              		.align	2
 398              	.L38:
 399 00a8 FF010000 		.word	511
 400              		.cfi_endproc
 401              	.LFE44:
 403              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 404              		.align	1
 405              		.global	HAL_UART_Transmit_DMA
 406              		.syntax unified
 407              		.code	16
 408              		.thumb_func
 409              		.fpu softvfp
 411              	HAL_UART_Transmit_DMA:
 412              	.LFB46:
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART parity error interrupt occurred -------------------------------------*/
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_PE) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_PE
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_PE;
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART frame error interrupt occurred --------------------------------------*/
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_FE) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_ER
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_FE;
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART noise error interrupt occurred --------------------------------------*/
ARM GAS  /tmp/ccjaQwTr.s 			page 26


 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_NE) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_ER
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_NE;
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART Over-Run interrupt occurred -----------------------------------------*/
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_ORE) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_E
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_ORE;
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred -------------------------------------*/
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_WUF) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_W
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Receiver ---------------------------------------------------*/
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_RXNE) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_Receive_IT(huart);
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_TXE) != RESET) &&(__HAL_UART_GET_IT_SOURCE(huart, UART_IT_TX
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_Transmit_IT(huart);
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  if((__HAL_UART_GET_IT(huart, UART_IT_TC) != RESET) &&(__HAL_UART_GET_IT_SOURCE(huart, UART_IT_TC) 
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the Tx/Rx process */
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_ErrorCallback(huart);
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }  
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
ARM GAS  /tmp/ccjaQwTr.s 			page 27


1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: amount of data to be sent.
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 413              		.loc 1 1023 0 is_stmt 1
 414              		.cfi_startproc
 415              	.LVL27:
 416 0000 1300     		movs	r3, r2
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t *tmp;
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 417              		.loc 1 1027 0
 418 0002 0200     		movs	r2, r0
 419              	.LVL28:
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t *tmp;
 420              		.loc 1 1023 0
 421 0004 70B5     		push	{r4, r5, r6, lr}
 422              	.LCFI3:
 423              		.cfi_def_cfa_offset 16
 424              		.cfi_offset 4, -16
 425              		.cfi_offset 5, -12
 426              		.cfi_offset 6, -8
 427              		.cfi_offset 14, -4
 428              		.loc 1 1027 0
 429 0006 6932     		adds	r2, r2, #105
 430 0008 1578     		ldrb	r5, [r2]
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t *tmp;
 431              		.loc 1 1023 0
 432 000a 0400     		movs	r4, r0
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be 
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
ARM GAS  /tmp/ccjaQwTr.s 			page 28


1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->TDR, Size);
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAT;
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 433              		.loc 1 1082 0
 434 000c 0220     		movs	r0, #2
 435              	.LVL29:
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 436              		.loc 1 1027 0
 437 000e 202D     		cmp	r5, #32
 438 0010 33D1     		bne	.L41
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 439              		.loc 1 1031 0
 440 0012 0138     		subs	r0, r0, #1
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 441              		.loc 1 1029 0
 442 0014 0029     		cmp	r1, #0
 443 0016 30D0     		beq	.L41
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 444              		.loc 1 1029 0 is_stmt 0 discriminator 1
 445 0018 002B     		cmp	r3, #0
 446 001a 2ED0     		beq	.L41
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 447              		.loc 1 1037 0 is_stmt 1
 448 001c 8025     		movs	r5, #128
ARM GAS  /tmp/ccjaQwTr.s 			page 29


 449 001e A668     		ldr	r6, [r4, #8]
 450 0020 6D01     		lsls	r5, r5, #5
 451 0022 AE42     		cmp	r6, r5
 452 0024 04D1     		bne	.L42
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 453              		.loc 1 1037 0 is_stmt 0 discriminator 1
 454 0026 2569     		ldr	r5, [r4, #16]
 455 0028 002D     		cmp	r5, #0
 456 002a 01D1     		bne	.L42
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 457              		.loc 1 1039 0 is_stmt 1
 458 002c 0142     		tst	r1, r0
 459 002e 24D1     		bne	.L41
 460              	.L42:
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 461              		.loc 1 1046 0
 462 0030 2600     		movs	r6, r4
 463 0032 6836     		adds	r6, r6, #104
 464 0034 3578     		ldrb	r5, [r6]
 465              		.loc 1 1082 0
 466 0036 0220     		movs	r0, #2
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 467              		.loc 1 1046 0
 468 0038 012D     		cmp	r5, #1
 469 003a 1ED0     		beq	.L41
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 470              		.loc 1 1046 0 is_stmt 0 discriminator 2
 471 003c 0138     		subs	r0, r0, #1
 472 003e 3070     		strb	r0, [r6]
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 473              		.loc 1 1049 0 is_stmt 1 discriminator 2
 474 0040 2000     		movs	r0, r4
 475 0042 5030     		adds	r0, r0, #80
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 476              		.loc 1 1048 0 discriminator 2
 477 0044 E164     		str	r1, [r4, #76]
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 478              		.loc 1 1052 0 discriminator 2
 479 0046 0025     		movs	r5, #0
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 480              		.loc 1 1049 0 discriminator 2
 481 0048 0380     		strh	r3, [r0]
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 482              		.loc 1 1050 0 discriminator 2
 483 004a 4380     		strh	r3, [r0, #2]
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 484              		.loc 1 1053 0 discriminator 2
 485 004c 2120     		movs	r0, #33
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 486              		.loc 1 1052 0 discriminator 2
 487 004e E566     		str	r5, [r4, #108]
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 488              		.loc 1 1053 0 discriminator 2
 489 0050 1070     		strb	r0, [r2]
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 490              		.loc 1 1056 0 discriminator 2
 491 0052 206E     		ldr	r0, [r4, #96]
ARM GAS  /tmp/ccjaQwTr.s 			page 30


 492 0054 094A     		ldr	r2, .L50
 493 0056 8262     		str	r2, [r0, #40]
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 494              		.loc 1 1059 0 discriminator 2
 495 0058 094A     		ldr	r2, .L50+4
 496 005a C262     		str	r2, [r0, #44]
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 497              		.loc 1 1062 0 discriminator 2
 498 005c 094A     		ldr	r2, .L50+8
 499 005e 0263     		str	r2, [r0, #48]
 500              	.LVL30:
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 501              		.loc 1 1066 0 discriminator 2
 502 0060 2268     		ldr	r2, [r4]
 503 0062 2832     		adds	r2, r2, #40
 504 0064 FFF7FEFF 		bl	HAL_DMA_Start_IT
 505              	.LVL31:
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 506              		.loc 1 1069 0 discriminator 2
 507 0068 4022     		movs	r2, #64
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 508              		.loc 1 1078 0 discriminator 2
 509 006a 2800     		movs	r0, r5
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 510              		.loc 1 1069 0 discriminator 2
 511 006c 2368     		ldr	r3, [r4]
 512 006e 1A62     		str	r2, [r3, #32]
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513              		.loc 1 1073 0 discriminator 2
 514 0070 9968     		ldr	r1, [r3, #8]
 515 0072 9218     		adds	r2, r2, r2
 516 0074 0A43     		orrs	r2, r1
 517 0076 9A60     		str	r2, [r3, #8]
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 518              		.loc 1 1076 0 discriminator 2
 519 0078 3570     		strb	r5, [r6]
 520              	.LVL32:
 521              	.L41:
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 522              		.loc 1 1084 0
 523              		@ sp needed
 524              	.LVL33:
 525 007a 70BD     		pop	{r4, r5, r6, pc}
 526              	.L51:
 527              		.align	2
 528              	.L50:
 529 007c 00000000 		.word	UART_DMATransmitCplt
 530 0080 00000000 		.word	UART_DMATxHalfCplt
 531 0084 00000000 		.word	UART_DMAError
 532              		.cfi_endproc
 533              	.LFE46:
 535              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 536              		.align	1
 537              		.global	HAL_UART_Receive_DMA
 538              		.syntax unified
 539              		.code	16
ARM GAS  /tmp/ccjaQwTr.s 			page 31


 540              		.thumb_func
 541              		.fpu softvfp
 543              	HAL_UART_Receive_DMA:
 544              	.LFB47:
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: amount of data to be received.
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 545              		.loc 1 1098 0
 546              		.cfi_startproc
 547              	.LVL34:
 548 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 549              	.LCFI4:
 550              		.cfi_def_cfa_offset 24
 551              		.cfi_offset 3, -24
 552              		.cfi_offset 4, -20
 553              		.cfi_offset 5, -16
 554              		.cfi_offset 6, -12
 555              		.cfi_offset 7, -8
 556              		.cfi_offset 14, -4
 557              		.loc 1 1098 0
 558 0002 1300     		movs	r3, r2
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t *tmp;
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 559              		.loc 1 1102 0
 560 0004 0200     		movs	r2, r0
 561              	.LVL35:
 562 0006 6A32     		adds	r2, r2, #106
 563 0008 1478     		ldrb	r4, [r2]
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t *tmp;
 564              		.loc 1 1098 0
 565 000a 0500     		movs	r5, r0
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be 
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1) != 0)
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
ARM GAS  /tmp/ccjaQwTr.s 			page 32


1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA channel */
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, *(uint32_t*)tmp, Size);
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      huart->Instance->CR3 |= USART_CR3_DMAR;
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      /* Process Unlocked */
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      __HAL_UNLOCK(huart);
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 566              		.loc 1 1153 0
 567 000c 0220     		movs	r0, #2
 568              	.LVL36:
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 569              		.loc 1 1102 0
 570 000e 202C     		cmp	r4, #32
 571 0010 32D1     		bne	.L53
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 572              		.loc 1 1106 0
 573 0012 0138     		subs	r0, r0, #1
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 574              		.loc 1 1104 0
 575 0014 0029     		cmp	r1, #0
 576 0016 2FD0     		beq	.L53
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 577              		.loc 1 1104 0 is_stmt 0 discriminator 1
 578 0018 002B     		cmp	r3, #0
 579 001a 2DD0     		beq	.L53
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccjaQwTr.s 			page 33


 580              		.loc 1 1112 0 is_stmt 1
 581 001c 8024     		movs	r4, #128
 582 001e AE68     		ldr	r6, [r5, #8]
 583 0020 6401     		lsls	r4, r4, #5
 584 0022 A642     		cmp	r6, r4
 585 0024 04D1     		bne	.L54
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 586              		.loc 1 1112 0 is_stmt 0 discriminator 1
 587 0026 2C69     		ldr	r4, [r5, #16]
 588 0028 002C     		cmp	r4, #0
 589 002a 01D1     		bne	.L54
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 590              		.loc 1 1114 0 is_stmt 1
 591 002c 0142     		tst	r1, r0
 592 002e 23D1     		bne	.L53
 593              	.L54:
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 594              		.loc 1 1121 0
 595 0030 2E00     		movs	r6, r5
 596 0032 6836     		adds	r6, r6, #104
 597 0034 3478     		ldrb	r4, [r6]
 598              		.loc 1 1153 0
 599 0036 0220     		movs	r0, #2
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 600              		.loc 1 1121 0
 601 0038 012C     		cmp	r4, #1
 602 003a 1DD0     		beq	.L53
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 603              		.loc 1 1121 0 is_stmt 0 discriminator 2
 604 003c 0138     		subs	r0, r0, #1
 605 003e 3070     		strb	r0, [r6]
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 606              		.loc 1 1124 0 is_stmt 1 discriminator 2
 607 0040 2800     		movs	r0, r5
 608 0042 5830     		adds	r0, r0, #88
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 609              		.loc 1 1123 0 discriminator 2
 610 0044 6965     		str	r1, [r5, #84]
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 611              		.loc 1 1126 0 discriminator 2
 612 0046 0024     		movs	r4, #0
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 613              		.loc 1 1124 0 discriminator 2
 614 0048 0380     		strh	r3, [r0]
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 615              		.loc 1 1127 0 discriminator 2
 616 004a 2220     		movs	r0, #34
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 617              		.loc 1 1126 0 discriminator 2
 618 004c EC66     		str	r4, [r5, #108]
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 619              		.loc 1 1127 0 discriminator 2
 620 004e 1070     		strb	r0, [r2]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 621              		.loc 1 1130 0 discriminator 2
 622 0050 686E     		ldr	r0, [r5, #100]
 623 0052 0A4A     		ldr	r2, .L62
ARM GAS  /tmp/ccjaQwTr.s 			page 34


1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 624              		.loc 1 1140 0 discriminator 2
 625 0054 2F68     		ldr	r7, [r5]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 626              		.loc 1 1130 0 discriminator 2
 627 0056 8262     		str	r2, [r0, #40]
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 628              		.loc 1 1133 0 discriminator 2
 629 0058 094A     		ldr	r2, .L62+4
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 630              		.loc 1 1140 0 discriminator 2
 631 005a 2437     		adds	r7, r7, #36
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 632              		.loc 1 1133 0 discriminator 2
 633 005c C262     		str	r2, [r0, #44]
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 634              		.loc 1 1136 0 discriminator 2
 635 005e 094A     		ldr	r2, .L62+8
 636 0060 0263     		str	r2, [r0, #48]
 637              	.LVL37:
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 638              		.loc 1 1140 0 discriminator 2
 639 0062 0A00     		movs	r2, r1
 640 0064 3900     		movs	r1, r7
 641              	.LVL38:
 642 0066 FFF7FEFF 		bl	HAL_DMA_Start_IT
 643              	.LVL39:
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 644              		.loc 1 1144 0 discriminator 2
 645 006a 4023     		movs	r3, #64
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 646              		.loc 1 1149 0 discriminator 2
 647 006c 2000     		movs	r0, r4
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 648              		.loc 1 1144 0 discriminator 2
 649 006e 2A68     		ldr	r2, [r5]
 650 0070 9168     		ldr	r1, [r2, #8]
 651 0072 0B43     		orrs	r3, r1
 652 0074 9360     		str	r3, [r2, #8]
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 653              		.loc 1 1147 0 discriminator 2
 654 0076 3470     		strb	r4, [r6]
 655              	.LVL40:
 656              	.L53:
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 657              		.loc 1 1155 0
 658              		@ sp needed
 659              	.LVL41:
 660 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 661              	.L63:
 662 007a C046     		.align	2
 663              	.L62:
 664 007c 00000000 		.word	UART_DMAReceiveCplt
 665 0080 00000000 		.word	UART_DMARxHalfCplt
 666 0084 00000000 		.word	UART_DMAError
 667              		.cfi_endproc
ARM GAS  /tmp/ccjaQwTr.s 			page 35


 668              	.LFE47:
 670              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 671              		.align	1
 672              		.global	HAL_UART_DMAPause
 673              		.syntax unified
 674              		.code	16
 675              		.thumb_func
 676              		.fpu softvfp
 678              	HAL_UART_DMAPause:
 679              	.LFB48:
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 680              		.loc 1 1163 0
 681              		.cfi_startproc
 682              	.LVL42:
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 683              		.loc 1 1165 0
 684 0000 0200     		movs	r2, r0
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 685              		.loc 1 1163 0
 686 0002 10B5     		push	{r4, lr}
 687              	.LCFI5:
 688              		.cfi_def_cfa_offset 8
 689              		.cfi_offset 4, -8
 690              		.cfi_offset 14, -4
 691              		.loc 1 1165 0
 692 0004 6832     		adds	r2, r2, #104
 693 0006 1178     		ldrb	r1, [r2]
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 694              		.loc 1 1163 0
 695 0008 0300     		movs	r3, r0
 696              		.loc 1 1165 0
 697 000a 0220     		movs	r0, #2
 698              	.LVL43:
 699 000c 0129     		cmp	r1, #1
 700 000e 17D0     		beq	.L65
 701              		.loc 1 1165 0 is_stmt 0 discriminator 2
 702 0010 0121     		movs	r1, #1
 703 0012 1170     		strb	r1, [r2]
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 704              		.loc 1 1167 0 is_stmt 1 discriminator 2
 705 0014 1900     		movs	r1, r3
 706 0016 6931     		adds	r1, r1, #105
 707 0018 0978     		ldrb	r1, [r1]
 708 001a 2129     		cmp	r1, #33
 709 001c 04D1     		bne	.L66
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAT);
ARM GAS  /tmp/ccjaQwTr.s 			page 36


 710              		.loc 1 1170 0
 711 001e 8024     		movs	r4, #128
 712 0020 1868     		ldr	r0, [r3]
 713 0022 8168     		ldr	r1, [r0, #8]
 714 0024 A143     		bics	r1, r4
 715 0026 8160     		str	r1, [r0, #8]
 716              	.L66:
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 717              		.loc 1 1172 0
 718 0028 1900     		movs	r1, r3
 719 002a 6A31     		adds	r1, r1, #106
 720 002c 0978     		ldrb	r1, [r1]
 721 002e 2229     		cmp	r1, #34
 722 0030 04D1     		bne	.L67
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAR);
 723              		.loc 1 1175 0
 724 0032 4020     		movs	r0, #64
 725 0034 1968     		ldr	r1, [r3]
 726 0036 8B68     		ldr	r3, [r1, #8]
 727              	.LVL44:
 728 0038 8343     		bics	r3, r0
 729 003a 8B60     		str	r3, [r1, #8]
 730              	.L67:
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 731              		.loc 1 1179 0
 732 003c 0020     		movs	r0, #0
 733 003e 1070     		strb	r0, [r2]
 734              	.L65:
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 735              		.loc 1 1182 0
 736              		@ sp needed
 737 0040 10BD     		pop	{r4, pc}
 738              		.cfi_endproc
 739              	.LFE48:
 741              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 742              		.align	1
 743              		.global	HAL_UART_DMAResume
 744              		.syntax unified
 745              		.code	16
 746              		.thumb_func
 747              		.fpu softvfp
 749              	HAL_UART_DMAResume:
 750              	.LFB49:
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
ARM GAS  /tmp/ccjaQwTr.s 			page 37


1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 751              		.loc 1 1190 0
 752              		.cfi_startproc
 753              	.LVL45:
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 754              		.loc 1 1192 0
 755 0000 0200     		movs	r2, r0
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 756              		.loc 1 1190 0
 757 0002 10B5     		push	{r4, lr}
 758              	.LCFI6:
 759              		.cfi_def_cfa_offset 8
 760              		.cfi_offset 4, -8
 761              		.cfi_offset 14, -4
 762              		.loc 1 1192 0
 763 0004 6832     		adds	r2, r2, #104
 764 0006 1178     		ldrb	r1, [r2]
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 765              		.loc 1 1190 0
 766 0008 0300     		movs	r3, r0
 767              		.loc 1 1192 0
 768 000a 0220     		movs	r0, #2
 769              	.LVL46:
 770 000c 0129     		cmp	r1, #1
 771 000e 19D0     		beq	.L71
 772              		.loc 1 1192 0 is_stmt 0 discriminator 2
 773 0010 0121     		movs	r1, #1
 774 0012 1170     		strb	r1, [r2]
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 775              		.loc 1 1194 0 is_stmt 1 discriminator 2
 776 0014 1900     		movs	r1, r3
 777 0016 6931     		adds	r1, r1, #105
 778 0018 0978     		ldrb	r1, [r1]
 779 001a 2129     		cmp	r1, #33
 780 001c 04D1     		bne	.L72
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAT;
 781              		.loc 1 1197 0
 782 001e 1868     		ldr	r0, [r3]
 783 0020 5F31     		adds	r1, r1, #95
 784 0022 8468     		ldr	r4, [r0, #8]
 785 0024 2143     		orrs	r1, r4
 786 0026 8160     		str	r1, [r0, #8]
 787              	.L72:
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 788              		.loc 1 1199 0
 789 0028 1900     		movs	r1, r3
 790 002a 6A31     		adds	r1, r1, #106
 791 002c 0978     		ldrb	r1, [r1]
 792 002e 2229     		cmp	r1, #34
 793 0030 06D1     		bne	.L73
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccjaQwTr.s 			page 38


1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Overrun flag before resumming the Rx transfer*/
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 794              		.loc 1 1202 0
 795 0032 1B68     		ldr	r3, [r3]
 796              	.LVL47:
 797 0034 1A39     		subs	r1, r1, #26
 798 0036 1962     		str	r1, [r3, #32]
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAR;
 799              		.loc 1 1205 0
 800 0038 9868     		ldr	r0, [r3, #8]
 801 003a 3831     		adds	r1, r1, #56
 802 003c 0143     		orrs	r1, r0
 803 003e 9960     		str	r1, [r3, #8]
 804              	.L73:
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 805              		.loc 1 1209 0
 806 0040 0020     		movs	r0, #0
 807 0042 1070     		strb	r0, [r2]
 808              	.L71:
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 809              		.loc 1 1212 0
 810              		@ sp needed
 811 0044 10BD     		pop	{r4, pc}
 812              		.cfi_endproc
 813              	.LFE49:
 815              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 816              		.align	1
 817              		.global	HAL_UART_DMAStop
 818              		.syntax unified
 819              		.code	16
 820              		.thumb_func
 821              		.fpu softvfp
 823              	HAL_UART_DMAStop:
 824              	.LFB50:
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 825              		.loc 1 1220 0
 826              		.cfi_startproc
 827              	.LVL48:
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback() / HAL_UART_RxHalfCpltCallback (): 
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete i
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      generated if the DMA transfer interruption occurs at the middle or at the end of the stream
ARM GAS  /tmp/ccjaQwTr.s 			page 39


1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      and the corresponding call back is executed. 
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      */
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Tx/Rx DMA requests */
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~USART_CR3_DMAT;
 828              		.loc 1 1230 0
 829 0000 8021     		movs	r1, #128
 830 0002 0368     		ldr	r3, [r0]
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 831              		.loc 1 1220 0
 832 0004 10B5     		push	{r4, lr}
 833              	.LCFI7:
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 4, -8
 836              		.cfi_offset 14, -4
 837              		.loc 1 1230 0
 838 0006 9A68     		ldr	r2, [r3, #8]
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 839              		.loc 1 1220 0
 840 0008 0400     		movs	r4, r0
 841              		.loc 1 1230 0
 842 000a 8A43     		bics	r2, r1
 843 000c 9A60     		str	r2, [r3, #8]
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~USART_CR3_DMAR;
 844              		.loc 1 1231 0
 845 000e 9A68     		ldr	r2, [r3, #8]
 846 0010 4039     		subs	r1, r1, #64
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Abort the UART DMA tx channel */
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 847              		.loc 1 1234 0
 848 0012 006E     		ldr	r0, [r0, #96]
 849              	.LVL49:
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 &= ~USART_CR3_DMAR;
 850              		.loc 1 1231 0
 851 0014 8A43     		bics	r2, r1
 852 0016 9A60     		str	r2, [r3, #8]
 853              		.loc 1 1234 0
 854 0018 0028     		cmp	r0, #0
 855 001a 01D0     		beq	.L77
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Abort(huart->hdmatx);
 856              		.loc 1 1236 0
 857 001c FFF7FEFF 		bl	HAL_DMA_Abort
 858              	.LVL50:
 859              	.L77:
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Abort the UART DMA rx channel */
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 860              		.loc 1 1239 0
 861 0020 606E     		ldr	r0, [r4, #100]
 862 0022 0028     		cmp	r0, #0
 863 0024 01D0     		beq	.L78
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Abort(huart->hdmarx);
 864              		.loc 1 1241 0
 865 0026 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  /tmp/ccjaQwTr.s 			page 40


 866              	.LVL51:
 867              	.L78:
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 868              		.loc 1 1244 0
 869 002a 2200     		movs	r2, r4
 870 002c 2023     		movs	r3, #32
 871 002e 6932     		adds	r2, r2, #105
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 872              		.loc 1 1245 0
 873 0030 6A34     		adds	r4, r4, #106
 874              	.LVL52:
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 875              		.loc 1 1244 0
 876 0032 1370     		strb	r3, [r2]
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 877              		.loc 1 1248 0
 878 0034 0020     		movs	r0, #0
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 879              		.loc 1 1245 0
 880 0036 2370     		strb	r3, [r4]
 881              		.loc 1 1248 0
 882              		@ sp needed
 883              	.LVL53:
 884 0038 10BD     		pop	{r4, pc}
 885              		.cfi_endproc
 886              	.LFE50:
 888              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 889              		.align	1
 890              		.weak	HAL_UART_TxCpltCallback
 891              		.syntax unified
 892              		.code	16
 893              		.thumb_func
 894              		.fpu softvfp
 896              	HAL_UART_TxCpltCallback:
 897              	.LFB84:
 898              		.cfi_startproc
 899              		@ sp needed
 900 0000 7047     		bx	lr
 901              		.cfi_endproc
 902              	.LFE84:
 904              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 905              		.align	1
 906              		.syntax unified
 907              		.code	16
 908              		.thumb_func
 909              		.fpu softvfp
 911              	UART_DMATransmitCplt:
 912              	.LFB67:
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccjaQwTr.s 			page 41


1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
ARM GAS  /tmp/ccjaQwTr.s 			page 42


1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART error callback.
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART control functions
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 |= USART_CR1_MME;
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjaQwTr.s 			page 43


1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Disable UART mute mode (does not mean the UART actually exits mute mode
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 &= ~(USART_CR1_MME);
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
ARM GAS  /tmp/ccjaQwTr.s 			page 44


1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status.
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides functions allowing to :
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle state.
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle error code
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle state.
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL state
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00, temp2 = 0x00;
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp1 = huart->gState;
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjaQwTr.s 			page 45


1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval UART Error Code
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000;
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000;
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000;
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
ARM GAS  /tmp/ccjaQwTr.s 			page 46


1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * to huart->Init.StopBits value */
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0;
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000F) >> 1U);
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate)); 
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
ARM GAS  /tmp/ccjaQwTr.s 			page 47


1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate)); 
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return ret;
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure data inversion */
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccjaQwTr.s 			page 48


1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Check the UART Idle State.
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance))
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Transmitter is enabled */
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until TEACK flag is set */
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, UART_TEACK_REACK_TIMEOUT) != HA
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjaQwTr.s 			page 49


1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Receiver is enabled */
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until REACK flag is set */
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET,  UART_TEACK_REACK_TIMEOUT) != H
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART State */
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Status: the Flag status (SET or RESET).
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Timeout: Timeout duration.
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = HAL_GetTick();
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(Status == RESET)
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(__HAL_UART_GET_FLAG(huart, Flag) == RESET)
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check for the Timeout */
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(Timeout != HAL_MAX_DELAY)
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Process Unlocked */
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccjaQwTr.s 			page 50


1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(__HAL_UART_GET_FLAG(huart, Flag) != RESET)
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check for the Timeout */
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(Timeout != HAL_MAX_DELAY)
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Process Unlocked */
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UNLOCK(huart);
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma: DMA handle.
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 913              		.loc 1 1808 0
 914              		.cfi_startproc
 915              	.LVL54:
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 916              		.loc 1 1812 0
 917 0000 2021     		movs	r1, #32
 918 0002 0368     		ldr	r3, [r0]
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 919              		.loc 1 1808 0
 920 0004 10B5     		push	{r4, lr}
 921              	.LCFI8:
 922              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccjaQwTr.s 			page 51


 923              		.cfi_offset 4, -8
 924              		.cfi_offset 14, -4
 925              		.loc 1 1812 0
 926 0006 1B68     		ldr	r3, [r3]
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 927              		.loc 1 1809 0
 928 0008 426A     		ldr	r2, [r0, #36]
 929              	.LVL55:
 930              		.loc 1 1812 0
 931 000a 0B40     		ands	r3, r1
 932 000c 0CD1     		bne	.L87
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {  
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0;
 933              		.loc 1 1814 0
 934 000e 1100     		movs	r1, r2
 935 0010 5231     		adds	r1, r1, #82
 936 0012 0B80     		strh	r3, [r1]
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in the UART CR3 register */
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DMAT);
 937              		.loc 1 1818 0
 938 0014 8021     		movs	r1, #128
 939 0016 1368     		ldr	r3, [r2]
 940 0018 9A68     		ldr	r2, [r3, #8]
 941              	.LVL56:
 942 001a 8A43     		bics	r2, r1
 943 001c 9A60     		str	r2, [r3, #8]
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 944              		.loc 1 1821 0
 945 001e 4022     		movs	r2, #64
 946 0020 1968     		ldr	r1, [r3]
 947 0022 0A43     		orrs	r2, r1
 948 0024 1A60     		str	r2, [r3]
 949              	.LVL57:
 950              	.L86:
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Circular mode */
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 951              		.loc 1 1829 0
 952              		@ sp needed
 953 0026 10BD     		pop	{r4, pc}
 954              	.LVL58:
 955              	.L87:
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 956              		.loc 1 1826 0
 957 0028 1000     		movs	r0, r2
 958              	.LVL59:
 959 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 960              	.LVL60:
ARM GAS  /tmp/ccjaQwTr.s 			page 52


 961              		.loc 1 1829 0
 962 002e FAE7     		b	.L86
 963              		.cfi_endproc
 964              	.LFE67:
 966              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 967              		.align	1
 968              		.weak	HAL_UART_TxHalfCpltCallback
 969              		.syntax unified
 970              		.code	16
 971              		.thumb_func
 972              		.fpu softvfp
 974              	HAL_UART_TxHalfCpltCallback:
 975              	.LFB82:
 976              		.cfi_startproc
 977              		@ sp needed
 978 0000 7047     		bx	lr
 979              		.cfi_endproc
 980              	.LFE82:
 982              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 983              		.align	1
 984              		.syntax unified
 985              		.code	16
 986              		.thumb_func
 987              		.fpu softvfp
 989              	UART_DMATxHalfCplt:
 990              	.LFB68:
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma : DMA handle.
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 991              		.loc 1 1837 0
 992              		.cfi_startproc
 993              	.LVL61:
 994              		.loc 1 1837 0
 995 0000 10B5     		push	{r4, lr}
 996              	.LCFI9:
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 4, -8
 999              		.cfi_offset 14, -4
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1000              		.loc 1 1840 0
 1001 0002 406A     		ldr	r0, [r0, #36]
 1002              	.LVL62:
 1003 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1004              	.LVL63:
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1005              		.loc 1 1841 0
 1006              		@ sp needed
 1007 0008 10BD     		pop	{r4, pc}
 1008              		.cfi_endproc
 1009              	.LFE68:
ARM GAS  /tmp/ccjaQwTr.s 			page 53


 1011              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1012              		.align	1
 1013              		.weak	HAL_UART_RxCpltCallback
 1014              		.syntax unified
 1015              		.code	16
 1016              		.thumb_func
 1017              		.fpu softvfp
 1019              	HAL_UART_RxCpltCallback:
 1020              	.LFB80:
 1021              		.cfi_startproc
 1022              		@ sp needed
 1023 0000 7047     		bx	lr
 1024              		.cfi_endproc
 1025              	.LFE80:
 1027              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1028              		.align	1
 1029              		.syntax unified
 1030              		.code	16
 1031              		.thumb_func
 1032              		.fpu softvfp
 1034              	UART_DMAReceiveCplt:
 1035              	.LFB69:
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma: DMA handle.
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1036              		.loc 1 1849 0
 1037              		.cfi_startproc
 1038              	.LVL64:
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1039              		.loc 1 1853 0
 1040 0000 2021     		movs	r1, #32
 1041 0002 0268     		ldr	r2, [r0]
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1042              		.loc 1 1849 0
 1043 0004 10B5     		push	{r4, lr}
 1044              	.LCFI10:
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 4, -8
 1047              		.cfi_offset 14, -4
 1048              		.loc 1 1853 0
 1049 0006 1268     		ldr	r2, [r2]
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1050              		.loc 1 1850 0
 1051 0008 436A     		ldr	r3, [r0, #36]
 1052              	.LVL65:
 1053              		.loc 1 1853 0
 1054 000a 0A40     		ands	r2, r1
 1055 000c 0AD1     		bne	.L93
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccjaQwTr.s 			page 54


1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0;
 1056              		.loc 1 1855 0
 1057 000e 1800     		movs	r0, r3
 1058              	.LVL66:
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DMAR);
 1059              		.loc 1 1859 0
 1060 0010 4024     		movs	r4, #64
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1061              		.loc 1 1855 0
 1062 0012 5A30     		adds	r0, r0, #90
 1063 0014 0280     		strh	r2, [r0]
 1064              		.loc 1 1859 0
 1065 0016 1868     		ldr	r0, [r3]
 1066 0018 8268     		ldr	r2, [r0, #8]
 1067 001a A243     		bics	r2, r4
 1068 001c 8260     		str	r2, [r0, #8]
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1069              		.loc 1 1862 0
 1070 001e 1A00     		movs	r2, r3
 1071 0020 6A32     		adds	r2, r2, #106
 1072 0022 1170     		strb	r1, [r2]
 1073              	.L93:
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1074              		.loc 1 1865 0
 1075 0024 1800     		movs	r0, r3
 1076 0026 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1077              	.LVL67:
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1078              		.loc 1 1866 0
 1079              		@ sp needed
 1080 002a 10BD     		pop	{r4, pc}
 1081              		.cfi_endproc
 1082              	.LFE69:
 1084              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1085              		.align	1
 1086              		.weak	HAL_UART_RxHalfCpltCallback
 1087              		.syntax unified
 1088              		.code	16
 1089              		.thumb_func
 1090              		.fpu softvfp
 1092              	HAL_UART_RxHalfCpltCallback:
 1093              	.LFB78:
 1094              		.cfi_startproc
 1095              		@ sp needed
 1096 0000 7047     		bx	lr
 1097              		.cfi_endproc
 1098              	.LFE78:
 1100              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1101              		.align	1
 1102              		.syntax unified
ARM GAS  /tmp/ccjaQwTr.s 			page 55


 1103              		.code	16
 1104              		.thumb_func
 1105              		.fpu softvfp
 1107              	UART_DMARxHalfCplt:
 1108              	.LFB70:
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma : DMA handle.
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1109              		.loc 1 1874 0
 1110              		.cfi_startproc
 1111              	.LVL68:
 1112              		.loc 1 1874 0
 1113 0000 10B5     		push	{r4, lr}
 1114              	.LCFI11:
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 4, -8
 1117              		.cfi_offset 14, -4
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 1118              		.loc 1 1877 0
 1119 0002 406A     		ldr	r0, [r0, #36]
 1120              	.LVL69:
 1121 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1122              	.LVL70:
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1123              		.loc 1 1878 0
 1124              		@ sp needed
 1125 0008 10BD     		pop	{r4, pc}
 1126              		.cfi_endproc
 1127              	.LFE70:
 1129              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1130              		.align	1
 1131              		.weak	HAL_UART_ErrorCallback
 1132              		.syntax unified
 1133              		.code	16
 1134              		.thumb_func
 1135              		.fpu softvfp
 1137              	HAL_UART_ErrorCallback:
 1138              	.LFB55:
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1139              		.loc 1 1316 0
 1140              		.cfi_startproc
 1141              	.LVL71:
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1142              		.loc 1 1323 0
 1143              		@ sp needed
 1144 0000 7047     		bx	lr
 1145              		.cfi_endproc
 1146              	.LFE55:
 1148              		.section	.text.UART_DMAError,"ax",%progbits
 1149              		.align	1
ARM GAS  /tmp/ccjaQwTr.s 			page 56


 1150              		.syntax unified
 1151              		.code	16
 1152              		.thumb_func
 1153              		.fpu softvfp
 1155              	UART_DMAError:
 1156              	.LFB71:
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma: DMA handle.
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1157              		.loc 1 1886 0
 1158              		.cfi_startproc
 1159              	.LVL72:
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1160              		.loc 1 1887 0
 1161 0000 406A     		ldr	r0, [r0, #36]
 1162              	.LVL73:
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0;
 1163              		.loc 1 1888 0
 1164 0002 0023     		movs	r3, #0
 1165 0004 0200     		movs	r2, r0
 1166 0006 5A32     		adds	r2, r2, #90
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1167              		.loc 1 1886 0
 1168 0008 10B5     		push	{r4, lr}
 1169              	.LCFI12:
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 4, -8
 1172              		.cfi_offset 14, -4
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0;
 1173              		.loc 1 1889 0
 1174 000a 083A     		subs	r2, r2, #8
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0;
 1175              		.loc 1 1888 0
 1176 000c 1381     		strh	r3, [r2, #8]
 1177              		.loc 1 1889 0
 1178 000e 1380     		strh	r3, [r2]
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 1179              		.loc 1 1890 0
 1180 0010 2033     		adds	r3, r3, #32
 1181 0012 D375     		strb	r3, [r2, #23]
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 1182              		.loc 1 1891 0
 1183 0014 1376     		strb	r3, [r2, #24]
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 1184              		.loc 1 1892 0
 1185 0016 C26E     		ldr	r2, [r0, #108]
 1186 0018 103B     		subs	r3, r3, #16
 1187 001a 1343     		orrs	r3, r2
 1188 001c C366     		str	r3, [r0, #108]
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1189              		.loc 1 1893 0
 1190 001e FFF7FEFF 		bl	HAL_UART_ErrorCallback
ARM GAS  /tmp/ccjaQwTr.s 			page 57


 1191              	.LVL74:
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1192              		.loc 1 1894 0
 1193              		@ sp needed
 1194 0022 10BD     		pop	{r4, pc}
 1195              		.cfi_endproc
 1196              	.LFE71:
 1198              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 1199              		.align	1
 1200              		.global	HAL_MultiProcessor_EnterMuteMode
 1201              		.syntax unified
 1202              		.code	16
 1203              		.thumb_func
 1204              		.fpu softvfp
 1206              	HAL_MultiProcessor_EnterMuteMode:
 1207              	.LFB58:
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 1208              		.loc 1 1396 0
 1209              		.cfi_startproc
 1210              	.LVL75:
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1211              		.loc 1 1397 0
 1212 0000 0423     		movs	r3, #4
 1213 0002 0268     		ldr	r2, [r0]
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1214              		.loc 1 1398 0
 1215              		@ sp needed
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1216              		.loc 1 1397 0
 1217 0004 9169     		ldr	r1, [r2, #24]
 1218 0006 0B43     		orrs	r3, r1
 1219 0008 9361     		str	r3, [r2, #24]
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1220              		.loc 1 1398 0
 1221 000a 7047     		bx	lr
 1222              		.cfi_endproc
 1223              	.LFE58:
 1225              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 1226              		.align	1
 1227              		.global	HAL_HalfDuplex_EnableTransmitter
 1228              		.syntax unified
 1229              		.code	16
 1230              		.thumb_func
 1231              		.fpu softvfp
 1233              	HAL_HalfDuplex_EnableTransmitter:
 1234              	.LFB59:
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 1235              		.loc 1 1406 0
 1236              		.cfi_startproc
 1237              	.LVL76:
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 1238              		.loc 1 1408 0
 1239 0000 0100     		movs	r1, r0
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 1240              		.loc 1 1406 0
 1241 0002 10B5     		push	{r4, lr}
 1242              	.LCFI13:
ARM GAS  /tmp/ccjaQwTr.s 			page 58


 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 4, -8
 1245              		.cfi_offset 14, -4
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 1246              		.loc 1 1408 0
 1247 0004 6831     		adds	r1, r1, #104
 1248 0006 0A78     		ldrb	r2, [r1]
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 1249              		.loc 1 1406 0
 1250 0008 0300     		movs	r3, r0
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 1251              		.loc 1 1408 0
 1252 000a 0220     		movs	r0, #2
 1253              	.LVL77:
 1254 000c 012A     		cmp	r2, #1
 1255 000e 10D0     		beq	.L100
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1256              		.loc 1 1409 0 discriminator 2
 1257 0010 1800     		movs	r0, r3
 1258 0012 2422     		movs	r2, #36
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 1259              		.loc 1 1412 0 discriminator 2
 1260 0014 0C24     		movs	r4, #12
 1261 0016 1B68     		ldr	r3, [r3]
 1262              	.LVL78:
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1263              		.loc 1 1409 0 discriminator 2
 1264 0018 6930     		adds	r0, r0, #105
 1265              	.LVL79:
 1266 001a 0270     		strb	r2, [r0]
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 1267              		.loc 1 1412 0 discriminator 2
 1268 001c 1A68     		ldr	r2, [r3]
 1269 001e A243     		bics	r2, r4
 1270 0020 1A60     		str	r2, [r3]
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1271              		.loc 1 1414 0 discriminator 2
 1272 0022 0822     		movs	r2, #8
 1273 0024 1C68     		ldr	r4, [r3]
 1274 0026 2243     		orrs	r2, r4
 1275 0028 1A60     		str	r2, [r3]
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1276              		.loc 1 1416 0 discriminator 2
 1277 002a 2023     		movs	r3, #32
 1278 002c 0370     		strb	r3, [r0]
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1279              		.loc 1 1419 0 discriminator 2
 1280 002e 0020     		movs	r0, #0
 1281              	.LVL80:
 1282 0030 0870     		strb	r0, [r1]
 1283              	.L100:
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1284              		.loc 1 1422 0
 1285              		@ sp needed
 1286 0032 10BD     		pop	{r4, pc}
 1287              		.cfi_endproc
 1288              	.LFE59:
ARM GAS  /tmp/ccjaQwTr.s 			page 59


 1290              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 1291              		.align	1
 1292              		.global	HAL_HalfDuplex_EnableReceiver
 1293              		.syntax unified
 1294              		.code	16
 1295              		.thumb_func
 1296              		.fpu softvfp
 1298              	HAL_HalfDuplex_EnableReceiver:
 1299              	.LFB60:
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 1300              		.loc 1 1430 0
 1301              		.cfi_startproc
 1302              	.LVL81:
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 1303              		.loc 1 1432 0
 1304 0000 0100     		movs	r1, r0
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 1305              		.loc 1 1430 0
 1306 0002 10B5     		push	{r4, lr}
 1307              	.LCFI14:
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 4, -8
 1310              		.cfi_offset 14, -4
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 1311              		.loc 1 1432 0
 1312 0004 6831     		adds	r1, r1, #104
 1313 0006 0A78     		ldrb	r2, [r1]
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 1314              		.loc 1 1430 0
 1315 0008 0300     		movs	r3, r0
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 1316              		.loc 1 1432 0
 1317 000a 0220     		movs	r0, #2
 1318              	.LVL82:
 1319 000c 012A     		cmp	r2, #1
 1320 000e 10D0     		beq	.L104
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1321              		.loc 1 1433 0 discriminator 2
 1322 0010 1800     		movs	r0, r3
 1323 0012 2422     		movs	r2, #36
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 1324              		.loc 1 1436 0 discriminator 2
 1325 0014 0C24     		movs	r4, #12
 1326 0016 1B68     		ldr	r3, [r3]
 1327              	.LVL83:
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1328              		.loc 1 1433 0 discriminator 2
 1329 0018 6930     		adds	r0, r0, #105
 1330              	.LVL84:
 1331 001a 0270     		strb	r2, [r0]
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 1332              		.loc 1 1436 0 discriminator 2
 1333 001c 1A68     		ldr	r2, [r3]
 1334 001e A243     		bics	r2, r4
 1335 0020 1A60     		str	r2, [r3]
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1336              		.loc 1 1438 0 discriminator 2
ARM GAS  /tmp/ccjaQwTr.s 			page 60


 1337 0022 0422     		movs	r2, #4
 1338 0024 1C68     		ldr	r4, [r3]
 1339 0026 2243     		orrs	r2, r4
 1340 0028 1A60     		str	r2, [r3]
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
 1341              		.loc 1 1440 0 discriminator 2
 1342 002a 2023     		movs	r3, #32
 1343 002c 0370     		strb	r3, [r0]
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1344              		.loc 1 1442 0 discriminator 2
 1345 002e 0020     		movs	r0, #0
 1346              	.LVL85:
 1347 0030 0870     		strb	r0, [r1]
 1348              	.L104:
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1349              		.loc 1 1445 0
 1350              		@ sp needed
 1351 0032 10BD     		pop	{r4, pc}
 1352              		.cfi_endproc
 1353              	.LFE60:
 1355              		.section	.text.HAL_UART_GetState,"ax",%progbits
 1356              		.align	1
 1357              		.global	HAL_UART_GetState
 1358              		.syntax unified
 1359              		.code	16
 1360              		.thumb_func
 1361              		.fpu softvfp
 1363              	HAL_UART_GetState:
 1364              	.LFB61:
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00, temp2 = 0x00;
 1365              		.loc 1 1474 0
 1366              		.cfi_startproc
 1367              	.LVL86:
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 1368              		.loc 1 1476 0
 1369 0000 0300     		movs	r3, r0
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1370              		.loc 1 1477 0
 1371 0002 6A30     		adds	r0, r0, #106
 1372              	.LVL87:
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 1373              		.loc 1 1476 0
 1374 0004 6933     		adds	r3, r3, #105
 1375              	.LVL88:
 1376 0006 1B78     		ldrb	r3, [r3]
 1377              	.LVL89:
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1378              		.loc 1 1477 0
 1379 0008 0078     		ldrb	r0, [r0]
 1380              	.LVL90:
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1381              		.loc 1 1480 0
 1382              		@ sp needed
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1383              		.loc 1 1479 0
 1384 000a 1843     		orrs	r0, r3
 1385              	.LVL91:
ARM GAS  /tmp/ccjaQwTr.s 			page 61


1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1386              		.loc 1 1480 0
 1387 000c 7047     		bx	lr
 1388              		.cfi_endproc
 1389              	.LFE61:
 1391              		.section	.text.HAL_UART_GetError,"ax",%progbits
 1392              		.align	1
 1393              		.global	HAL_UART_GetError
 1394              		.syntax unified
 1395              		.code	16
 1396              		.thumb_func
 1397              		.fpu softvfp
 1399              	HAL_UART_GetError:
 1400              	.LFB62:
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
 1401              		.loc 1 1489 0
 1402              		.cfi_startproc
 1403              	.LVL92:
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1404              		.loc 1 1490 0
 1405 0000 C06E     		ldr	r0, [r0, #108]
 1406              	.LVL93:
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 1407              		.loc 1 1491 0
 1408              		@ sp needed
 1409 0002 7047     		bx	lr
 1410              		.cfi_endproc
 1411              	.LFE62:
 1413              		.global	__aeabi_uidiv
 1414              		.section	.text.UART_SetConfig,"ax",%progbits
 1415              		.align	1
 1416              		.global	UART_SetConfig
 1417              		.syntax unified
 1418              		.code	16
 1419              		.thumb_func
 1420              		.fpu softvfp
 1422              	UART_SetConfig:
 1423              	.LFB63:
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000;
 1424              		.loc 1 1510 0
 1425              		.cfi_startproc
 1426              	.LVL94:
 1427 0000 70B5     		push	{r4, r5, r6, lr}
 1428              	.LCFI15:
 1429              		.cfi_def_cfa_offset 16
 1430              		.cfi_offset 4, -16
 1431              		.cfi_offset 5, -12
 1432              		.cfi_offset 6, -8
 1433              		.cfi_offset 14, -4
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000;
 1434              		.loc 1 1510 0
 1435 0002 0400     		movs	r4, r0
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1436              		.loc 1 1536 0
 1437 0004 0568     		ldr	r5, [r0]
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 1438              		.loc 1 1535 0
ARM GAS  /tmp/ccjaQwTr.s 			page 62


 1439 0006 C269     		ldr	r2, [r0, #28]
 1440              	.LVL95:
 1441 0008 8368     		ldr	r3, [r0, #8]
 1442 000a 0069     		ldr	r0, [r0, #16]
 1443              	.LVL96:
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1444              		.loc 1 1536 0
 1445 000c 2968     		ldr	r1, [r5]
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 1446              		.loc 1 1535 0
 1447 000e 0343     		orrs	r3, r0
 1448 0010 6069     		ldr	r0, [r4, #20]
 1449 0012 0343     		orrs	r3, r0
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1450              		.loc 1 1536 0
 1451 0014 4A48     		ldr	r0, .L144
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 1452              		.loc 1 1535 0
 1453 0016 1343     		orrs	r3, r2
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1454              		.loc 1 1536 0
 1455 0018 0140     		ands	r1, r0
 1456 001a 0B43     		orrs	r3, r1
 1457 001c 2B60     		str	r3, [r5]
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1458              		.loc 1 1541 0
 1459 001e 6B68     		ldr	r3, [r5, #4]
 1460 0020 4849     		ldr	r1, .L144+4
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 1461              		.loc 1 1549 0
 1462 0022 206A     		ldr	r0, [r4, #32]
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1463              		.loc 1 1541 0
 1464 0024 0B40     		ands	r3, r1
 1465 0026 E168     		ldr	r1, [r4, #12]
 1466 0028 0B43     		orrs	r3, r1
 1467 002a 6B60     		str	r3, [r5, #4]
 1468              	.LVL97:
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 1469              		.loc 1 1549 0
 1470 002c A369     		ldr	r3, [r4, #24]
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1471              		.loc 1 1550 0
 1472 002e A968     		ldr	r1, [r5, #8]
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 1473              		.loc 1 1549 0
 1474 0030 0343     		orrs	r3, r0
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1475              		.loc 1 1550 0
 1476 0032 4548     		ldr	r0, .L144+8
 1477 0034 0140     		ands	r1, r0
 1478 0036 0B43     		orrs	r3, r1
 1479 0038 8021     		movs	r1, #128
 1480 003a AB60     		str	r3, [r5, #8]
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1481              		.loc 1 1553 0
 1482 003c 434B     		ldr	r3, .L144+12
ARM GAS  /tmp/ccjaQwTr.s 			page 63


 1483 003e 0902     		lsls	r1, r1, #8
 1484 0040 9D42     		cmp	r5, r3
 1485 0042 10D1     		bne	.L110
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1486              		.loc 1 1553 0 is_stmt 0 discriminator 1
 1487 0044 0320     		movs	r0, #3
 1488 0046 424B     		ldr	r3, .L144+16
 1489 0048 1B6B     		ldr	r3, [r3, #48]
 1490 004a 0340     		ands	r3, r0
 1491 004c 4148     		ldr	r0, .L144+20
 1492 004e C05C     		ldrb	r0, [r0, r3]
 1493              	.LVL98:
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1494              		.loc 1 1556 0 is_stmt 1 discriminator 1
 1495 0050 8A42     		cmp	r2, r1
 1496 0052 46D0     		beq	.L111
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1497              		.loc 1 1584 0
 1498 0054 0828     		cmp	r0, #8
 1499 0056 19D8     		bhi	.L140
 1500 0058 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 1501              	.L129:
 1502 005c 4F       		.byte	(.L128-.L129)/2
 1503 005d 18       		.byte	(.L140-.L129)/2
 1504 005e 54       		.byte	(.L130-.L129)/2
 1505 005f 18       		.byte	(.L140-.L129)/2
 1506 0060 5E       		.byte	(.L131-.L129)/2
 1507 0061 18       		.byte	(.L140-.L129)/2
 1508 0062 18       		.byte	(.L140-.L129)/2
 1509 0063 18       		.byte	(.L140-.L129)/2
 1510 0064 61       		.byte	(.L132-.L129)/2
 1511              	.LVL99:
 1512 0065 00       		.p2align 1
 1513              	.L110:
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1514              		.loc 1 1553 0 discriminator 2
 1515 0066 3C4B     		ldr	r3, .L144+24
 1516 0068 9D42     		cmp	r5, r3
 1517 006a 2CD1     		bne	.L113
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1518              		.loc 1 1553 0 is_stmt 0 discriminator 8
 1519 006c C020     		movs	r0, #192
 1520 006e 8026     		movs	r6, #128
 1521 0070 374B     		ldr	r3, .L144+16
 1522 0072 8002     		lsls	r0, r0, #10
 1523 0074 1B6B     		ldr	r3, [r3, #48]
 1524 0076 7602     		lsls	r6, r6, #9
 1525 0078 0340     		ands	r3, r0
 1526 007a B342     		cmp	r3, r6
 1527 007c 54D0     		beq	.L115
 1528 007e 07D8     		bhi	.L116
 1529 0080 002B     		cmp	r3, #0
 1530 0082 26D0     		beq	.L117
 1531              	.L114:
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1532              		.loc 1 1556 0 is_stmt 1
 1533 0084 8023     		movs	r3, #128
ARM GAS  /tmp/ccjaQwTr.s 			page 64


 1534 0086 1B02     		lsls	r3, r3, #8
 1535 0088 9A42     		cmp	r2, r3
 1536 008a 33D0     		beq	.L135
 1537              	.LVL100:
 1538              	.L140:
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1539              		.loc 1 1600 0
 1540 008c 0120     		movs	r0, #1
 1541              	.LVL101:
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1542              		.loc 1 1605 0
 1543 008e 19E0     		b	.L137
 1544              	.LVL102:
 1545              	.L116:
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1546              		.loc 1 1553 0 discriminator 8
 1547 0090 8026     		movs	r6, #128
 1548 0092 B602     		lsls	r6, r6, #10
 1549 0094 B342     		cmp	r3, r6
 1550 0096 4CD0     		beq	.L118
 1551 0098 8342     		cmp	r3, r0
 1552 009a F3D1     		bne	.L114
 1553              	.LVL103:
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1554              		.loc 1 1556 0
 1555 009c 8A42     		cmp	r2, r1
 1556 009e 31D1     		bne	.L130
 1557              	.LVL104:
 1558              	.L124:
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1559              		.loc 1 1564 0
 1560 00a0 6368     		ldr	r3, [r4, #4]
 1561 00a2 5808     		lsrs	r0, r3, #1
 1562 00a4 2D4B     		ldr	r3, .L144+28
 1563              	.LVL105:
 1564              	.L139:
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1565              		.loc 1 1570 0
 1566 00a6 C018     		adds	r0, r0, r3
 1567 00a8 6168     		ldr	r1, [r4, #4]
 1568 00aa FFF7FEFF 		bl	__aeabi_uidiv
 1569              	.LVL106:
 1570 00ae 83B2     		uxth	r3, r0
 1571              	.LVL107:
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1572              		.loc 1 1515 0
 1573 00b0 0020     		movs	r0, #0
 1574              	.LVL108:
 1575              	.L121:
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000F) >> 1U);
 1576              		.loc 1 1578 0
 1577 00b2 0F22     		movs	r2, #15
 1578 00b4 1900     		movs	r1, r3
 1579 00b6 9143     		bics	r1, r2
 1580 00b8 0A00     		movs	r2, r1
 1581              	.LVL109:
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
ARM GAS  /tmp/ccjaQwTr.s 			page 65


 1582              		.loc 1 1579 0
 1583 00ba 1B07     		lsls	r3, r3, #28
 1584              	.LVL110:
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1585              		.loc 1 1580 0
 1586 00bc 2168     		ldr	r1, [r4]
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 1587              		.loc 1 1579 0
 1588 00be 5B0F     		lsrs	r3, r3, #29
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1589              		.loc 1 1580 0
 1590 00c0 1343     		orrs	r3, r2
 1591 00c2 CB60     		str	r3, [r1, #12]
 1592              	.LVL111:
 1593              	.L137:
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1594              		.loc 1 1607 0
 1595              		@ sp needed
 1596              	.LVL112:
 1597 00c4 70BD     		pop	{r4, r5, r6, pc}
 1598              	.LVL113:
 1599              	.L113:
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1600              		.loc 1 1553 0 discriminator 9
 1601 00c6 264B     		ldr	r3, .L144+32
 1602 00c8 9D42     		cmp	r5, r3
 1603 00ca 02D0     		beq	.L117
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1604              		.loc 1 1553 0 is_stmt 0 discriminator 16
 1605 00cc 254B     		ldr	r3, .L144+36
 1606 00ce 9D42     		cmp	r5, r3
 1607 00d0 D8D1     		bne	.L114
 1608              	.L117:
 1609              	.LVL114:
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1610              		.loc 1 1556 0 is_stmt 1
 1611 00d2 8A42     		cmp	r2, r1
 1612 00d4 11D1     		bne	.L128
 1613              	.LVL115:
 1614              	.L122:
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1615              		.loc 1 1561 0
 1616 00d6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1617              	.LVL116:
 1618              	.L142:
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1619              		.loc 1 1567 0
 1620 00da 6368     		ldr	r3, [r4, #4]
 1621 00dc 4000     		lsls	r0, r0, #1
 1622 00de 5B08     		lsrs	r3, r3, #1
 1623 00e0 E1E7     		b	.L139
 1624              	.LVL117:
 1625              	.L111:
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1626              		.loc 1 1558 0
 1627 00e2 0828     		cmp	r0, #8
 1628 00e4 06D8     		bhi	.L135
ARM GAS  /tmp/ccjaQwTr.s 			page 66


 1629 00e6 FFF7FEFF 		bl	__gnu_thumb1_case_sqi
 1630              	.L123:
 1631 00ea F6       		.byte	(.L122-.L123)/2
 1632 00eb 05       		.byte	(.L135-.L123)/2
 1633 00ec DB       		.byte	(.L124-.L123)/2
 1634 00ed 05       		.byte	(.L135-.L123)/2
 1635 00ee 21       		.byte	(.L125-.L123)/2
 1636 00ef 05       		.byte	(.L135-.L123)/2
 1637 00f0 05       		.byte	(.L135-.L123)/2
 1638 00f1 05       		.byte	(.L135-.L123)/2
 1639 00f2 26       		.byte	(.L126-.L123)/2
 1640              	.LVL118:
 1641 00f3 00       		.p2align 1
 1642              	.L135:
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1643              		.loc 1 1574 0
 1644 00f4 0120     		movs	r0, #1
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 1645              		.loc 1 1514 0
 1646 00f6 0023     		movs	r3, #0
 1647 00f8 DBE7     		b	.L121
 1648              	.L128:
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1649              		.loc 1 1587 0
 1650 00fa FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 1651              	.LVL119:
 1652              	.L143:
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1653              		.loc 1 1593 0
 1654 00fe 6168     		ldr	r1, [r4, #4]
 1655 0100 4B08     		lsrs	r3, r1, #1
 1656 0102 02E0     		b	.L141
 1657              	.LVL120:
 1658              	.L130:
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1659              		.loc 1 1590 0
 1660 0104 6168     		ldr	r1, [r4, #4]
 1661 0106 184B     		ldr	r3, .L144+40
 1662 0108 4808     		lsrs	r0, r1, #1
 1663              	.LVL121:
 1664              	.L141:
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1665              		.loc 1 1596 0
 1666 010a C018     		adds	r0, r0, r3
 1667 010c FFF7FEFF 		bl	__aeabi_uidiv
 1668              	.LVL122:
 1669 0110 80B2     		uxth	r0, r0
 1670 0112 E860     		str	r0, [r5, #12]
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1671              		.loc 1 1515 0
 1672 0114 0020     		movs	r0, #0
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 1673              		.loc 1 1597 0
 1674 0116 D5E7     		b	.L137
 1675              	.LVL123:
 1676              	.L131:
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccjaQwTr.s 			page 67


 1677              		.loc 1 1593 0
 1678 0118 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1679              	.LVL124:
 1680 011c EFE7     		b	.L143
 1681              	.LVL125:
 1682              	.L132:
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1683              		.loc 1 1596 0
 1684 011e 8023     		movs	r3, #128
 1685 0120 6168     		ldr	r1, [r4, #4]
 1686 0122 1B02     		lsls	r3, r3, #8
 1687 0124 4808     		lsrs	r0, r1, #1
 1688 0126 F0E7     		b	.L141
 1689              	.LVL126:
 1690              	.L115:
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1691              		.loc 1 1556 0
 1692 0128 8A42     		cmp	r2, r1
 1693 012a F5D1     		bne	.L131
 1694              	.LVL127:
 1695              	.L125:
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1696              		.loc 1 1567 0
 1697 012c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1698              	.LVL128:
 1699 0130 D3E7     		b	.L142
 1700              	.LVL129:
 1701              	.L118:
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1702              		.loc 1 1556 0
 1703 0132 8A42     		cmp	r2, r1
 1704 0134 F3D1     		bne	.L132
 1705              	.LVL130:
 1706              	.L126:
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 1707              		.loc 1 1570 0
 1708 0136 6368     		ldr	r3, [r4, #4]
 1709 0138 5808     		lsrs	r0, r3, #1
 1710 013a 8023     		movs	r3, #128
 1711 013c 5B02     		lsls	r3, r3, #9
 1712 013e B2E7     		b	.L139
 1713              	.L145:
 1714              		.align	2
 1715              	.L144:
 1716 0140 F369FFEF 		.word	-268473869
 1717 0144 FFCFFFFF 		.word	-12289
 1718 0148 FFF4FFFF 		.word	-2817
 1719 014c 00380140 		.word	1073821696
 1720 0150 00100240 		.word	1073876992
 1721 0154 00000000 		.word	.LANCHOR0
 1722 0158 00440040 		.word	1073759232
 1723 015c 0024F400 		.word	16000000
 1724 0160 00480040 		.word	1073760256
 1725 0164 004C0040 		.word	1073761280
 1726 0168 00127A00 		.word	8000000
 1727              		.cfi_endproc
 1728              	.LFE63:
ARM GAS  /tmp/ccjaQwTr.s 			page 68


 1730              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 1731              		.align	1
 1732              		.global	UART_AdvFeatureConfig
 1733              		.syntax unified
 1734              		.code	16
 1735              		.thumb_func
 1736              		.fpu softvfp
 1738              	UART_AdvFeatureConfig:
 1739              	.LFB64:
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 1740              		.loc 1 1615 0
 1741              		.cfi_startproc
 1742              	.LVL131:
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1743              		.loc 1 1620 0
 1744 0000 436A     		ldr	r3, [r0, #36]
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 1745              		.loc 1 1615 0
 1746 0002 30B5     		push	{r4, r5, lr}
 1747              	.LCFI16:
 1748              		.cfi_def_cfa_offset 12
 1749              		.cfi_offset 4, -12
 1750              		.cfi_offset 5, -8
 1751              		.cfi_offset 14, -4
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1752              		.loc 1 1620 0
 1753 0004 DA07     		lsls	r2, r3, #31
 1754 0006 06D5     		bpl	.L147
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1755              		.loc 1 1623 0
 1756 0008 0168     		ldr	r1, [r0]
 1757 000a 284C     		ldr	r4, .L178
 1758 000c 4A68     		ldr	r2, [r1, #4]
 1759 000e 2240     		ands	r2, r4
 1760 0010 846A     		ldr	r4, [r0, #40]
 1761 0012 2243     		orrs	r2, r4
 1762 0014 4A60     		str	r2, [r1, #4]
 1763              	.L147:
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1764              		.loc 1 1627 0
 1765 0016 9A07     		lsls	r2, r3, #30
 1766 0018 06D5     		bpl	.L148
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1767              		.loc 1 1630 0
 1768 001a 0168     		ldr	r1, [r0]
 1769 001c 244C     		ldr	r4, .L178+4
 1770 001e 4A68     		ldr	r2, [r1, #4]
 1771 0020 2240     		ands	r2, r4
 1772 0022 C46A     		ldr	r4, [r0, #44]
 1773 0024 2243     		orrs	r2, r4
 1774 0026 4A60     		str	r2, [r1, #4]
 1775              	.L148:
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1776              		.loc 1 1634 0
 1777 0028 5A07     		lsls	r2, r3, #29
 1778 002a 06D5     		bpl	.L149
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccjaQwTr.s 			page 69


 1779              		.loc 1 1637 0
 1780 002c 0168     		ldr	r1, [r0]
 1781 002e 214C     		ldr	r4, .L178+8
 1782 0030 4A68     		ldr	r2, [r1, #4]
 1783 0032 2240     		ands	r2, r4
 1784 0034 046B     		ldr	r4, [r0, #48]
 1785 0036 2243     		orrs	r2, r4
 1786 0038 4A60     		str	r2, [r1, #4]
 1787              	.L149:
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1788              		.loc 1 1641 0
 1789 003a 1A07     		lsls	r2, r3, #28
 1790 003c 06D5     		bpl	.L150
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1791              		.loc 1 1644 0
 1792 003e 0168     		ldr	r1, [r0]
 1793 0040 1D4C     		ldr	r4, .L178+12
 1794 0042 4A68     		ldr	r2, [r1, #4]
 1795 0044 2240     		ands	r2, r4
 1796 0046 446B     		ldr	r4, [r0, #52]
 1797 0048 2243     		orrs	r2, r4
 1798 004a 4A60     		str	r2, [r1, #4]
 1799              	.L150:
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1800              		.loc 1 1648 0
 1801 004c DA06     		lsls	r2, r3, #27
 1802 004e 06D5     		bpl	.L151
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1803              		.loc 1 1651 0
 1804 0050 0168     		ldr	r1, [r0]
 1805 0052 1A4C     		ldr	r4, .L178+16
 1806 0054 8A68     		ldr	r2, [r1, #8]
 1807 0056 2240     		ands	r2, r4
 1808 0058 846B     		ldr	r4, [r0, #56]
 1809 005a 2243     		orrs	r2, r4
 1810 005c 8A60     		str	r2, [r1, #8]
 1811              	.L151:
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1812              		.loc 1 1655 0
 1813 005e 9A06     		lsls	r2, r3, #26
 1814 0060 06D5     		bpl	.L152
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1815              		.loc 1 1658 0
 1816 0062 0168     		ldr	r1, [r0]
 1817 0064 164C     		ldr	r4, .L178+20
 1818 0066 8A68     		ldr	r2, [r1, #8]
 1819 0068 2240     		ands	r2, r4
 1820 006a C46B     		ldr	r4, [r0, #60]
 1821 006c 2243     		orrs	r2, r4
 1822 006e 8A60     		str	r2, [r1, #8]
 1823              	.L152:
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1824              		.loc 1 1662 0
 1825 0070 5A06     		lsls	r2, r3, #25
 1826 0072 10D5     		bpl	.L154
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 1827              		.loc 1 1666 0
ARM GAS  /tmp/ccjaQwTr.s 			page 70


 1828 0074 0168     		ldr	r1, [r0]
 1829 0076 134D     		ldr	r5, .L178+24
 1830 0078 4A68     		ldr	r2, [r1, #4]
 1831 007a 046C     		ldr	r4, [r0, #64]
 1832 007c 2A40     		ands	r2, r5
 1833 007e 2243     		orrs	r2, r4
 1834 0080 4A60     		str	r2, [r1, #4]
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1835              		.loc 1 1668 0
 1836 0082 8022     		movs	r2, #128
 1837 0084 5203     		lsls	r2, r2, #13
 1838 0086 9442     		cmp	r4, r2
 1839 0088 05D1     		bne	.L154
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1840              		.loc 1 1671 0
 1841 008a 4A68     		ldr	r2, [r1, #4]
 1842 008c 0E4C     		ldr	r4, .L178+28
 1843 008e 2240     		ands	r2, r4
 1844 0090 446C     		ldr	r4, [r0, #68]
 1845 0092 2243     		orrs	r2, r4
 1846 0094 4A60     		str	r2, [r1, #4]
 1847              	.L154:
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1848              		.loc 1 1676 0
 1849 0096 1B06     		lsls	r3, r3, #24
 1850 0098 06D5     		bpl	.L146
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1851              		.loc 1 1679 0
 1852 009a 0268     		ldr	r2, [r0]
 1853 009c 0B49     		ldr	r1, .L178+32
 1854 009e 5368     		ldr	r3, [r2, #4]
 1855 00a0 0B40     		ands	r3, r1
 1856 00a2 816C     		ldr	r1, [r0, #72]
 1857 00a4 0B43     		orrs	r3, r1
 1858 00a6 5360     		str	r3, [r2, #4]
 1859              	.L146:
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1860              		.loc 1 1681 0
 1861              		@ sp needed
 1862 00a8 30BD     		pop	{r4, r5, pc}
 1863              	.L179:
 1864 00aa C046     		.align	2
 1865              	.L178:
 1866 00ac FFFFFDFF 		.word	-131073
 1867 00b0 FFFFFEFF 		.word	-65537
 1868 00b4 FFFFFBFF 		.word	-262145
 1869 00b8 FF7FFFFF 		.word	-32769
 1870 00bc FFEFFFFF 		.word	-4097
 1871 00c0 FFDFFFFF 		.word	-8193
 1872 00c4 FFFFEFFF 		.word	-1048577
 1873 00c8 FFFF9FFF 		.word	-6291457
 1874 00cc FFFFF7FF 		.word	-524289
 1875              		.cfi_endproc
 1876              	.LFE64:
 1878              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 1879              		.align	1
 1880              		.global	UART_WaitOnFlagUntilTimeout
ARM GAS  /tmp/ccjaQwTr.s 			page 71


 1881              		.syntax unified
 1882              		.code	16
 1883              		.thumb_func
 1884              		.fpu softvfp
 1886              	UART_WaitOnFlagUntilTimeout:
 1887              	.LFB66:
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = HAL_GetTick();
 1888              		.loc 1 1743 0
 1889              		.cfi_startproc
 1890              	.LVL132:
 1891 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1892              	.LCFI17:
 1893              		.cfi_def_cfa_offset 32
 1894              		.cfi_offset 0, -32
 1895              		.cfi_offset 1, -28
 1896              		.cfi_offset 2, -24
 1897              		.cfi_offset 4, -20
 1898              		.cfi_offset 5, -16
 1899              		.cfi_offset 6, -12
 1900              		.cfi_offset 7, -8
 1901              		.cfi_offset 14, -4
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = HAL_GetTick();
 1902              		.loc 1 1743 0
 1903 0002 1D00     		movs	r5, r3
 1904 0004 0400     		movs	r4, r0
 1905 0006 0E00     		movs	r6, r1
 1906 0008 0192     		str	r2, [sp, #4]
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1907              		.loc 1 1744 0
 1908 000a FFF7FEFF 		bl	HAL_GetTick
 1909              	.LVL133:
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1910              		.loc 1 1747 0
 1911 000e 019B     		ldr	r3, [sp, #4]
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1912              		.loc 1 1744 0
 1913 0010 0700     		movs	r7, r0
 1914              	.LVL134:
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1915              		.loc 1 1747 0
 1916 0012 002B     		cmp	r3, #0
 1917 0014 32D0     		beq	.L181
 1918              	.LVL135:
 1919              	.L182:
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1920              		.loc 1 1775 0
 1921 0016 2268     		ldr	r2, [r4]
 1922              	.L188:
 1923 0018 D369     		ldr	r3, [r2, #28]
 1924 001a 3340     		ands	r3, r6
 1925 001c 9E42     		cmp	r6, r3
 1926 001e 32D1     		bne	.L192
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1927              		.loc 1 1778 0
 1928 0020 6B1C     		adds	r3, r5, #1
 1929 0022 F9D0     		beq	.L188
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
ARM GAS  /tmp/ccjaQwTr.s 			page 72


 1930              		.loc 1 1780 0
 1931 0024 002D     		cmp	r5, #0
 1932 0026 09D0     		beq	.L190
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1933              		.loc 1 1780 0 is_stmt 0 discriminator 1
 1934 0028 FFF7FEFF 		bl	HAL_GetTick
 1935              	.LVL136:
 1936 002c C01B     		subs	r0, r0, r7
 1937 002e 8542     		cmp	r5, r0
 1938 0030 F1D2     		bcs	.L182
 1939 0032 03E0     		b	.L190
 1940              	.L187:
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1941              		.loc 1 1752 0 is_stmt 1
 1942 0034 6B1C     		adds	r3, r5, #1
 1943 0036 22D0     		beq	.L183
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1944              		.loc 1 1754 0
 1945 0038 002D     		cmp	r5, #0
 1946 003a 1AD1     		bne	.L184
 1947              	.L190:
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 1948              		.loc 1 1783 0
 1949 003c 8021     		movs	r1, #128
 1950 003e 2368     		ldr	r3, [r4]
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 1951              		.loc 1 1785 0
 1952 0040 1248     		ldr	r0, .L199
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 1953              		.loc 1 1783 0
 1954 0042 1A68     		ldr	r2, [r3]
 1955 0044 8A43     		bics	r2, r1
 1956 0046 1A60     		str	r2, [r3]
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 1957              		.loc 1 1784 0
 1958 0048 2022     		movs	r2, #32
 1959 004a 1968     		ldr	r1, [r3]
 1960 004c 9143     		bics	r1, r2
 1961 004e 1960     		str	r1, [r3]
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 1962              		.loc 1 1785 0
 1963 0050 1968     		ldr	r1, [r3]
 1964 0052 0140     		ands	r1, r0
 1965 0054 1960     		str	r1, [r3]
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1966              		.loc 1 1786 0
 1967 0056 9968     		ldr	r1, [r3, #8]
 1968 0058 0330     		adds	r0, r0, #3
 1969 005a FF30     		adds	r0, r0, #255
 1970 005c 8143     		bics	r1, r0
 1971 005e 9960     		str	r1, [r3, #8]
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 1972              		.loc 1 1788 0
 1973 0060 2300     		movs	r3, r4
 1974 0062 6933     		adds	r3, r3, #105
 1975 0064 1A70     		strb	r2, [r3]
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjaQwTr.s 			page 73


 1976              		.loc 1 1789 0
 1977 0066 5A70     		strb	r2, [r3, #1]
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1978              		.loc 1 1792 0
 1979 0068 0023     		movs	r3, #0
 1980 006a 6834     		adds	r4, r4, #104
 1981              	.LVL137:
 1982 006c 2370     		strb	r3, [r4]
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 1983              		.loc 1 1794 0
 1984 006e 0230     		adds	r0, r0, #2
 1985 0070 0AE0     		b	.L185
 1986              	.LVL138:
 1987              	.L184:
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 1988              		.loc 1 1754 0 discriminator 1
 1989 0072 FFF7FEFF 		bl	HAL_GetTick
 1990              	.LVL139:
 1991 0076 C01B     		subs	r0, r0, r7
 1992 0078 8542     		cmp	r5, r0
 1993 007a DFD3     		bcc	.L190
 1994              	.L181:
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1995              		.loc 1 1749 0
 1996 007c 2268     		ldr	r2, [r4]
 1997              	.L183:
 1998 007e D369     		ldr	r3, [r2, #28]
 1999 0080 3340     		ands	r3, r6
 2000 0082 9E42     		cmp	r6, r3
 2001 0084 D6D1     		bne	.L187
 2002              	.L192:
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2003              		.loc 1 1799 0
 2004 0086 0020     		movs	r0, #0
 2005              	.LVL140:
 2006              	.L185:
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2007              		.loc 1 1800 0
 2008              		@ sp needed
 2009              	.LVL141:
 2010              	.LVL142:
 2011              	.LVL143:
 2012 0088 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2013              	.L200:
 2014 008a C046     		.align	2
 2015              	.L199:
 2016 008c FFFEFFFF 		.word	-257
 2017              		.cfi_endproc
 2018              	.LFE66:
 2020              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 2021              		.align	1
 2022              		.global	HAL_UART_Transmit
 2023              		.syntax unified
 2024              		.code	16
 2025              		.thumb_func
 2026              		.fpu softvfp
 2028              	HAL_UART_Transmit:
ARM GAS  /tmp/ccjaQwTr.s 			page 74


 2029              	.LFB41:
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    uint16_t* tmp;
 2030              		.loc 1 660 0
 2031              		.cfi_startproc
 2032              	.LVL144:
 2033 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2034              	.LCFI18:
 2035              		.cfi_def_cfa_offset 32
 2036              		.cfi_offset 0, -32
 2037              		.cfi_offset 1, -28
 2038              		.cfi_offset 2, -24
 2039              		.cfi_offset 4, -20
 2040              		.cfi_offset 5, -16
 2041              		.cfi_offset 6, -12
 2042              		.cfi_offset 7, -8
 2043              		.cfi_offset 14, -4
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2044              		.loc 1 664 0
 2045 0002 0600     		movs	r6, r0
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    uint16_t* tmp;
 2046              		.loc 1 660 0
 2047 0004 0193     		str	r3, [sp, #4]
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2048              		.loc 1 664 0
 2049 0006 6936     		adds	r6, r6, #105
 2050 0008 3378     		ldrb	r3, [r6]
 2051              	.LVL145:
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    uint16_t* tmp;
 2052              		.loc 1 660 0
 2053 000a 0400     		movs	r4, r0
 2054 000c 0D00     		movs	r5, r1
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2055              		.loc 1 723 0
 2056 000e 0220     		movs	r0, #2
 2057              	.LVL146:
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2058              		.loc 1 664 0
 2059 0010 202B     		cmp	r3, #32
 2060 0012 39D1     		bne	.L202
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2061              		.loc 1 668 0
 2062 0014 0138     		subs	r0, r0, #1
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2063              		.loc 1 666 0
 2064 0016 0029     		cmp	r1, #0
 2065 0018 36D0     		beq	.L202
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2066              		.loc 1 666 0 is_stmt 0 discriminator 1
 2067 001a 002A     		cmp	r2, #0
 2068 001c 34D0     		beq	.L202
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2069              		.loc 1 674 0 is_stmt 1
 2070 001e 8023     		movs	r3, #128
 2071 0020 A168     		ldr	r1, [r4, #8]
 2072              	.LVL147:
 2073 0022 5B01     		lsls	r3, r3, #5
 2074 0024 9942     		cmp	r1, r3
ARM GAS  /tmp/ccjaQwTr.s 			page 75


 2075 0026 04D1     		bne	.L203
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2076              		.loc 1 674 0 is_stmt 0 discriminator 1
 2077 0028 2369     		ldr	r3, [r4, #16]
 2078 002a 002B     		cmp	r3, #0
 2079 002c 01D1     		bne	.L203
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2080              		.loc 1 676 0 is_stmt 1
 2081 002e 0542     		tst	r5, r0
 2082 0030 2AD1     		bne	.L202
 2083              	.L203:
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2084              		.loc 1 683 0
 2085 0032 2700     		movs	r7, r4
 2086 0034 6837     		adds	r7, r7, #104
 2087 0036 3B78     		ldrb	r3, [r7]
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2088              		.loc 1 723 0
 2089 0038 0220     		movs	r0, #2
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2090              		.loc 1 683 0
 2091 003a 012B     		cmp	r3, #1
 2092 003c 24D0     		beq	.L202
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2093              		.loc 1 683 0 is_stmt 0 discriminator 2
 2094 003e 0123     		movs	r3, #1
 2095 0040 3B70     		strb	r3, [r7]
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2096              		.loc 1 685 0 is_stmt 1 discriminator 2
 2097 0042 0023     		movs	r3, #0
 2098 0044 E366     		str	r3, [r4, #108]
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2099              		.loc 1 686 0 discriminator 2
 2100 0046 2133     		adds	r3, r3, #33
 2101 0048 3370     		strb	r3, [r6]
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 2102              		.loc 1 688 0 discriminator 2
 2103 004a 2300     		movs	r3, r4
 2104 004c 5033     		adds	r3, r3, #80
 2105 004e 1A80     		strh	r2, [r3]
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 2106              		.loc 1 689 0 discriminator 2
 2107 0050 5A80     		strh	r2, [r3, #2]
 2108              	.LVL148:
 2109              	.L204:
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2110              		.loc 1 690 0
 2111 0052 2300     		movs	r3, r4
 2112 0054 5233     		adds	r3, r3, #82
 2113 0056 1A88     		ldrh	r2, [r3]
 2114 0058 002A     		cmp	r2, #0
 2115 005a 0AD1     		bne	.L208
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2116              		.loc 1 708 0
 2117 005c 019B     		ldr	r3, [sp, #4]
 2118 005e 4021     		movs	r1, #64
 2119 0060 2000     		movs	r0, r4
ARM GAS  /tmp/ccjaQwTr.s 			page 76


 2120 0062 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 2121              	.LVL149:
 2122 0066 0028     		cmp	r0, #0
 2123 0068 0DD1     		bne	.L209
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2124              		.loc 1 714 0
 2125 006a 2023     		movs	r3, #32
 2126 006c 3370     		strb	r3, [r6]
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2127              		.loc 1 717 0
 2128 006e 3870     		strb	r0, [r7]
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2129              		.loc 1 719 0
 2130 0070 0AE0     		b	.L202
 2131              	.L208:
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, Timeout) != HAL_OK)
 2132              		.loc 1 692 0
 2133 0072 013A     		subs	r2, r2, #1
 2134 0074 1A80     		strh	r2, [r3]
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2135              		.loc 1 693 0
 2136 0076 8021     		movs	r1, #128
 2137 0078 019B     		ldr	r3, [sp, #4]
 2138 007a 0022     		movs	r2, #0
 2139 007c 2000     		movs	r0, r4
 2140 007e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 2141              	.LVL150:
 2142 0082 0028     		cmp	r0, #0
 2143 0084 01D0     		beq	.L205
 2144              	.L209:
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2145              		.loc 1 695 0
 2146 0086 0320     		movs	r0, #3
 2147              	.L202:
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2148              		.loc 1 725 0
 2149              		@ sp needed
 2150              	.LVL151:
 2151              	.LVL152:
 2152              	.LVL153:
 2153 0088 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2154              	.LVL154:
 2155              	.L205:
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2156              		.loc 1 697 0
 2157 008a A368     		ldr	r3, [r4, #8]
 2158 008c 2268     		ldr	r2, [r4]
 2159 008e 1900     		movs	r1, r3
 2160 0090 8023     		movs	r3, #128
 2161 0092 5B01     		lsls	r3, r3, #5
 2162 0094 9942     		cmp	r1, r3
 2163 0096 08D1     		bne	.L206
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2164              		.loc 1 697 0 is_stmt 0 discriminator 1
 2165 0098 2369     		ldr	r3, [r4, #16]
 2166 009a 002B     		cmp	r3, #0
 2167 009c 05D1     		bne	.L206
ARM GAS  /tmp/ccjaQwTr.s 			page 77


 2168              	.LVL155:
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 2169              		.loc 1 700 0 is_stmt 1
 2170 009e 2B88     		ldrh	r3, [r5]
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2171              		.loc 1 701 0
 2172 00a0 0235     		adds	r5, r5, #2
 2173              	.LVL156:
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 2174              		.loc 1 700 0
 2175 00a2 DB05     		lsls	r3, r3, #23
 2176 00a4 DB0D     		lsrs	r3, r3, #23
 2177 00a6 1385     		strh	r3, [r2, #40]
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2178              		.loc 1 701 0
 2179 00a8 D3E7     		b	.L204
 2180              	.LVL157:
 2181              	.L206:
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2182              		.loc 1 705 0
 2183 00aa 2B78     		ldrb	r3, [r5]
 2184 00ac 0135     		adds	r5, r5, #1
 2185              	.LVL158:
 2186 00ae 1385     		strh	r3, [r2, #40]
 2187 00b0 CFE7     		b	.L204
 2188              		.cfi_endproc
 2189              	.LFE41:
 2191              		.section	.text.HAL_UART_Receive,"ax",%progbits
 2192              		.align	1
 2193              		.global	HAL_UART_Receive
 2194              		.syntax unified
 2195              		.code	16
 2196              		.thumb_func
 2197              		.fpu softvfp
 2199              	HAL_UART_Receive:
 2200              	.LFB42:
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 2201              		.loc 1 740 0
 2202              		.cfi_startproc
 2203              	.LVL159:
 2204 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2205              	.LCFI19:
 2206              		.cfi_def_cfa_offset 32
 2207              		.cfi_offset 0, -32
 2208              		.cfi_offset 1, -28
 2209              		.cfi_offset 2, -24
 2210              		.cfi_offset 4, -20
 2211              		.cfi_offset 5, -16
 2212              		.cfi_offset 6, -12
 2213              		.cfi_offset 7, -8
 2214              		.cfi_offset 14, -4
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2215              		.loc 1 745 0
 2216 0002 0600     		movs	r6, r0
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 2217              		.loc 1 740 0
 2218 0004 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccjaQwTr.s 			page 78


 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2219              		.loc 1 745 0
 2220 0006 6A36     		adds	r6, r6, #106
 2221 0008 3378     		ldrb	r3, [r6]
 2222              	.LVL160:
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 2223              		.loc 1 740 0
 2224 000a 0400     		movs	r4, r0
 2225 000c 0D00     		movs	r5, r1
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2226              		.loc 1 806 0
 2227 000e 0220     		movs	r0, #2
 2228              	.LVL161:
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2229              		.loc 1 745 0
 2230 0010 202B     		cmp	r3, #32
 2231 0012 32D1     		bne	.L218
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2232              		.loc 1 749 0
 2233 0014 0138     		subs	r0, r0, #1
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2234              		.loc 1 747 0
 2235 0016 0029     		cmp	r1, #0
 2236 0018 2FD0     		beq	.L218
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2237              		.loc 1 747 0 is_stmt 0 discriminator 1
 2238 001a 002A     		cmp	r2, #0
 2239 001c 2DD0     		beq	.L218
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2240              		.loc 1 755 0 is_stmt 1
 2241 001e 8023     		movs	r3, #128
 2242 0020 A168     		ldr	r1, [r4, #8]
 2243              	.LVL162:
 2244 0022 5B01     		lsls	r3, r3, #5
 2245 0024 9942     		cmp	r1, r3
 2246 0026 04D1     		bne	.L219
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2247              		.loc 1 755 0 is_stmt 0 discriminator 1
 2248 0028 2369     		ldr	r3, [r4, #16]
 2249 002a 002B     		cmp	r3, #0
 2250 002c 01D1     		bne	.L219
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2251              		.loc 1 757 0 is_stmt 1
 2252 002e 0542     		tst	r5, r0
 2253 0030 23D1     		bne	.L218
 2254              	.L219:
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2255              		.loc 1 764 0
 2256 0032 2300     		movs	r3, r4
 2257 0034 6833     		adds	r3, r3, #104
 2258 0036 1F78     		ldrb	r7, [r3]
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2259              		.loc 1 806 0
 2260 0038 0220     		movs	r0, #2
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2261              		.loc 1 764 0
 2262 003a 012F     		cmp	r7, #1
ARM GAS  /tmp/ccjaQwTr.s 			page 79


 2263 003c 1DD0     		beq	.L218
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2264              		.loc 1 764 0 is_stmt 0 discriminator 2
 2265 003e 0138     		subs	r0, r0, #1
 2266 0040 1870     		strb	r0, [r3]
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2267              		.loc 1 766 0 is_stmt 1 discriminator 2
 2268 0042 0023     		movs	r3, #0
 2269 0044 E366     		str	r3, [r4, #108]
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2270              		.loc 1 767 0 discriminator 2
 2271 0046 2233     		adds	r3, r3, #34
 2272 0048 3370     		strb	r3, [r6]
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 2273              		.loc 1 769 0 discriminator 2
 2274 004a 2300     		movs	r3, r4
 2275 004c 5833     		adds	r3, r3, #88
 2276 004e 1A80     		strh	r2, [r3]
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2277              		.loc 1 770 0 discriminator 2
 2278 0050 5A80     		strh	r2, [r3, #2]
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 2279              		.loc 1 773 0 discriminator 2
 2280 0052 8022     		movs	r2, #128
 2281              	.LVL163:
 2282 0054 0433     		adds	r3, r3, #4
 2283              	.LVL164:
 2284 0056 5201     		lsls	r2, r2, #5
 2285 0058 9142     		cmp	r1, r2
 2286 005a 11D1     		bne	.L220
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 2287              		.loc 1 773 0 is_stmt 0 discriminator 1
 2288 005c 2269     		ldr	r2, [r4, #16]
 2289 005e 002A     		cmp	r2, #0
 2290 0060 0CD1     		bne	.L221
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 2291              		.loc 1 773 0 discriminator 3
 2292 0062 1F4A     		ldr	r2, .L244
 2293              	.L243:
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 2294              		.loc 1 773 0 discriminator 11
 2295 0064 1A80     		strh	r2, [r3]
 2296              	.L222:
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2297              		.loc 1 774 0 is_stmt 1
 2298 0066 1F88     		ldrh	r7, [r3]
 2299              	.LVL165:
 2300              	.L225:
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2301              		.loc 1 777 0
 2302 0068 2300     		movs	r3, r4
 2303 006a 5A33     		adds	r3, r3, #90
 2304 006c 1888     		ldrh	r0, [r3]
 2305 006e 0028     		cmp	r0, #0
 2306 0070 16D1     		bne	.L228
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2307              		.loc 1 797 0
ARM GAS  /tmp/ccjaQwTr.s 			page 80


 2308 0072 2023     		movs	r3, #32
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2309              		.loc 1 800 0
 2310 0074 6834     		adds	r4, r4, #104
 2311              	.LVL166:
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2312              		.loc 1 797 0
 2313 0076 3370     		strb	r3, [r6]
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2314              		.loc 1 800 0
 2315 0078 2070     		strb	r0, [r4]
 2316              	.LVL167:
 2317              	.L218:
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2318              		.loc 1 808 0
 2319              		@ sp needed
 2320              	.LVL168:
 2321              	.LVL169:
 2322 007a FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2323              	.LVL170:
 2324              	.L221:
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 2325              		.loc 1 773 0 discriminator 4
 2326 007c FF22     		movs	r2, #255
 2327 007e F1E7     		b	.L243
 2328              	.L220:
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 2329              		.loc 1 773 0 is_stmt 0 discriminator 2
 2330 0080 0029     		cmp	r1, #0
 2331 0082 04D1     		bne	.L223
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 2332              		.loc 1 773 0 discriminator 5
 2333 0084 2269     		ldr	r2, [r4, #16]
 2334 0086 002A     		cmp	r2, #0
 2335 0088 F8D0     		beq	.L221
 2336              	.L224:
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 2337              		.loc 1 773 0 discriminator 8
 2338 008a 7F22     		movs	r2, #127
 2339 008c EAE7     		b	.L243
 2340              	.L223:
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 2341              		.loc 1 773 0 discriminator 6
 2342 008e 8022     		movs	r2, #128
 2343 0090 5205     		lsls	r2, r2, #21
 2344 0092 9142     		cmp	r1, r2
 2345 0094 E7D1     		bne	.L222
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 2346              		.loc 1 773 0 discriminator 9
 2347 0096 2269     		ldr	r2, [r4, #16]
 2348 0098 002A     		cmp	r2, #0
 2349 009a F6D0     		beq	.L224
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 2350              		.loc 1 773 0 discriminator 11
 2351 009c 3F22     		movs	r2, #63
 2352 009e E1E7     		b	.L243
 2353              	.LVL171:
ARM GAS  /tmp/ccjaQwTr.s 			page 81


 2354              	.L228:
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 2355              		.loc 1 779 0 is_stmt 1
 2356 00a0 0138     		subs	r0, r0, #1
 2357 00a2 1880     		strh	r0, [r3]
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2358              		.loc 1 780 0
 2359 00a4 0022     		movs	r2, #0
 2360 00a6 019B     		ldr	r3, [sp, #4]
 2361 00a8 2021     		movs	r1, #32
 2362 00aa 2000     		movs	r0, r4
 2363 00ac FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 2364              	.LVL172:
 2365 00b0 0028     		cmp	r0, #0
 2366 00b2 13D1     		bne	.L234
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2367              		.loc 1 784 0
 2368 00b4 A268     		ldr	r2, [r4, #8]
 2369 00b6 2368     		ldr	r3, [r4]
 2370 00b8 1100     		movs	r1, r2
 2371 00ba 8022     		movs	r2, #128
 2372 00bc 5201     		lsls	r2, r2, #5
 2373 00be 9142     		cmp	r1, r2
 2374 00c0 07D1     		bne	.L226
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2375              		.loc 1 784 0 is_stmt 0 discriminator 1
 2376 00c2 2269     		ldr	r2, [r4, #16]
 2377 00c4 002A     		cmp	r2, #0
 2378 00c6 04D1     		bne	.L226
 2379              	.LVL173:
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2;
 2380              		.loc 1 787 0 is_stmt 1
 2381 00c8 9B8C     		ldrh	r3, [r3, #36]
 2382 00ca 3B40     		ands	r3, r7
 2383 00cc 2B80     		strh	r3, [r5]
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2384              		.loc 1 788 0
 2385 00ce 0235     		adds	r5, r5, #2
 2386              	.LVL174:
 2387 00d0 CAE7     		b	.L225
 2388              	.LVL175:
 2389              	.L226:
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2390              		.loc 1 792 0
 2391 00d2 9B8C     		ldrh	r3, [r3, #36]
 2392 00d4 3B40     		ands	r3, r7
 2393 00d6 2B70     		strb	r3, [r5]
 2394 00d8 0135     		adds	r5, r5, #1
 2395              	.LVL176:
 2396 00da C5E7     		b	.L225
 2397              	.L234:
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2398              		.loc 1 782 0
 2399 00dc 0320     		movs	r0, #3
 2400 00de CCE7     		b	.L218
 2401              	.L245:
 2402              		.align	2
ARM GAS  /tmp/ccjaQwTr.s 			page 82


 2403              	.L244:
 2404 00e0 FF010000 		.word	511
 2405              		.cfi_endproc
 2406              	.LFE42:
 2408              		.section	.text.UART_CheckIdleState,"ax",%progbits
 2409              		.align	1
 2410              		.global	UART_CheckIdleState
 2411              		.syntax unified
 2412              		.code	16
 2413              		.thumb_func
 2414              		.fpu softvfp
 2416              	UART_CheckIdleState:
 2417              	.LFB65:
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
 2418              		.loc 1 1689 0
 2419              		.cfi_startproc
 2420              	.LVL177:
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2421              		.loc 1 1691 0
 2422 0000 0023     		movs	r3, #0
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
 2423              		.loc 1 1689 0
 2424 0002 10B5     		push	{r4, lr}
 2425              	.LCFI20:
 2426              		.cfi_def_cfa_offset 8
 2427              		.cfi_offset 4, -8
 2428              		.cfi_offset 14, -4
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2429              		.loc 1 1697 0
 2430 0004 174A     		ldr	r2, .L257
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2431              		.loc 1 1691 0
 2432 0006 C366     		str	r3, [r0, #108]
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2433              		.loc 1 1697 0
 2434 0008 0368     		ldr	r3, [r0]
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
 2435              		.loc 1 1689 0
 2436 000a 0400     		movs	r4, r0
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2437              		.loc 1 1697 0
 2438 000c 9342     		cmp	r3, r2
 2439 000e 0BD0     		beq	.L247
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2440              		.loc 1 1697 0 is_stmt 0 discriminator 1
 2441 0010 154A     		ldr	r2, .L257+4
 2442 0012 9342     		cmp	r3, r2
 2443 0014 08D0     		beq	.L247
 2444              	.LVL178:
 2445              	.L251:
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 2446              		.loc 1 1724 0 is_stmt 1
 2447 0016 2200     		movs	r2, r4
 2448 0018 2023     		movs	r3, #32
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2449              		.loc 1 1728 0
 2450 001a 0020     		movs	r0, #0
ARM GAS  /tmp/ccjaQwTr.s 			page 83


1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 2451              		.loc 1 1724 0
 2452 001c 6932     		adds	r2, r2, #105
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2453              		.loc 1 1728 0
 2454 001e 6834     		adds	r4, r4, #104
 2455              	.LVL179:
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 2456              		.loc 1 1724 0
 2457 0020 1370     		strb	r3, [r2]
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2458              		.loc 1 1725 0
 2459 0022 5370     		strb	r3, [r2, #1]
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2460              		.loc 1 1728 0
 2461 0024 2070     		strb	r0, [r4]
 2462              	.LVL180:
 2463              	.L248:
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2464              		.loc 1 1731 0
 2465              		@ sp needed
 2466 0026 10BD     		pop	{r4, pc}
 2467              	.LVL181:
 2468              	.L247:
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2469              		.loc 1 1700 0
 2470 0028 1B68     		ldr	r3, [r3]
 2471 002a 1B07     		lsls	r3, r3, #28
 2472 002c 0ED4     		bmi	.L249
 2473              	.LVL182:
 2474              	.L252:
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2475              		.loc 1 1711 0
 2476 002e 2368     		ldr	r3, [r4]
 2477 0030 1B68     		ldr	r3, [r3]
 2478 0032 5B07     		lsls	r3, r3, #29
 2479 0034 EFD5     		bpl	.L251
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2480              		.loc 1 1714 0
 2481 0036 FA23     		movs	r3, #250
 2482 0038 8021     		movs	r1, #128
 2483 003a 9B00     		lsls	r3, r3, #2
 2484 003c 0022     		movs	r2, #0
 2485 003e C903     		lsls	r1, r1, #15
 2486 0040 2000     		movs	r0, r4
 2487 0042 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 2488              	.LVL183:
 2489 0046 0028     		cmp	r0, #0
 2490 0048 0AD1     		bne	.L253
 2491 004a E4E7     		b	.L251
 2492              	.LVL184:
 2493              	.L249:
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2494              		.loc 1 1703 0
 2495 004c FA23     		movs	r3, #250
 2496 004e 8021     		movs	r1, #128
 2497 0050 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccjaQwTr.s 			page 84


 2498 0052 0022     		movs	r2, #0
 2499 0054 8903     		lsls	r1, r1, #14
 2500 0056 2000     		movs	r0, r4
 2501              	.LVL185:
 2502 0058 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 2503              	.LVL186:
 2504 005c 0028     		cmp	r0, #0
 2505 005e E6D0     		beq	.L252
 2506              	.L253:
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2507              		.loc 1 1706 0
 2508 0060 0320     		movs	r0, #3
 2509 0062 E0E7     		b	.L248
 2510              	.L258:
 2511              		.align	2
 2512              	.L257:
 2513 0064 00380140 		.word	1073821696
 2514 0068 00440040 		.word	1073759232
 2515              		.cfi_endproc
 2516              	.LFE65:
 2518              		.section	.text.HAL_UART_Init,"ax",%progbits
 2519              		.align	1
 2520              		.global	HAL_UART_Init
 2521              		.syntax unified
 2522              		.code	16
 2523              		.thumb_func
 2524              		.fpu softvfp
 2526              	HAL_UART_Init:
 2527              	.LFB35:
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 2528              		.loc 1 284 0
 2529              		.cfi_startproc
 2530              	.LVL187:
 2531 0000 70B5     		push	{r4, r5, r6, lr}
 2532              	.LCFI21:
 2533              		.cfi_def_cfa_offset 16
 2534              		.cfi_offset 4, -16
 2535              		.cfi_offset 5, -12
 2536              		.cfi_offset 6, -8
 2537              		.cfi_offset 14, -4
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 2538              		.loc 1 284 0
 2539 0002 041E     		subs	r4, r0, #0
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2540              		.loc 1 286 0
 2541 0004 01D1     		bne	.L260
 2542              	.LVL188:
 2543              	.L263:
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2544              		.loc 1 288 0
 2545 0006 0120     		movs	r0, #1
 2546              	.L261:
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2547              		.loc 1 354 0
 2548              		@ sp needed
 2549              	.LVL189:
 2550 0008 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccjaQwTr.s 			page 85


 2551              	.LVL190:
 2552              	.L260:
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2553              		.loc 1 302 0
 2554 000a 0500     		movs	r5, r0
 2555 000c 6935     		adds	r5, r5, #105
 2556 000e 2B78     		ldrb	r3, [r5]
 2557 0010 DBB2     		uxtb	r3, r3
 2558 0012 002B     		cmp	r3, #0
 2559 0014 04D1     		bne	.L262
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2560              		.loc 1 305 0
 2561 0016 0200     		movs	r2, r0
 2562 0018 6832     		adds	r2, r2, #104
 2563 001a 1370     		strb	r3, [r2]
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2564              		.loc 1 308 0
 2565 001c FFF7FEFF 		bl	HAL_UART_MspInit
 2566              	.LVL191:
 2567              	.L262:
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2568              		.loc 1 311 0
 2569 0020 2423     		movs	r3, #36
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2570              		.loc 1 314 0
 2571 0022 0121     		movs	r1, #1
 2572 0024 2268     		ldr	r2, [r4]
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2573              		.loc 1 311 0
 2574 0026 2B70     		strb	r3, [r5]
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2575              		.loc 1 314 0
 2576 0028 1368     		ldr	r3, [r2]
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2577              		.loc 1 317 0
 2578 002a 2000     		movs	r0, r4
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2579              		.loc 1 314 0
 2580 002c 8B43     		bics	r3, r1
 2581 002e 1360     		str	r3, [r2]
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2582              		.loc 1 317 0
 2583 0030 FFF7FEFF 		bl	UART_SetConfig
 2584              	.LVL192:
 2585 0034 0128     		cmp	r0, #1
 2586 0036 E6D0     		beq	.L263
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2587              		.loc 1 322 0
 2588 0038 636A     		ldr	r3, [r4, #36]
 2589 003a 002B     		cmp	r3, #0
 2590 003c 02D0     		beq	.L264
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2591              		.loc 1 324 0
 2592 003e 2000     		movs	r0, r4
 2593 0040 FFF7FEFF 		bl	UART_AdvFeatureConfig
 2594              	.LVL193:
 2595              	.L264:
ARM GAS  /tmp/ccjaQwTr.s 			page 86


 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2596              		.loc 1 331 0
 2597 0044 2368     		ldr	r3, [r4]
 2598 0046 0849     		ldr	r1, .L271
 2599 0048 5A68     		ldr	r2, [r3, #4]
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2600              		.loc 1 353 0
 2601 004a 2000     		movs	r0, r4
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2602              		.loc 1 331 0
 2603 004c 0A40     		ands	r2, r1
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2604              		.loc 1 337 0
 2605 004e 2A21     		movs	r1, #42
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2606              		.loc 1 331 0
 2607 0050 5A60     		str	r2, [r3, #4]
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2608              		.loc 1 337 0
 2609 0052 9A68     		ldr	r2, [r3, #8]
 2610 0054 8A43     		bics	r2, r1
 2611 0056 9A60     		str	r2, [r3, #8]
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2612              		.loc 1 350 0
 2613 0058 0122     		movs	r2, #1
 2614 005a 1968     		ldr	r1, [r3]
 2615 005c 0A43     		orrs	r2, r1
 2616 005e 1A60     		str	r2, [r3]
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2617              		.loc 1 353 0
 2618 0060 FFF7FEFF 		bl	UART_CheckIdleState
 2619              	.LVL194:
 2620 0064 D0E7     		b	.L261
 2621              	.L272:
 2622 0066 C046     		.align	2
 2623              	.L271:
 2624 0068 FFB7FFFF 		.word	-18433
 2625              		.cfi_endproc
 2626              	.LFE35:
 2628              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 2629              		.align	1
 2630              		.global	HAL_HalfDuplex_Init
 2631              		.syntax unified
 2632              		.code	16
 2633              		.thumb_func
 2634              		.fpu softvfp
 2636              	HAL_HalfDuplex_Init:
 2637              	.LFB36:
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 2638              		.loc 1 363 0
 2639              		.cfi_startproc
 2640              	.LVL195:
 2641 0000 70B5     		push	{r4, r5, r6, lr}
 2642              	.LCFI22:
 2643              		.cfi_def_cfa_offset 16
 2644              		.cfi_offset 4, -16
 2645              		.cfi_offset 5, -12
ARM GAS  /tmp/ccjaQwTr.s 			page 87


 2646              		.cfi_offset 6, -8
 2647              		.cfi_offset 14, -4
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 2648              		.loc 1 363 0
 2649 0002 041E     		subs	r4, r0, #0
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2650              		.loc 1 365 0
 2651 0004 01D1     		bne	.L274
 2652              	.LVL196:
 2653              	.L277:
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2654              		.loc 1 367 0
 2655 0006 0120     		movs	r0, #1
 2656              	.L275:
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2657              		.loc 1 426 0
 2658              		@ sp needed
 2659              	.LVL197:
 2660 0008 70BD     		pop	{r4, r5, r6, pc}
 2661              	.LVL198:
 2662              	.L274:
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2663              		.loc 1 373 0
 2664 000a 0500     		movs	r5, r0
 2665 000c 6935     		adds	r5, r5, #105
 2666 000e 2B78     		ldrb	r3, [r5]
 2667 0010 DBB2     		uxtb	r3, r3
 2668 0012 002B     		cmp	r3, #0
 2669 0014 04D1     		bne	.L276
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2670              		.loc 1 376 0
 2671 0016 0200     		movs	r2, r0
 2672 0018 6832     		adds	r2, r2, #104
 2673 001a 1370     		strb	r3, [r2]
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2674              		.loc 1 379 0
 2675 001c FFF7FEFF 		bl	HAL_UART_MspInit
 2676              	.LVL199:
 2677              	.L276:
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2678              		.loc 1 382 0
 2679 0020 2423     		movs	r3, #36
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2680              		.loc 1 385 0
 2681 0022 0121     		movs	r1, #1
 2682 0024 2268     		ldr	r2, [r4]
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2683              		.loc 1 382 0
 2684 0026 2B70     		strb	r3, [r5]
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2685              		.loc 1 385 0
 2686 0028 1368     		ldr	r3, [r2]
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2687              		.loc 1 388 0
 2688 002a 2000     		movs	r0, r4
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2689              		.loc 1 385 0
ARM GAS  /tmp/ccjaQwTr.s 			page 88


 2690 002c 8B43     		bics	r3, r1
 2691 002e 1360     		str	r3, [r2]
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2692              		.loc 1 388 0
 2693 0030 FFF7FEFF 		bl	UART_SetConfig
 2694              	.LVL200:
 2695 0034 0128     		cmp	r0, #1
 2696 0036 E6D0     		beq	.L277
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2697              		.loc 1 393 0
 2698 0038 636A     		ldr	r3, [r4, #36]
 2699 003a 002B     		cmp	r3, #0
 2700 003c 02D0     		beq	.L278
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2701              		.loc 1 395 0
 2702 003e 2000     		movs	r0, r4
 2703 0040 FFF7FEFF 		bl	UART_AdvFeatureConfig
 2704              	.LVL201:
 2705              	.L278:
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2706              		.loc 1 402 0
 2707 0044 2368     		ldr	r3, [r4]
 2708 0046 0A49     		ldr	r1, .L285
 2709 0048 5A68     		ldr	r2, [r3, #4]
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2710              		.loc 1 425 0
 2711 004a 2000     		movs	r0, r4
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2712              		.loc 1 402 0
 2713 004c 0A40     		ands	r2, r1
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2714              		.loc 1 408 0
 2715 004e 2221     		movs	r1, #34
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2716              		.loc 1 402 0
 2717 0050 5A60     		str	r2, [r3, #4]
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2718              		.loc 1 408 0
 2719 0052 9A68     		ldr	r2, [r3, #8]
 2720 0054 8A43     		bics	r2, r1
 2721 0056 9A60     		str	r2, [r3, #8]
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2722              		.loc 1 419 0
 2723 0058 0822     		movs	r2, #8
 2724 005a 9968     		ldr	r1, [r3, #8]
 2725 005c 0A43     		orrs	r2, r1
 2726 005e 9A60     		str	r2, [r3, #8]
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2727              		.loc 1 422 0
 2728 0060 0122     		movs	r2, #1
 2729 0062 1968     		ldr	r1, [r3]
 2730 0064 0A43     		orrs	r2, r1
 2731 0066 1A60     		str	r2, [r3]
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2732              		.loc 1 425 0
 2733 0068 FFF7FEFF 		bl	UART_CheckIdleState
 2734              	.LVL202:
ARM GAS  /tmp/ccjaQwTr.s 			page 89


 2735 006c CCE7     		b	.L275
 2736              	.L286:
 2737 006e C046     		.align	2
 2738              	.L285:
 2739 0070 FFB7FFFF 		.word	-18433
 2740              		.cfi_endproc
 2741              	.LFE36:
 2743              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 2744              		.align	1
 2745              		.global	HAL_MultiProcessor_Init
 2746              		.syntax unified
 2747              		.code	16
 2748              		.thumb_func
 2749              		.fpu softvfp
 2751              	HAL_MultiProcessor_Init:
 2752              	.LFB37:
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 2753              		.loc 1 448 0
 2754              		.cfi_startproc
 2755              	.LVL203:
 2756 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2757              	.LCFI23:
 2758              		.cfi_def_cfa_offset 24
 2759              		.cfi_offset 3, -24
 2760              		.cfi_offset 4, -20
 2761              		.cfi_offset 5, -16
 2762              		.cfi_offset 6, -12
 2763              		.cfi_offset 7, -8
 2764              		.cfi_offset 14, -4
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 2765              		.loc 1 448 0
 2766 0002 0400     		movs	r4, r0
 2767 0004 0E00     		movs	r6, r1
 2768 0006 1500     		movs	r5, r2
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2769              		.loc 1 450 0
 2770 0008 0028     		cmp	r0, #0
 2771 000a 01D1     		bne	.L288
 2772              	.LVL204:
 2773              	.L291:
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2774              		.loc 1 452 0
 2775 000c 0120     		movs	r0, #1
 2776              	.LVL205:
 2777              	.L289:
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2778              		.loc 1 519 0
 2779              		@ sp needed
 2780              	.LVL206:
 2781 000e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2782              	.LVL207:
 2783              	.L288:
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2784              		.loc 1 458 0
 2785 0010 0700     		movs	r7, r0
 2786 0012 6937     		adds	r7, r7, #105
 2787 0014 3B78     		ldrb	r3, [r7]
ARM GAS  /tmp/ccjaQwTr.s 			page 90


 2788 0016 DBB2     		uxtb	r3, r3
 2789 0018 002B     		cmp	r3, #0
 2790 001a 04D1     		bne	.L290
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2791              		.loc 1 461 0
 2792 001c 0200     		movs	r2, r0
 2793              	.LVL208:
 2794 001e 6832     		adds	r2, r2, #104
 2795 0020 1370     		strb	r3, [r2]
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2796              		.loc 1 464 0
 2797 0022 FFF7FEFF 		bl	HAL_UART_MspInit
 2798              	.LVL209:
 2799              	.L290:
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2800              		.loc 1 467 0
 2801 0026 2423     		movs	r3, #36
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2802              		.loc 1 470 0
 2803 0028 0121     		movs	r1, #1
 2804 002a 2268     		ldr	r2, [r4]
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2805              		.loc 1 467 0
 2806 002c 3B70     		strb	r3, [r7]
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2807              		.loc 1 470 0
 2808 002e 1368     		ldr	r3, [r2]
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2809              		.loc 1 473 0
 2810 0030 2000     		movs	r0, r4
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2811              		.loc 1 470 0
 2812 0032 8B43     		bics	r3, r1
 2813 0034 1360     		str	r3, [r2]
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2814              		.loc 1 473 0
 2815 0036 FFF7FEFF 		bl	UART_SetConfig
 2816              	.LVL210:
 2817 003a 0128     		cmp	r0, #1
 2818 003c E6D0     		beq	.L291
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2819              		.loc 1 478 0
 2820 003e 636A     		ldr	r3, [r4, #36]
 2821 0040 002B     		cmp	r3, #0
 2822 0042 02D0     		beq	.L292
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2823              		.loc 1 480 0
 2824 0044 2000     		movs	r0, r4
 2825 0046 FFF7FEFF 		bl	UART_AdvFeatureConfig
 2826              	.LVL211:
 2827              	.L292:
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2828              		.loc 1 487 0
 2829 004a 2368     		ldr	r3, [r4]
 2830 004c 0F49     		ldr	r1, .L300
 2831 004e 5A68     		ldr	r2, [r3, #4]
 2832 0050 0A40     		ands	r2, r1
ARM GAS  /tmp/ccjaQwTr.s 			page 91


 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2833              		.loc 1 493 0
 2834 0052 2A21     		movs	r1, #42
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2835              		.loc 1 487 0
 2836 0054 5A60     		str	r2, [r3, #4]
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 2837              		.loc 1 493 0
 2838 0056 9A68     		ldr	r2, [r3, #8]
 2839 0058 8A43     		bics	r2, r1
 2840 005a 9A60     		str	r2, [r3, #8]
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2841              		.loc 1 505 0
 2842 005c 8022     		movs	r2, #128
 2843 005e 1201     		lsls	r2, r2, #4
 2844 0060 9542     		cmp	r5, r2
 2845 0062 05D1     		bne	.L293
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2846              		.loc 1 508 0
 2847 0064 5968     		ldr	r1, [r3, #4]
 2848 0066 3606     		lsls	r6, r6, #24
 2849 0068 0902     		lsls	r1, r1, #8
 2850 006a 090A     		lsrs	r1, r1, #8
 2851 006c 3143     		orrs	r1, r6
 2852 006e 5960     		str	r1, [r3, #4]
 2853              	.L293:
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2854              		.loc 1 512 0
 2855 0070 1A68     		ldr	r2, [r3]
 2856 0072 0749     		ldr	r1, .L300+4
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2857              		.loc 1 518 0
 2858 0074 2000     		movs	r0, r4
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2859              		.loc 1 512 0
 2860 0076 0A40     		ands	r2, r1
 2861 0078 1543     		orrs	r5, r2
 2862              	.LVL212:
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2863              		.loc 1 515 0
 2864 007a 0122     		movs	r2, #1
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2865              		.loc 1 512 0
 2866 007c 1D60     		str	r5, [r3]
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2867              		.loc 1 515 0
 2868 007e 1968     		ldr	r1, [r3]
 2869 0080 0A43     		orrs	r2, r1
 2870 0082 1A60     		str	r2, [r3]
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2871              		.loc 1 518 0
 2872 0084 FFF7FEFF 		bl	UART_CheckIdleState
 2873              	.LVL213:
 2874 0088 C1E7     		b	.L289
 2875              	.L301:
 2876 008a C046     		.align	2
 2877              	.L300:
ARM GAS  /tmp/ccjaQwTr.s 			page 92


 2878 008c FFB7FFFF 		.word	-18433
 2879 0090 FFF7FFFF 		.word	-2049
 2880              		.cfi_endproc
 2881              	.LFE37:
 2883              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 2884              		.align	1
 2885              		.global	HAL_MultiProcessor_EnableMuteMode
 2886              		.syntax unified
 2887              		.code	16
 2888              		.thumb_func
 2889              		.fpu softvfp
 2891              	HAL_MultiProcessor_EnableMuteMode:
 2892              	.LFB56:
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2893              		.loc 1 1354 0
 2894              		.cfi_startproc
 2895              	.LVL214:
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2896              		.loc 1 1356 0
 2897 0000 0200     		movs	r2, r0
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2898              		.loc 1 1354 0
 2899 0002 10B5     		push	{r4, lr}
 2900              	.LCFI24:
 2901              		.cfi_def_cfa_offset 8
 2902              		.cfi_offset 4, -8
 2903              		.cfi_offset 14, -4
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2904              		.loc 1 1356 0
 2905 0004 6832     		adds	r2, r2, #104
 2906 0006 1178     		ldrb	r1, [r2]
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2907              		.loc 1 1354 0
 2908 0008 0300     		movs	r3, r0
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2909              		.loc 1 1356 0
 2910 000a 0220     		movs	r0, #2
 2911              	.LVL215:
 2912 000c 0129     		cmp	r1, #1
 2913 000e 10D0     		beq	.L303
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2914              		.loc 1 1356 0 is_stmt 0 discriminator 2
 2915 0010 0121     		movs	r1, #1
 2916 0012 1170     		strb	r1, [r2]
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2917              		.loc 1 1358 0 is_stmt 1 discriminator 2
 2918 0014 1900     		movs	r1, r3
 2919 0016 2422     		movs	r2, #36
 2920 0018 6931     		adds	r1, r1, #105
 2921 001a 0A70     		strb	r2, [r1]
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2922              		.loc 1 1361 0 discriminator 2
 2923 001c 8022     		movs	r2, #128
 2924 001e 1868     		ldr	r0, [r3]
 2925 0020 9201     		lsls	r2, r2, #6
 2926 0022 0468     		ldr	r4, [r0]
 2927 0024 2243     		orrs	r2, r4
ARM GAS  /tmp/ccjaQwTr.s 			page 93


 2928 0026 0260     		str	r2, [r0]
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2929              		.loc 1 1363 0 discriminator 2
 2930 0028 2022     		movs	r2, #32
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2931              		.loc 1 1365 0 discriminator 2
 2932 002a 1800     		movs	r0, r3
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2933              		.loc 1 1363 0 discriminator 2
 2934 002c 0A70     		strb	r2, [r1]
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2935              		.loc 1 1365 0 discriminator 2
 2936 002e FFF7FEFF 		bl	UART_CheckIdleState
 2937              	.LVL216:
 2938              	.L303:
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2939              		.loc 1 1366 0
 2940              		@ sp needed
 2941 0032 10BD     		pop	{r4, pc}
 2942              		.cfi_endproc
 2943              	.LFE56:
 2945              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 2946              		.align	1
 2947              		.global	HAL_MultiProcessor_DisableMuteMode
 2948              		.syntax unified
 2949              		.code	16
 2950              		.thumb_func
 2951              		.fpu softvfp
 2953              	HAL_MultiProcessor_DisableMuteMode:
 2954              	.LFB57:
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2955              		.loc 1 1375 0
 2956              		.cfi_startproc
 2957              	.LVL217:
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2958              		.loc 1 1377 0
 2959 0000 0200     		movs	r2, r0
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2960              		.loc 1 1375 0
 2961 0002 10B5     		push	{r4, lr}
 2962              	.LCFI25:
 2963              		.cfi_def_cfa_offset 8
 2964              		.cfi_offset 4, -8
 2965              		.cfi_offset 14, -4
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2966              		.loc 1 1377 0
 2967 0004 6832     		adds	r2, r2, #104
 2968 0006 1178     		ldrb	r1, [r2]
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2969              		.loc 1 1375 0
 2970 0008 0300     		movs	r3, r0
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2971              		.loc 1 1377 0
 2972 000a 0220     		movs	r0, #2
 2973              	.LVL218:
 2974 000c 0129     		cmp	r1, #1
 2975 000e 0FD0     		beq	.L307
ARM GAS  /tmp/ccjaQwTr.s 			page 94


1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2976              		.loc 1 1377 0 is_stmt 0 discriminator 2
 2977 0010 0121     		movs	r1, #1
 2978 0012 1170     		strb	r1, [r2]
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2979              		.loc 1 1379 0 is_stmt 1 discriminator 2
 2980 0014 1900     		movs	r1, r3
 2981 0016 2422     		movs	r2, #36
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2982              		.loc 1 1382 0 discriminator 2
 2983 0018 1868     		ldr	r0, [r3]
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2984              		.loc 1 1379 0 discriminator 2
 2985 001a 6931     		adds	r1, r1, #105
 2986 001c 0A70     		strb	r2, [r1]
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2987              		.loc 1 1382 0 discriminator 2
 2988 001e 0268     		ldr	r2, [r0]
 2989 0020 044C     		ldr	r4, .L310
 2990 0022 2240     		ands	r2, r4
 2991 0024 0260     		str	r2, [r0]
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2992              		.loc 1 1384 0 discriminator 2
 2993 0026 2022     		movs	r2, #32
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2994              		.loc 1 1386 0 discriminator 2
 2995 0028 1800     		movs	r0, r3
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2996              		.loc 1 1384 0 discriminator 2
 2997 002a 0A70     		strb	r2, [r1]
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2998              		.loc 1 1386 0 discriminator 2
 2999 002c FFF7FEFF 		bl	UART_CheckIdleState
 3000              	.LVL219:
 3001              	.L307:
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3002              		.loc 1 1387 0
 3003              		@ sp needed
 3004 0030 10BD     		pop	{r4, pc}
 3005              	.L311:
 3006 0032 C046     		.align	2
 3007              	.L310:
 3008 0034 FFDFFFFF 		.word	-8193
 3009              		.cfi_endproc
 3010              	.LFE57:
 3012              		.section	.text.UART_Transmit_IT,"ax",%progbits
 3013              		.align	1
 3014              		.global	UART_Transmit_IT
 3015              		.syntax unified
 3016              		.code	16
 3017              		.thumb_func
 3018              		.fpu softvfp
 3020              	UART_Transmit_IT:
 3021              	.LFB72:
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
ARM GAS  /tmp/ccjaQwTr.s 			page 95


1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3022              		.loc 1 1904 0
 3023              		.cfi_startproc
 3024              	.LVL220:
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 3025              		.loc 1 1908 0
 3026 0000 0300     		movs	r3, r0
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3027              		.loc 1 1904 0
 3028 0002 70B5     		push	{r4, r5, r6, lr}
 3029              	.LCFI26:
 3030              		.cfi_def_cfa_offset 16
 3031              		.cfi_offset 4, -16
 3032              		.cfi_offset 5, -12
 3033              		.cfi_offset 6, -8
 3034              		.cfi_offset 14, -4
 3035              		.loc 1 1908 0
 3036 0004 6933     		adds	r3, r3, #105
 3037 0006 1B78     		ldrb	r3, [r3]
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3038              		.loc 1 1904 0
 3039 0008 0200     		movs	r2, r0
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->TxXferCount == 0)
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2;
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFF);
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccjaQwTr.s 			page 96


1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 3040              		.loc 1 1940 0
 3041 000a 0220     		movs	r0, #2
 3042              	.LVL221:
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3043              		.loc 1 1908 0
 3044 000c 212B     		cmp	r3, #33
 3045 000e 0ED1     		bne	.L313
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3046              		.loc 1 1910 0
 3047 0010 1500     		movs	r5, r2
 3048 0012 5235     		adds	r5, r5, #82
 3049 0014 2B88     		ldrh	r3, [r5]
 3050 0016 1168     		ldr	r1, [r2]
 3051 0018 002B     		cmp	r3, #0
 3052 001a 09D1     		bne	.L314
 3053              	.LVL222:
 3054              	.LBB4:
 3055              	.LBB5:
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3056              		.loc 1 1913 0
 3057 001c 0A68     		ldr	r2, [r1]
 3058              	.LVL223:
 3059 001e 7E30     		adds	r0, r0, #126
 3060 0020 8243     		bics	r2, r0
 3061 0022 0A60     		str	r2, [r1]
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3062              		.loc 1 1916 0
 3063 0024 4022     		movs	r2, #64
 3064 0026 0868     		ldr	r0, [r1]
 3065 0028 0243     		orrs	r2, r0
 3066 002a 0A60     		str	r2, [r1]
 3067              	.LVL224:
 3068              	.L318:
 3069              	.LBE5:
 3070              	.LBE4:
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3071              		.loc 1 1935 0
 3072 002c 0020     		movs	r0, #0
 3073              	.LVL225:
 3074              	.L313:
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3075              		.loc 1 1942 0
 3076              		@ sp needed
 3077 002e 70BD     		pop	{r4, r5, r6, pc}
 3078              	.LVL226:
 3079              	.L314:
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3080              		.loc 1 1922 0
 3081 0030 8024     		movs	r4, #128
 3082 0032 9668     		ldr	r6, [r2, #8]
ARM GAS  /tmp/ccjaQwTr.s 			page 97


 3083 0034 6401     		lsls	r4, r4, #5
 3084 0036 D06C     		ldr	r0, [r2, #76]
 3085 0038 A642     		cmp	r6, r4
 3086 003a 0BD1     		bne	.L315
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3087              		.loc 1 1922 0 is_stmt 0 discriminator 1
 3088 003c 1469     		ldr	r4, [r2, #16]
 3089 003e 002C     		cmp	r4, #0
 3090 0040 08D1     		bne	.L315
 3091              	.LVL227:
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2;
 3092              		.loc 1 1925 0 is_stmt 1
 3093 0042 0488     		ldrh	r4, [r0]
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3094              		.loc 1 1926 0
 3095 0044 0230     		adds	r0, r0, #2
 3096              	.LVL228:
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2;
 3097              		.loc 1 1925 0
 3098 0046 E405     		lsls	r4, r4, #23
 3099 0048 E40D     		lsrs	r4, r4, #23
 3100 004a 0C85     		strh	r4, [r1, #40]
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3101              		.loc 1 1926 0
 3102 004c D064     		str	r0, [r2, #76]
 3103              	.LVL229:
 3104              	.L316:
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3105              		.loc 1 1933 0
 3106 004e 013B     		subs	r3, r3, #1
 3107 0050 2B80     		strh	r3, [r5]
 3108 0052 EBE7     		b	.L318
 3109              	.LVL230:
 3110              	.L315:
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3111              		.loc 1 1930 0
 3112 0054 441C     		adds	r4, r0, #1
 3113 0056 D464     		str	r4, [r2, #76]
 3114 0058 0278     		ldrb	r2, [r0]
 3115              	.LVL231:
 3116 005a 0A85     		strh	r2, [r1, #40]
 3117 005c F7E7     		b	.L316
 3118              		.cfi_endproc
 3119              	.LFE72:
 3121              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 3122              		.align	1
 3123              		.global	UART_EndTransmit_IT
 3124              		.syntax unified
 3125              		.code	16
 3126              		.thumb_func
 3127              		.fpu softvfp
 3129              	UART_EndTransmit_IT:
 3130              	.LFB73:
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
ARM GAS  /tmp/ccjaQwTr.s 			page 98


1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3131              		.loc 1 1952 0
 3132              		.cfi_startproc
 3133              	.LVL232:
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 3134              		.loc 1 1954 0
 3135 0000 4021     		movs	r1, #64
 3136 0002 0268     		ldr	r2, [r0]
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
 3137              		.loc 1 1952 0
 3138 0004 10B5     		push	{r4, lr}
 3139              	.LCFI27:
 3140              		.cfi_def_cfa_offset 8
 3141              		.cfi_offset 4, -8
 3142              		.cfi_offset 14, -4
 3143              		.loc 1 1954 0
 3144 0006 1368     		ldr	r3, [r2]
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3145              		.loc 1 1962 0
 3146              		@ sp needed
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3147              		.loc 1 1954 0
 3148 0008 8B43     		bics	r3, r1
 3149 000a 1360     		str	r3, [r2]
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3150              		.loc 1 1957 0
 3151 000c 0300     		movs	r3, r0
 3152 000e 2022     		movs	r2, #32
 3153 0010 6933     		adds	r3, r3, #105
 3154 0012 1A70     		strb	r2, [r3]
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3155              		.loc 1 1959 0
 3156 0014 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3157              	.LVL233:
 3158              		.loc 1 1962 0
 3159 0018 0020     		movs	r0, #0
 3160 001a 10BD     		pop	{r4, pc}
 3161              		.cfi_endproc
 3162              	.LFE73:
 3164              		.section	.text.UART_Receive_IT,"ax",%progbits
 3165              		.align	1
 3166              		.global	UART_Receive_IT
 3167              		.syntax unified
 3168              		.code	16
ARM GAS  /tmp/ccjaQwTr.s 			page 99


 3169              		.thumb_func
 3170              		.fpu softvfp
 3172              	UART_Receive_IT:
 3173              	.LFB74:
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3174              		.loc 1 1973 0
 3175              		.cfi_startproc
 3176              	.LVL234:
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 3177              		.loc 1 1978 0
 3178 0000 0100     		movs	r1, r0
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3179              		.loc 1 1973 0
 3180 0002 70B5     		push	{r4, r5, r6, lr}
 3181              	.LCFI28:
 3182              		.cfi_def_cfa_offset 16
 3183              		.cfi_offset 4, -16
 3184              		.cfi_offset 5, -12
 3185              		.cfi_offset 6, -8
 3186              		.cfi_offset 14, -4
 3187              		.loc 1 1978 0
 3188 0004 6A31     		adds	r1, r1, #106
 3189 0006 0B78     		ldrb	r3, [r1]
 3190 0008 0268     		ldr	r2, [r0]
 3191 000a 222B     		cmp	r3, #34
 3192 000c 32D1     		bne	.L321
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3193              		.loc 1 1975 0
 3194 000e 0300     		movs	r3, r0
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 3195              		.loc 1 1980 0
 3196 0010 8025     		movs	r5, #128
 3197 0012 8668     		ldr	r6, [r0, #8]
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3198              		.loc 1 1975 0
 3199 0014 5C33     		adds	r3, r3, #92
 3200              	.LVL235:
 3201 0016 1C88     		ldrh	r4, [r3]
 3202              		.loc 1 1980 0
 3203 0018 6D01     		lsls	r5, r5, #5
 3204 001a 436D     		ldr	r3, [r0, #84]
 3205              	.LVL236:
ARM GAS  /tmp/ccjaQwTr.s 			page 100


 3206 001c AE42     		cmp	r6, r5
 3207 001e 23D1     		bne	.L322
 3208              		.loc 1 1980 0 is_stmt 0 discriminator 1
 3209 0020 0569     		ldr	r5, [r0, #16]
 3210 0022 002D     		cmp	r5, #0
 3211 0024 20D1     		bne	.L322
 3212              	.LVL237:
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 3213              		.loc 1 1983 0 is_stmt 1
 3214 0026 928C     		ldrh	r2, [r2, #36]
 3215 0028 1440     		ands	r4, r2
 3216 002a 1C80     		strh	r4, [r3]
 3217              	.LVL238:
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
 3218              		.loc 1 1984 0
 3219 002c 0233     		adds	r3, r3, #2
 3220              	.LVL239:
 3221 002e 4365     		str	r3, [r0, #84]
 3222              	.LVL240:
 3223              	.L323:
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
 3224              		.loc 1 1991 0
 3225 0030 0200     		movs	r2, r0
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 3226              		.loc 1 2009 0
 3227 0032 0024     		movs	r4, #0
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3228              		.loc 1 1991 0
 3229 0034 5A32     		adds	r2, r2, #90
 3230 0036 1388     		ldrh	r3, [r2]
 3231 0038 013B     		subs	r3, r3, #1
 3232 003a 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccjaQwTr.s 			page 101


 3233 003c 1380     		strh	r3, [r2]
 3234 003e A342     		cmp	r3, r4
 3235 0040 10D1     		bne	.L324
 3236              	.LVL241:
 3237              	.LBB8:
 3238              	.LBB9:
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3239              		.loc 1 1993 0
 3240 0042 2025     		movs	r5, #32
 3241 0044 0368     		ldr	r3, [r0]
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3242              		.loc 1 1996 0
 3243 0046 0E4E     		ldr	r6, .L326
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3244              		.loc 1 1993 0
 3245 0048 1A68     		ldr	r2, [r3]
 3246 004a AA43     		bics	r2, r5
 3247 004c 1A60     		str	r2, [r3]
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3248              		.loc 1 1996 0
 3249 004e 1A68     		ldr	r2, [r3]
 3250 0050 3240     		ands	r2, r6
 3251 0052 1A60     		str	r2, [r3]
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3252              		.loc 1 1999 0
 3253 0054 9A68     		ldr	r2, [r3, #8]
 3254 0056 0336     		adds	r6, r6, #3
 3255 0058 FF36     		adds	r6, r6, #255
 3256 005a B243     		bics	r2, r6
 3257 005c 9A60     		str	r2, [r3, #8]
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3258              		.loc 1 2002 0
 3259 005e 0D70     		strb	r5, [r1]
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3260              		.loc 1 2004 0
 3261 0060 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 3262              	.LVL242:
 3263              	.L324:
 3264              	.LBE9:
 3265              	.LBE8:
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3266              		.loc 1 2018 0
 3267 0064 2000     		movs	r0, r4
 3268              		@ sp needed
 3269 0066 70BD     		pop	{r4, r5, r6, pc}
 3270              	.LVL243:
 3271              	.L322:
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3272              		.loc 1 1988 0
ARM GAS  /tmp/ccjaQwTr.s 			page 102


 3273 0068 5D1C     		adds	r5, r3, #1
 3274 006a 4565     		str	r5, [r0, #84]
 3275 006c 928C     		ldrh	r2, [r2, #36]
 3276 006e 1440     		ands	r4, r2
 3277 0070 1C70     		strb	r4, [r3]
 3278              	.LVL244:
 3279 0072 DDE7     		b	.L323
 3280              	.LVL245:
 3281              	.L321:
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3282              		.loc 1 2014 0
 3283 0074 0823     		movs	r3, #8
 3284 0076 9169     		ldr	r1, [r2, #24]
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3285              		.loc 1 2016 0
 3286 0078 0224     		movs	r4, #2
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3287              		.loc 1 2014 0
 3288 007a 0B43     		orrs	r3, r1
 3289 007c 9361     		str	r3, [r2, #24]
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3290              		.loc 1 2016 0
 3291 007e F1E7     		b	.L324
 3292              	.L327:
 3293              		.align	2
 3294              	.L326:
 3295 0080 FFFEFFFF 		.word	-257
 3296              		.cfi_endproc
 3297              	.LFE74:
 3299              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3300              		.align	1
 3301              		.global	HAL_UART_IRQHandler
 3302              		.syntax unified
 3303              		.code	16
 3304              		.thumb_func
 3305              		.fpu softvfp
 3307              	HAL_UART_IRQHandler:
 3308              	.LFB45:
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART parity error interrupt occurred -------------------------------------*/
 3309              		.loc 1 937 0
 3310              		.cfi_startproc
 3311              	.LVL246:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3312              		.loc 1 939 0
 3313 0000 0122     		movs	r2, #1
 3314 0002 0368     		ldr	r3, [r0]
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART parity error interrupt occurred -------------------------------------*/
 3315              		.loc 1 937 0
 3316 0004 10B5     		push	{r4, lr}
 3317              	.LCFI29:
 3318              		.cfi_def_cfa_offset 8
 3319              		.cfi_offset 4, -8
 3320              		.cfi_offset 14, -4
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3321              		.loc 1 939 0
 3322 0006 D969     		ldr	r1, [r3, #28]
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART parity error interrupt occurred -------------------------------------*/
ARM GAS  /tmp/ccjaQwTr.s 			page 103


 3323              		.loc 1 937 0
 3324 0008 0400     		movs	r4, r0
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3325              		.loc 1 939 0
 3326 000a 1142     		tst	r1, r2
 3327 000c 06D0     		beq	.L329
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3328              		.loc 1 939 0 is_stmt 0 discriminator 1
 3329 000e 1968     		ldr	r1, [r3]
 3330 0010 C905     		lsls	r1, r1, #23
 3331 0012 03D5     		bpl	.L329
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3332              		.loc 1 941 0 is_stmt 1
 3333 0014 1A62     		str	r2, [r3, #32]
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3334              		.loc 1 943 0
 3335 0016 C16E     		ldr	r1, [r0, #108]
 3336 0018 0A43     		orrs	r2, r1
 3337 001a C266     		str	r2, [r0, #108]
 3338              	.L329:
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3339              		.loc 1 947 0
 3340 001c 0222     		movs	r2, #2
 3341 001e D969     		ldr	r1, [r3, #28]
 3342 0020 1142     		tst	r1, r2
 3343 0022 07D0     		beq	.L330
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3344              		.loc 1 947 0 is_stmt 0 discriminator 1
 3345 0024 9968     		ldr	r1, [r3, #8]
 3346 0026 C907     		lsls	r1, r1, #31
 3347 0028 04D5     		bpl	.L330
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3348              		.loc 1 949 0 is_stmt 1
 3349 002a 1A62     		str	r2, [r3, #32]
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3350              		.loc 1 951 0
 3351 002c E16E     		ldr	r1, [r4, #108]
 3352 002e 9218     		adds	r2, r2, r2
 3353 0030 0A43     		orrs	r2, r1
 3354 0032 E266     		str	r2, [r4, #108]
 3355              	.L330:
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3356              		.loc 1 955 0
 3357 0034 0422     		movs	r2, #4
 3358 0036 D969     		ldr	r1, [r3, #28]
 3359 0038 1142     		tst	r1, r2
 3360 003a 07D0     		beq	.L331
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3361              		.loc 1 955 0 is_stmt 0 discriminator 1
 3362 003c 9968     		ldr	r1, [r3, #8]
 3363 003e C907     		lsls	r1, r1, #31
 3364 0040 04D5     		bpl	.L331
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3365              		.loc 1 957 0 is_stmt 1
 3366 0042 1A62     		str	r2, [r3, #32]
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3367              		.loc 1 959 0
ARM GAS  /tmp/ccjaQwTr.s 			page 104


 3368 0044 E16E     		ldr	r1, [r4, #108]
 3369 0046 023A     		subs	r2, r2, #2
 3370 0048 0A43     		orrs	r2, r1
 3371 004a E266     		str	r2, [r4, #108]
 3372              	.L331:
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3373              		.loc 1 963 0
 3374 004c 0822     		movs	r2, #8
 3375 004e D969     		ldr	r1, [r3, #28]
 3376 0050 1142     		tst	r1, r2
 3377 0052 06D0     		beq	.L332
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3378              		.loc 1 963 0 is_stmt 0 discriminator 1
 3379 0054 9968     		ldr	r1, [r3, #8]
 3380 0056 C907     		lsls	r1, r1, #31
 3381 0058 03D5     		bpl	.L332
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3382              		.loc 1 965 0 is_stmt 1
 3383 005a 1A62     		str	r2, [r3, #32]
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3384              		.loc 1 967 0
 3385 005c E16E     		ldr	r1, [r4, #108]
 3386 005e 0A43     		orrs	r2, r1
 3387 0060 E266     		str	r2, [r4, #108]
 3388              	.L332:
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3389              		.loc 1 972 0
 3390 0062 8022     		movs	r2, #128
 3391 0064 D969     		ldr	r1, [r3, #28]
 3392 0066 5203     		lsls	r2, r2, #13
 3393 0068 1142     		tst	r1, r2
 3394 006a 0BD0     		beq	.L333
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3395              		.loc 1 972 0 is_stmt 0 discriminator 1
 3396 006c 9968     		ldr	r1, [r3, #8]
 3397 006e 4902     		lsls	r1, r1, #9
 3398 0070 08D5     		bpl	.L333
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 3399              		.loc 1 974 0 is_stmt 1
 3400 0072 1A62     		str	r2, [r3, #32]
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3401              		.loc 1 976 0
 3402 0074 2300     		movs	r3, r4
 3403 0076 2022     		movs	r2, #32
 3404 0078 6933     		adds	r3, r3, #105
 3405 007a 1A70     		strb	r2, [r3]
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3406              		.loc 1 978 0
 3407 007c 2000     		movs	r0, r4
 3408              	.LVL247:
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 3409              		.loc 1 977 0
 3410 007e 5A70     		strb	r2, [r3, #1]
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3411              		.loc 1 978 0
 3412 0080 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 3413              	.LVL248:
ARM GAS  /tmp/ccjaQwTr.s 			page 105


 3414              	.L333:
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3415              		.loc 1 983 0
 3416 0084 2023     		movs	r3, #32
 3417 0086 2268     		ldr	r2, [r4]
 3418 0088 D169     		ldr	r1, [r2, #28]
 3419 008a 1942     		tst	r1, r3
 3420 008c 05D0     		beq	.L334
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3421              		.loc 1 983 0 is_stmt 0 discriminator 1
 3422 008e 1268     		ldr	r2, [r2]
 3423 0090 1A42     		tst	r2, r3
 3424 0092 02D0     		beq	.L334
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3425              		.loc 1 985 0 is_stmt 1
 3426 0094 2000     		movs	r0, r4
 3427 0096 FFF7FEFF 		bl	UART_Receive_IT
 3428              	.LVL249:
 3429              	.L334:
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3430              		.loc 1 990 0
 3431 009a 8023     		movs	r3, #128
 3432 009c 2268     		ldr	r2, [r4]
 3433 009e D169     		ldr	r1, [r2, #28]
 3434 00a0 1942     		tst	r1, r3
 3435 00a2 05D0     		beq	.L335
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3436              		.loc 1 990 0 is_stmt 0 discriminator 1
 3437 00a4 1268     		ldr	r2, [r2]
 3438 00a6 1A42     		tst	r2, r3
 3439 00a8 02D0     		beq	.L335
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3440              		.loc 1 992 0 is_stmt 1
 3441 00aa 2000     		movs	r0, r4
 3442 00ac FFF7FEFF 		bl	UART_Transmit_IT
 3443              	.LVL250:
 3444              	.L335:
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3445              		.loc 1 996 0
 3446 00b0 4023     		movs	r3, #64
 3447 00b2 2268     		ldr	r2, [r4]
 3448 00b4 D169     		ldr	r1, [r2, #28]
 3449 00b6 1942     		tst	r1, r3
 3450 00b8 05D0     		beq	.L336
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3451              		.loc 1 996 0 is_stmt 0 discriminator 1
 3452 00ba 1268     		ldr	r2, [r2]
 3453 00bc 1A42     		tst	r2, r3
 3454 00be 02D0     		beq	.L336
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3455              		.loc 1 998 0 is_stmt 1
 3456 00c0 2000     		movs	r0, r4
 3457 00c2 FFF7FEFF 		bl	UART_EndTransmit_IT
 3458              	.LVL251:
 3459              	.L336:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3460              		.loc 1 1001 0
ARM GAS  /tmp/ccjaQwTr.s 			page 106


 3461 00c6 E36E     		ldr	r3, [r4, #108]
 3462 00c8 002B     		cmp	r3, #0
 3463 00ca 07D0     		beq	.L328
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3464              		.loc 1 1004 0
 3465 00cc 2200     		movs	r2, r4
 3466 00ce 2023     		movs	r3, #32
 3467 00d0 6932     		adds	r2, r2, #105
 3468 00d2 1370     		strb	r3, [r2]
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }  
 3469              		.loc 1 1007 0
 3470 00d4 2000     		movs	r0, r4
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3471              		.loc 1 1005 0
 3472 00d6 5370     		strb	r3, [r2, #1]
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }  
 3473              		.loc 1 1007 0
 3474 00d8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3475              	.LVL252:
 3476              	.L328:
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3477              		.loc 1 1009 0
 3478              		@ sp needed
 3479              	.LVL253:
 3480 00dc 10BD     		pop	{r4, pc}
 3481              		.cfi_endproc
 3482              	.LFE45:
 3484              		.section	.rodata.CSWTCH.36,"a",%progbits
 3485              		.set	.LANCHOR0,. + 0
 3488              	CSWTCH.36:
 3489 0000 00       		.byte	0
 3490 0001 04       		.byte	4
 3491 0002 08       		.byte	8
 3492 0003 02       		.byte	2
 3493              		.text
 3494              	.Letext0:
 3495              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 3496              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 3497              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 3498              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 3499              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 3500              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 3501              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 3502              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 3503              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 3504              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 3505              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 3506              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 3507              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 3508              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 3509              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart_ex.h"
ARM GAS  /tmp/ccjaQwTr.s 			page 107


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_uart.c
     /tmp/ccjaQwTr.s:16     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccjaQwTr.s:23     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccjaQwTr.s:32     .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccjaQwTr.s:39     .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccjaQwTr.s:48     .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccjaQwTr.s:55     .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccjaQwTr.s:127    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccjaQwTr.s:134    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccjaQwTr.s:231    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccjaQwTr.s:238    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccjaQwTr.s:399    .text.HAL_UART_Receive_IT:00000000000000a8 $d
     /tmp/ccjaQwTr.s:404    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccjaQwTr.s:411    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccjaQwTr.s:529    .text.HAL_UART_Transmit_DMA:000000000000007c $d
     /tmp/ccjaQwTr.s:911    .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccjaQwTr.s:989    .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccjaQwTr.s:1155   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccjaQwTr.s:536    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccjaQwTr.s:543    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccjaQwTr.s:664    .text.HAL_UART_Receive_DMA:000000000000007c $d
     /tmp/ccjaQwTr.s:1034   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccjaQwTr.s:1107   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccjaQwTr.s:671    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccjaQwTr.s:678    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccjaQwTr.s:742    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccjaQwTr.s:749    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccjaQwTr.s:816    .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccjaQwTr.s:823    .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccjaQwTr.s:889    .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccjaQwTr.s:896    .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccjaQwTr.s:905    .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccjaQwTr.s:967    .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccjaQwTr.s:974    .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccjaQwTr.s:983    .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccjaQwTr.s:1012   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccjaQwTr.s:1019   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccjaQwTr.s:1028   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccjaQwTr.s:1085   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccjaQwTr.s:1092   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccjaQwTr.s:1101   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccjaQwTr.s:1130   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccjaQwTr.s:1137   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccjaQwTr.s:1149   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccjaQwTr.s:1199   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccjaQwTr.s:1206   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccjaQwTr.s:1226   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccjaQwTr.s:1233   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccjaQwTr.s:1291   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccjaQwTr.s:1298   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccjaQwTr.s:1356   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccjaQwTr.s:1363   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccjaQwTr.s:1392   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccjaQwTr.s:1399   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccjaQwTr.s:1415   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccjaQwTr.s:1422   .text.UART_SetConfig:0000000000000000 UART_SetConfig
ARM GAS  /tmp/ccjaQwTr.s 			page 108


     /tmp/ccjaQwTr.s:1502   .text.UART_SetConfig:000000000000005c $d
     /tmp/ccjaQwTr.s:1631   .text.UART_SetConfig:00000000000000ea $d
     /tmp/ccjaQwTr.s:1716   .text.UART_SetConfig:0000000000000140 $d
     /tmp/ccjaQwTr.s:1731   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccjaQwTr.s:1738   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccjaQwTr.s:1866   .text.UART_AdvFeatureConfig:00000000000000ac $d
     /tmp/ccjaQwTr.s:1879   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccjaQwTr.s:1886   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccjaQwTr.s:2016   .text.UART_WaitOnFlagUntilTimeout:000000000000008c $d
     /tmp/ccjaQwTr.s:2021   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccjaQwTr.s:2028   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccjaQwTr.s:2192   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccjaQwTr.s:2199   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccjaQwTr.s:2404   .text.HAL_UART_Receive:00000000000000e0 $d
     /tmp/ccjaQwTr.s:2409   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccjaQwTr.s:2416   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccjaQwTr.s:2513   .text.UART_CheckIdleState:0000000000000064 $d
     /tmp/ccjaQwTr.s:2519   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccjaQwTr.s:2526   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccjaQwTr.s:2624   .text.HAL_UART_Init:0000000000000068 $d
     /tmp/ccjaQwTr.s:2629   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccjaQwTr.s:2636   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccjaQwTr.s:2739   .text.HAL_HalfDuplex_Init:0000000000000070 $d
     /tmp/ccjaQwTr.s:2744   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccjaQwTr.s:2751   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccjaQwTr.s:2878   .text.HAL_MultiProcessor_Init:000000000000008c $d
     /tmp/ccjaQwTr.s:2884   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccjaQwTr.s:2891   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccjaQwTr.s:2946   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccjaQwTr.s:2953   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccjaQwTr.s:3008   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000034 $d
     /tmp/ccjaQwTr.s:3013   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccjaQwTr.s:3020   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccjaQwTr.s:3122   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccjaQwTr.s:3129   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccjaQwTr.s:3165   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccjaQwTr.s:3172   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccjaQwTr.s:3295   .text.UART_Receive_IT:0000000000000080 $d
     /tmp/ccjaQwTr.s:3300   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccjaQwTr.s:3307   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccjaQwTr.s:3488   .rodata.CSWTCH.36:0000000000000000 CSWTCH.36
                     .debug_frame:0000000000000010 $d
     /tmp/ccjaQwTr.s:1512   .text.UART_SetConfig:0000000000000065 $d
     /tmp/ccjaQwTr.s:1512   .text.UART_SetConfig:0000000000000066 $t
     /tmp/ccjaQwTr.s:1641   .text.UART_SetConfig:00000000000000f3 $d
     /tmp/ccjaQwTr.s:1641   .text.UART_SetConfig:00000000000000f4 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
__aeabi_uidiv
__gnu_thumb1_case_uqi
HAL_RCC_GetPCLK1Freq
__gnu_thumb1_case_sqi
HAL_RCC_GetSysClockFreq
HAL_GetTick
HAL_UARTEx_WakeupCallback
ARM GAS  /tmp/ccjaQwTr.s 			page 109



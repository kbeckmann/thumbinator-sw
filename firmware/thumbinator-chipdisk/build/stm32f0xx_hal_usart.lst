ARM GAS  /tmp/ccVFl28S.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_USART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_USART_Init
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_USART_Init:
  24              	.LFB35:
  25              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @file    stm32f0xx_hal_usart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @version V1.4.0
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @date    27-May-2016
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief   USART HAL module driver.
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *          This file provides firmware functions to manage the following
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *          functionalities of the Universal Synchronous Asynchronous Receiver Transmitter
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *          Peripheral (USART).
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *           + Initialization and de-initialization functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *           + IO operation functions
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *           + Peripheral Control functions
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *           + Peripheral State and Error functions
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   @verbatim
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****  ===============================================================================
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                         ##### How to use this driver #####
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****  ===============================================================================
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     [..]
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       The USART HAL driver can be used as follows:
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       (#) Declare a USART_HandleTypeDef handle structure (eg. USART_HandleTypeDef husart).
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       (#) Initialize the USART low level resources by implementing the HAL_USART_MspInit() API:
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           (++) Enable the USARTx interface clock.
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           (++) USART pins configuration:
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             (+++) Enable the clock for the USART GPIOs.
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             (+++) Configure these USART pins as alternate function pull-up.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           (++) NVIC configuration if you need to use interrupt process (HAL_USART_Transmit_IT(),
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                 HAL_USART_Receive_IT() and HAL_USART_TransmitReceive_IT() APIs):
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             (+++) Configure the USARTx interrupt priority.
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             (+++) Enable the NVIC USART IRQ handle.
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             (++) USART interrupts handling:
ARM GAS  /tmp/ccVFl28S.s 			page 2


  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****               -@@-   The specific USART interrupts (Transmission complete interrupt,
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                   RXNE interrupt and Error Interrupts) will be managed using the macros
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                   __HAL_USART_ENABLE_IT() and __HAL_USART_DISABLE_IT() inside the transmit and rece
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           (++) DMA Configuration if you need to use DMA process (HAL_USART_Transmit_DMA()
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                HAL_USART_Receive_DMA() and HAL_USART_TransmitReceive_DMA() APIs):
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             (+++) Enable the DMAx interface clock.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             (+++) Configure the DMA Tx/Rx channel.
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             (+++) Associate the initialized DMA handle to the USART DMA Tx/Rx handle.
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           flow control and Mode (Receiver/Transmitter) in the husart handle Init structure.
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       (#) Initialize the USART registers by calling the HAL_USART_Init() API:
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                by calling the customized HAL_USART_MspInit(&husart) API.
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     (#) Three operation modes are available within this driver :
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      *** Polling mode IO operation ***
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      =================================
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      [..]
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) Send an amount of data in blocking mode using HAL_USART_Transmit()
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) Receive an amount of data in blocking mode using HAL_USART_Receive()
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      *** Interrupt mode IO operation ***
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      ===================================
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      [..]
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) Send an amount of data in non blocking mode using HAL_USART_Transmit_IT()
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) At transmission end of half transfer HAL_USART_TxHalfCpltCallback is executed and user c
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_TxHalfCpltCallback
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) At transmission end of transfer HAL_USART_TxCpltCallback is executed and user can
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_TxCpltCallback
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) Receive an amount of data in non blocking mode using HAL_USART_Receive_IT()
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) At reception end of half transfer HAL_USART_RxHalfCpltCallback is executed and user can
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_RxHalfCpltCallback
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) At reception end of transfer HAL_USART_RxCpltCallback is executed and user can
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_RxCpltCallback
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) In case of transfer Error, HAL_USART_ErrorCallback() function is executed and user can
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_ErrorCallback
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      *** DMA mode IO operation ***
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      ==============================
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      [..]
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_USART_Transmit_DMA()
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) At transmission end of half transfer HAL_USART_TxHalfCpltCallback is executed and user c
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_TxHalfCpltCallback
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) At transmission end of transfer HAL_USART_TxCpltCallback is executed and user can
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_TxCpltCallback
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_USART_Receive_DMA()
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) At reception end of half transfer HAL_USART_RxHalfCpltCallback is executed and user can
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_RxHalfCpltCallback
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) At reception end of transfer HAL_USART_RxCpltCallback is executed and user can
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_RxCpltCallback
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) In case of transfer Error, HAL_USART_ErrorCallback() function is executed and user can
ARM GAS  /tmp/ccVFl28S.s 			page 3


  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             add his own code by customization of function pointer HAL_USART_ErrorCallback
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) Pause the DMA Transfer using HAL_USART_DMAPause()
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) Resume the DMA Transfer using HAL_USART_DMAResume()
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) Stop the DMA Transfer using HAL_USART_DMAStop()
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      *** USART HAL driver macros list ***
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      =============================================
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      [..]
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        Below the list of most used macros in USART HAL driver.
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) __HAL_USART_ENABLE: Enable the USART peripheral
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) __HAL_USART_DISABLE: Disable the USART peripheral
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) __HAL_USART_GET_FLAG : Check whether the specified USART flag is set or not
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) __HAL_USART_CLEAR_FLAG : Clear the specified USART pending flag
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) __HAL_USART_ENABLE_IT: Enable the specified USART interrupt
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (+) __HAL_USART_DISABLE_IT: Disable the specified USART interrupt
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      [..]
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (@) You can refer to the USART HAL driver header file for more useful macros
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   @endverbatim
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   ******************************************************************************
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @attention
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * are permitted provided that the following conditions are met:
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *      this list of conditions and the following disclaimer.
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *      this list of conditions and the following disclaimer in the documentation
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *      and/or other materials provided with the distribution.
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *      may be used to endorse or promote products derived from this software
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *      without specific prior written permission.
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   ******************************************************************************
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /* Includes ------------------------------------------------------------------*/
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #include "stm32f0xx_hal.h"
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @{
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
ARM GAS  /tmp/ccVFl28S.s 			page 4


 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /** @defgroup USART USART
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief HAL USART Synchronous module driver
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @{
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #ifdef HAL_USART_MODULE_ENABLED
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /* Private typedef -----------------------------------------------------------*/
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /* Private define ------------------------------------------------------------*/
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /** @defgroup USART_Private_Constants USART Private Constants
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @{
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #define USART_DUMMY_DATA          ((uint16_t) 0xFFFF)           /*!< USART transmitted dummy data  
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #define USART_TEACK_REACK_TIMEOUT ((uint32_t) 1000)             /*!< USART TX or RX enable acknowle
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #define USART_TXDMA_TIMEOUTVALUE            22000
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #define USART_TIMEOUT_VALUE                 22000
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #define USART_CR1_FIELDS          ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                                               USART_CR1_TE | USART_CR1_RE  | USART_CR1_OVER8))    /
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #define USART_CR2_FIELDS          ((uint32_t)(USART_CR2_CPHA | USART_CR2_CPOL | \
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                                               USART_CR2_CLKEN | USART_CR2_LBCL | USART_CR2_STOP)) /
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @}
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /* Private macros ------------------------------------------------------------*/
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /* Private variables ---------------------------------------------------------*/
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /* Private function prototypes -----------------------------------------------*/
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /** @addtogroup USART_Private_Functions   USART Private Functions
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @{
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static void USART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static void USART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static void USART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static void USART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static void USART_DMAError(DMA_HandleTypeDef *hdma);
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_WaitOnFlagUntilTimeout(USART_HandleTypeDef *husart, uint32_t Flag, F
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_SetConfig(USART_HandleTypeDef *husart);
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_CheckIdleState(USART_HandleTypeDef *husart);
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_Transmit_IT(USART_HandleTypeDef *husart);
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_EndTransmit_IT(USART_HandleTypeDef *husart);
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_Receive_IT(USART_HandleTypeDef *husart);
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_TransmitReceive_IT(USART_HandleTypeDef *husart);
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @}
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /* Exported functions --------------------------------------------------------*/
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /** @defgroup USART_Exported_Functions USART Exported Functions
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @{
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group1 Initialization and de-initialization functions
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief    Initialization and Configuration functions
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** @verbatim
ARM GAS  /tmp/ccVFl28S.s 			page 5


 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****  ===============================================================================
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             ##### Initialization and Configuration functions #####
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****  ===============================================================================
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     [..]
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     This subsection provides a set of functions allowing to initialize the USART
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     in asynchronous and in synchronous modes.
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) Baud Rate
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) Word Length
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) Stop Bit
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) Parity
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) USART polarity
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) USART phase
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) USART LastBit
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) Receiver/transmitter modes
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     [..]
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     The HAL_USART_Init() function follows the USART  synchronous configuration
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     procedure (details for the procedure are available in reference manual).
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** @endverbatim
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @{
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /*
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   Additional Table:  If the parity is enabled, then the MSB bit of the data written
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                      in the data register is transmitted but is changed by the parity bit.
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                      According to device capability (support or not of 7-bit word length),
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                      frame length is either defined by the M bit (8-bits or 9-bits)
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                      or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                      Possible USART frame formats are as listed in the following table:
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       Table 1. USART frame format.             
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       +-----------------------------------------------------------------------+
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |       M bit       |  PCE bit  |             USART frame                |
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |-------------------|-----------|---------------------------------------|
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |-------------------|-----------|---------------------------------------|
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |-------------------|-----------|---------------------------------------|
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |-------------------|-----------|---------------------------------------|
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       +-----------------------------------------------------------------------+
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             USART frame                |
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |---------|---------|-----------|---------------------------------------|
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |---------|---------|-----------|---------------------------------------|
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |---------|---------|-----------|---------------------------------------|
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |---------|---------|-----------|---------------------------------------|
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |---------|---------|-----------|---------------------------------------|
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |---------|---------|-----------|---------------------------------------|
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
ARM GAS  /tmp/ccVFl28S.s 			page 6


 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       +-----------------------------------------------------------------------+
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** */
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Initializes the USART mode according to the specified
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         parameters in the USART_InitTypeDef and initialize the associated handle.
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Init(USART_HandleTypeDef *husart)
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
  26              		.loc 1 273 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 82B0     		sub	sp, sp, #8
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Check the USART handle allocation */
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart == NULL)
  40              		.loc 1 275 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 002B     		cmp	r3, #0
  43 000c 01D1     		bne	.L2
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_ERROR;
  44              		.loc 1 277 0
  45 000e 0123     		movs	r3, #1
  46 0010 3FE0     		b	.L3
  47              	.L2:
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Check the parameters */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   assert_param(IS_USART_INSTANCE(husart->Instance));
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_RESET)
  48              		.loc 1 283 0
  49 0012 7B68     		ldr	r3, [r7, #4]
  50 0014 4122     		movs	r2, #65
  51 0016 9B5C     		ldrb	r3, [r3, r2]
  52 0018 DBB2     		uxtb	r3, r3
  53 001a 002B     		cmp	r3, #0
  54 001c 07D1     		bne	.L4
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Allocate lock resource and initialize it */
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Lock = HAL_UNLOCKED;
  55              		.loc 1 286 0
  56 001e 7B68     		ldr	r3, [r7, #4]
  57 0020 4022     		movs	r2, #64
ARM GAS  /tmp/ccVFl28S.s 			page 7


  58 0022 0021     		movs	r1, #0
  59 0024 9954     		strb	r1, [r3, r2]
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     HAL_USART_MspInit(husart);
  60              		.loc 1 289 0
  61 0026 7B68     		ldr	r3, [r7, #4]
  62 0028 1800     		movs	r0, r3
  63 002a FFF7FEFF 		bl	HAL_USART_MspInit
  64              	.L4:
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->State = HAL_USART_STATE_BUSY;
  65              		.loc 1 292 0
  66 002e 7B68     		ldr	r3, [r7, #4]
  67 0030 4122     		movs	r2, #65
  68 0032 0221     		movs	r1, #2
  69 0034 9954     		strb	r1, [r3, r2]
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Disable the Peripheral */
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   __HAL_USART_DISABLE(husart);
  70              		.loc 1 295 0
  71 0036 7B68     		ldr	r3, [r7, #4]
  72 0038 1B68     		ldr	r3, [r3]
  73 003a 7A68     		ldr	r2, [r7, #4]
  74 003c 1268     		ldr	r2, [r2]
  75 003e 1268     		ldr	r2, [r2]
  76 0040 0121     		movs	r1, #1
  77 0042 8A43     		bics	r2, r1
  78 0044 1A60     		str	r2, [r3]
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Set the Usart Communication parameters */
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if (USART_SetConfig(husart) == HAL_ERROR)
  79              		.loc 1 298 0
  80 0046 7B68     		ldr	r3, [r7, #4]
  81 0048 1800     		movs	r0, r3
  82 004a FFF7FEFF 		bl	USART_SetConfig
  83 004e 0300     		movs	r3, r0
  84 0050 012B     		cmp	r3, #1
  85 0052 01D1     		bne	.L5
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_ERROR;
  86              		.loc 1 300 0
  87 0054 0123     		movs	r3, #1
  88 0056 1CE0     		b	.L3
  89              	.L5:
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* In Synchronous mode, the following bits must be kept cleared:
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   - LINEN bit (if LIN is supported) in the USART_CR2 register
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #if defined (USART_CR2_LINEN)
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->Instance->CR2 &= ~USART_CR2_LINEN;
  90              		.loc 1 307 0
  91 0058 7B68     		ldr	r3, [r7, #4]
  92 005a 1B68     		ldr	r3, [r3]
  93 005c 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccVFl28S.s 			page 8


  94 005e 1268     		ldr	r2, [r2]
  95 0060 5268     		ldr	r2, [r2, #4]
  96 0062 0E49     		ldr	r1, .L6
  97 0064 0A40     		ands	r2, r1
  98 0066 5A60     		str	r2, [r3, #4]
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #endif
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #if defined (USART_CR3_SCEN)
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #if defined (USART_CR3_IREN)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
  99              		.loc 1 311 0
 100 0068 7B68     		ldr	r3, [r7, #4]
 101 006a 1B68     		ldr	r3, [r3]
 102 006c 7A68     		ldr	r2, [r7, #4]
 103 006e 1268     		ldr	r2, [r2]
 104 0070 9268     		ldr	r2, [r2, #8]
 105 0072 2A21     		movs	r1, #42
 106 0074 8A43     		bics	r2, r1
 107 0076 9A60     		str	r2, [r3, #8]
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #else
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL);
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #endif
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #else
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #if defined (USART_CR3_IREN)
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->Instance->CR3 &= ~(USART_CR3_HDSEL | USART_CR3_IREN);
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #else
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->Instance->CR3 &= ~(USART_CR3_HDSEL);
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #endif
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #endif
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Enable the Peripheral */
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   __HAL_USART_ENABLE(husart);
 108              		.loc 1 324 0
 109 0078 7B68     		ldr	r3, [r7, #4]
 110 007a 1B68     		ldr	r3, [r3]
 111 007c 7A68     		ldr	r2, [r7, #4]
 112 007e 1268     		ldr	r2, [r2]
 113 0080 1268     		ldr	r2, [r2]
 114 0082 0121     		movs	r1, #1
 115 0084 0A43     		orrs	r2, r1
 116 0086 1A60     		str	r2, [r3]
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* TEACK and/or REACK to check before moving husart->State to Ready */
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   return (USART_CheckIdleState(husart));
 117              		.loc 1 327 0
 118 0088 7B68     		ldr	r3, [r7, #4]
 119 008a 1800     		movs	r0, r3
 120 008c FFF7FEFF 		bl	USART_CheckIdleState
 121 0090 0300     		movs	r3, r0
 122              	.L3:
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 123              		.loc 1 328 0
 124 0092 1800     		movs	r0, r3
 125 0094 BD46     		mov	sp, r7
 126 0096 02B0     		add	sp, sp, #8
 127              		@ sp needed
 128 0098 80BD     		pop	{r7, pc}
 129              	.L7:
ARM GAS  /tmp/ccVFl28S.s 			page 9


 130 009a C046     		.align	2
 131              	.L6:
 132 009c FFBFFFFF 		.word	-16385
 133              		.cfi_endproc
 134              	.LFE35:
 136              		.section	.text.HAL_USART_DeInit,"ax",%progbits
 137              		.align	1
 138              		.global	HAL_USART_DeInit
 139              		.syntax unified
 140              		.code	16
 141              		.thumb_func
 142              		.fpu softvfp
 144              	HAL_USART_DeInit:
 145              	.LFB36:
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief DeInitialize the USART peripheral.
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DeInit(USART_HandleTypeDef *husart)
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 146              		.loc 1 336 0
 147              		.cfi_startproc
 148 0000 80B5     		push	{r7, lr}
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              	.LCFI4:
 155              		.cfi_def_cfa_offset 16
 156 0004 00AF     		add	r7, sp, #0
 157              	.LCFI5:
 158              		.cfi_def_cfa_register 7
 159 0006 7860     		str	r0, [r7, #4]
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    /* Check the USART handle allocation */
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart == NULL)
 160              		.loc 1 338 0
 161 0008 7B68     		ldr	r3, [r7, #4]
 162 000a 002B     		cmp	r3, #0
 163 000c 01D1     		bne	.L9
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_ERROR;
 164              		.loc 1 340 0
 165 000e 0123     		movs	r3, #1
 166 0010 1FE0     		b	.L10
 167              	.L9:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Check the parameters */
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   assert_param(IS_USART_INSTANCE(husart->Instance));
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->State = HAL_USART_STATE_BUSY;
 168              		.loc 1 346 0
 169 0012 7B68     		ldr	r3, [r7, #4]
 170 0014 4122     		movs	r2, #65
ARM GAS  /tmp/ccVFl28S.s 			page 10


 171 0016 0221     		movs	r1, #2
 172 0018 9954     		strb	r1, [r3, r2]
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->Instance->CR1 = 0x0;
 173              		.loc 1 348 0
 174 001a 7B68     		ldr	r3, [r7, #4]
 175 001c 1B68     		ldr	r3, [r3]
 176 001e 0022     		movs	r2, #0
 177 0020 1A60     		str	r2, [r3]
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->Instance->CR2 = 0x0;
 178              		.loc 1 349 0
 179 0022 7B68     		ldr	r3, [r7, #4]
 180 0024 1B68     		ldr	r3, [r3]
 181 0026 0022     		movs	r2, #0
 182 0028 5A60     		str	r2, [r3, #4]
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->Instance->CR3 = 0x0;
 183              		.loc 1 350 0
 184 002a 7B68     		ldr	r3, [r7, #4]
 185 002c 1B68     		ldr	r3, [r3]
 186 002e 0022     		movs	r2, #0
 187 0030 9A60     		str	r2, [r3, #8]
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* DeInit the low level hardware */
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   HAL_USART_MspDeInit(husart);
 188              		.loc 1 353 0
 189 0032 7B68     		ldr	r3, [r7, #4]
 190 0034 1800     		movs	r0, r3
 191 0036 FFF7FEFF 		bl	HAL_USART_MspDeInit
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 192              		.loc 1 355 0
 193 003a 7B68     		ldr	r3, [r7, #4]
 194 003c 0022     		movs	r2, #0
 195 003e 5A64     		str	r2, [r3, #68]
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->State = HAL_USART_STATE_RESET;
 196              		.loc 1 356 0
 197 0040 7B68     		ldr	r3, [r7, #4]
 198 0042 4122     		movs	r2, #65
 199 0044 0021     		movs	r1, #0
 200 0046 9954     		strb	r1, [r3, r2]
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Process Unlock */
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 201              		.loc 1 359 0
 202 0048 7B68     		ldr	r3, [r7, #4]
 203 004a 4022     		movs	r2, #64
 204 004c 0021     		movs	r1, #0
 205 004e 9954     		strb	r1, [r3, r2]
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   return HAL_OK;
 206              		.loc 1 361 0
 207 0050 0023     		movs	r3, #0
 208              	.L10:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 209              		.loc 1 362 0
 210 0052 1800     		movs	r0, r3
 211 0054 BD46     		mov	sp, r7
ARM GAS  /tmp/ccVFl28S.s 			page 11


 212 0056 02B0     		add	sp, sp, #8
 213              		@ sp needed
 214 0058 80BD     		pop	{r7, pc}
 215              		.cfi_endproc
 216              	.LFE36:
 218              		.section	.text.HAL_USART_MspInit,"ax",%progbits
 219              		.align	1
 220              		.weak	HAL_USART_MspInit
 221              		.syntax unified
 222              		.code	16
 223              		.thumb_func
 224              		.fpu softvfp
 226              	HAL_USART_MspInit:
 227              	.LFB37:
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Initialize the USART MSP.
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****  __weak void HAL_USART_MspInit(USART_HandleTypeDef *husart)
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 228              		.loc 1 370 0
 229              		.cfi_startproc
 230 0000 80B5     		push	{r7, lr}
 231              	.LCFI6:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 82B0     		sub	sp, sp, #8
 236              	.LCFI7:
 237              		.cfi_def_cfa_offset 16
 238 0004 00AF     		add	r7, sp, #0
 239              	.LCFI8:
 240              		.cfi_def_cfa_register 7
 241 0006 7860     		str	r0, [r7, #4]
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   UNUSED(husart);
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             the HAL_USART_MspInit can be implemented in the user file
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    */
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 242              		.loc 1 377 0
 243 0008 C046     		nop
 244 000a BD46     		mov	sp, r7
 245 000c 02B0     		add	sp, sp, #8
 246              		@ sp needed
 247 000e 80BD     		pop	{r7, pc}
 248              		.cfi_endproc
 249              	.LFE37:
 251              		.section	.text.HAL_USART_MspDeInit,"ax",%progbits
 252              		.align	1
 253              		.weak	HAL_USART_MspDeInit
 254              		.syntax unified
 255              		.code	16
 256              		.thumb_func
ARM GAS  /tmp/ccVFl28S.s 			page 12


 257              		.fpu softvfp
 259              	HAL_USART_MspDeInit:
 260              	.LFB38:
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief DeInitialize the USART MSP.
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****  __weak void HAL_USART_MspDeInit(USART_HandleTypeDef *husart)
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 261              		.loc 1 385 0
 262              		.cfi_startproc
 263 0000 80B5     		push	{r7, lr}
 264              	.LCFI9:
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              	.LCFI10:
 270              		.cfi_def_cfa_offset 16
 271 0004 00AF     		add	r7, sp, #0
 272              	.LCFI11:
 273              		.cfi_def_cfa_register 7
 274 0006 7860     		str	r0, [r7, #4]
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   UNUSED(husart);
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             the HAL_USART_MspDeInit can be implemented in the user file
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    */
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 275              		.loc 1 392 0
 276 0008 C046     		nop
 277 000a BD46     		mov	sp, r7
 278 000c 02B0     		add	sp, sp, #8
 279              		@ sp needed
 280 000e 80BD     		pop	{r7, pc}
 281              		.cfi_endproc
 282              	.LFE38:
 284              		.section	.text.HAL_USART_Transmit,"ax",%progbits
 285              		.align	1
 286              		.global	HAL_USART_Transmit
 287              		.syntax unified
 288              		.code	16
 289              		.thumb_func
 290              		.fpu softvfp
 292              	HAL_USART_Transmit:
 293              	.LFB39:
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @}
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group2 IO operation functions
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *  @brief   USART Transmit and Receive functions
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *
ARM GAS  /tmp/ccVFl28S.s 			page 13


 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** @verbatim
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****  ===============================================================================
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****                       ##### IO operation functions #####
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****  ===============================================================================
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART synchronous
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     data transfers.
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     [..] The USART supports master mode only: it cannot receive or send data related to an input
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****          clock (SCLK is always an output).
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     (#) There are two modes of transfer:
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             The HAL status of all data processing is returned by the same function
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             after finishing transfer.
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****            or DMA, These APIs return the HAL status.
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****            The end of the data processing will be indicated through the
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****            dedicated USART IRQ when using Interrupt mode or the DMA IRQ when
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****            using DMA mode.
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****            The HAL_USART_TxCpltCallback(), HAL_USART_RxCpltCallback() and HAL_USART_TxRxCpltCallbac
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****            will be executed respectively at the end of the transmit or Receive process
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****            The HAL_USART_ErrorCallback()user callback will be executed when a communication error i
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     (#) Blocking mode APIs are :
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_Transmit()in simplex mode
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_Receive() in full duplex receive only
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_TransmitReceive() in full duplex mode
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     (#) No-Blocking mode APIs with Interrupt are :
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_Transmit_IT()in simplex mode
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_Receive_IT() in full duplex receive only
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_TransmitReceive_IT()in full duplex mode
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_IRQHandler()
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     (#) No-Blocking mode APIs with DMA are :
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_Transmit_DMA()in simplex mode
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_Receive_DMA() in full duplex receive only
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_TransmitReceive_DMA() in full duplex mode
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_DMAPause()
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_DMAResume()
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_DMAStop()
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     (#) A set of Transfer Complete Callbacks are provided in No-Blocking mode:
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_TxCpltCallback()
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_RxCpltCallback()
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_TxHalfCpltCallback()
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_RxHalfCpltCallback()
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_ErrorCallback()
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         (++) HAL_USART_TxRxCpltCallback()
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** @endverbatim
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @{
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Simplex send an amount of data in blocking mode.
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
ARM GAS  /tmp/ccVFl28S.s 			page 14


 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pTxData: Pointer to data buffer.
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Size: Amount of data to be sent.
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Timeout: Timeout duration.
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Size, 
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 294              		.loc 1 468 0
 295              		.cfi_startproc
 296 0000 80B5     		push	{r7, lr}
 297              	.LCFI12:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 7, -8
 300              		.cfi_offset 14, -4
 301 0002 86B0     		sub	sp, sp, #24
 302              	.LCFI13:
 303              		.cfi_def_cfa_offset 32
 304 0004 00AF     		add	r7, sp, #0
 305              	.LCFI14:
 306              		.cfi_def_cfa_register 7
 307 0006 F860     		str	r0, [r7, #12]
 308 0008 B960     		str	r1, [r7, #8]
 309 000a 3B60     		str	r3, [r7]
 310 000c BB1D     		adds	r3, r7, #6
 311 000e 1A80     		strh	r2, [r3]
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t* tmp=0;
 312              		.loc 1 469 0
 313 0010 0023     		movs	r3, #0
 314 0012 7B61     		str	r3, [r7, #20]
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 315              		.loc 1 471 0
 316 0014 FB68     		ldr	r3, [r7, #12]
 317 0016 4122     		movs	r2, #65
 318 0018 9B5C     		ldrb	r3, [r3, r2]
 319 001a DBB2     		uxtb	r3, r3
 320 001c 012B     		cmp	r3, #1
 321 001e 00D0     		beq	.LCB258
 322 0020 7BE0     		b	.L14	@long jump
 323              	.LCB258:
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((pTxData == NULL) || (Size == 0))
 324              		.loc 1 473 0
 325 0022 BB68     		ldr	r3, [r7, #8]
 326 0024 002B     		cmp	r3, #0
 327 0026 03D0     		beq	.L15
 328              		.loc 1 473 0 is_stmt 0 discriminator 1
 329 0028 BB1D     		adds	r3, r7, #6
 330 002a 1B88     		ldrh	r3, [r3]
 331 002c 002B     		cmp	r3, #0
 332 002e 01D1     		bne	.L16
 333              	.L15:
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
ARM GAS  /tmp/ccVFl28S.s 			page 15


 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return  HAL_ERROR;
 334              		.loc 1 475 0 is_stmt 1
 335 0030 0123     		movs	r3, #1
 336 0032 73E0     		b	.L17
 337              	.L16:
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pTxData buffer provided as input paramter 
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        handled through a u16 cast. */
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 338              		.loc 1 481 0
 339 0034 FB68     		ldr	r3, [r7, #12]
 340 0036 9A68     		ldr	r2, [r3, #8]
 341 0038 8023     		movs	r3, #128
 342 003a 5B01     		lsls	r3, r3, #5
 343 003c 9A42     		cmp	r2, r3
 344 003e 09D1     		bne	.L18
 345              		.loc 1 481 0 is_stmt 0 discriminator 1
 346 0040 FB68     		ldr	r3, [r7, #12]
 347 0042 1B69     		ldr	r3, [r3, #16]
 348 0044 002B     		cmp	r3, #0
 349 0046 05D1     		bne	.L18
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if((((uint32_t)pTxData)&1) != 0)
 350              		.loc 1 483 0 is_stmt 1
 351 0048 BB68     		ldr	r3, [r7, #8]
 352 004a 0122     		movs	r2, #1
 353 004c 1340     		ands	r3, r2
 354 004e 01D0     		beq	.L18
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return  HAL_ERROR;
 355              		.loc 1 485 0
 356 0050 0123     		movs	r3, #1
 357 0052 63E0     		b	.L17
 358              	.L18:
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Locked */
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_LOCK(husart);
 359              		.loc 1 490 0
 360 0054 FB68     		ldr	r3, [r7, #12]
 361 0056 4022     		movs	r2, #64
 362 0058 9B5C     		ldrb	r3, [r3, r2]
 363 005a 012B     		cmp	r3, #1
 364 005c 01D1     		bne	.L19
 365              		.loc 1 490 0 is_stmt 0 discriminator 1
 366 005e 0223     		movs	r3, #2
 367 0060 5CE0     		b	.L17
 368              	.L19:
 369              		.loc 1 490 0 discriminator 2
 370 0062 FB68     		ldr	r3, [r7, #12]
 371 0064 4022     		movs	r2, #64
 372 0066 0121     		movs	r1, #1
 373 0068 9954     		strb	r1, [r3, r2]
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
ARM GAS  /tmp/ccVFl28S.s 			page 16


 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 374              		.loc 1 492 0 is_stmt 1 discriminator 2
 375 006a FB68     		ldr	r3, [r7, #12]
 376 006c 0022     		movs	r2, #0
 377 006e 5A64     		str	r2, [r3, #68]
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 378              		.loc 1 493 0 discriminator 2
 379 0070 FB68     		ldr	r3, [r7, #12]
 380 0072 4122     		movs	r2, #65
 381 0074 1221     		movs	r1, #18
 382 0076 9954     		strb	r1, [r3, r2]
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferSize = Size;
 383              		.loc 1 495 0 discriminator 2
 384 0078 FB68     		ldr	r3, [r7, #12]
 385 007a BA1D     		adds	r2, r7, #6
 386 007c 1288     		ldrh	r2, [r2]
 387 007e 1A85     		strh	r2, [r3, #40]
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferCount = Size;
 388              		.loc 1 496 0 discriminator 2
 389 0080 FB68     		ldr	r3, [r7, #12]
 390 0082 BA1D     		adds	r2, r7, #6
 391 0084 1288     		ldrh	r2, [r2]
 392 0086 5A85     		strh	r2, [r3, #42]
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Check the remaining data to be sent */
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     while(husart->TxXferCount > 0)
 393              		.loc 1 499 0 discriminator 2
 394 0088 2FE0     		b	.L20
 395              	.L23:
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->TxXferCount--;
 396              		.loc 1 501 0
 397 008a FB68     		ldr	r3, [r7, #12]
 398 008c 5B8D     		ldrh	r3, [r3, #42]
 399 008e 013B     		subs	r3, r3, #1
 400 0090 9AB2     		uxth	r2, r3
 401 0092 FB68     		ldr	r3, [r7, #12]
 402 0094 5A85     		strh	r2, [r3, #42]
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TC, RESET, Timeout) != HAL_OK)
 403              		.loc 1 502 0
 404 0096 3B68     		ldr	r3, [r7]
 405 0098 F868     		ldr	r0, [r7, #12]
 406 009a 0022     		movs	r2, #0
 407 009c 4021     		movs	r1, #64
 408 009e FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 409 00a2 031E     		subs	r3, r0, #0
 410 00a4 01D0     		beq	.L21
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return HAL_TIMEOUT;
 411              		.loc 1 504 0
 412 00a6 0323     		movs	r3, #3
 413 00a8 38E0     		b	.L17
 414              	.L21:
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_N
 415              		.loc 1 506 0
ARM GAS  /tmp/ccVFl28S.s 			page 17


 416 00aa FB68     		ldr	r3, [r7, #12]
 417 00ac 9A68     		ldr	r2, [r3, #8]
 418 00ae 8023     		movs	r3, #128
 419 00b0 5B01     		lsls	r3, r3, #5
 420 00b2 9A42     		cmp	r2, r3
 421 00b4 11D1     		bne	.L22
 422              		.loc 1 506 0 is_stmt 0 discriminator 1
 423 00b6 FB68     		ldr	r3, [r7, #12]
 424 00b8 1B69     		ldr	r3, [r3, #16]
 425 00ba 002B     		cmp	r3, #0
 426 00bc 0DD1     		bne	.L22
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         tmp = (uint16_t*) pTxData;
 427              		.loc 1 508 0 is_stmt 1
 428 00be BB68     		ldr	r3, [r7, #8]
 429 00c0 7B61     		str	r3, [r7, #20]
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         husart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 430              		.loc 1 509 0
 431 00c2 FB68     		ldr	r3, [r7, #12]
 432 00c4 1B68     		ldr	r3, [r3]
 433 00c6 7A69     		ldr	r2, [r7, #20]
 434 00c8 1288     		ldrh	r2, [r2]
 435 00ca D205     		lsls	r2, r2, #23
 436 00cc D20D     		lsrs	r2, r2, #23
 437 00ce 92B2     		uxth	r2, r2
 438 00d0 1A85     		strh	r2, [r3, #40]
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         pTxData += 2;
 439              		.loc 1 510 0
 440 00d2 BB68     		ldr	r3, [r7, #8]
 441 00d4 0233     		adds	r3, r3, #2
 442 00d6 BB60     		str	r3, [r7, #8]
 443 00d8 07E0     		b	.L20
 444              	.L22:
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       else
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         husart->Instance->TDR = (*pTxData++ & (uint8_t)0xFF);
 445              		.loc 1 514 0
 446 00da FB68     		ldr	r3, [r7, #12]
 447 00dc 1A68     		ldr	r2, [r3]
 448 00de BB68     		ldr	r3, [r7, #8]
 449 00e0 591C     		adds	r1, r3, #1
 450 00e2 B960     		str	r1, [r7, #8]
 451 00e4 1B78     		ldrb	r3, [r3]
 452 00e6 9BB2     		uxth	r3, r3
 453 00e8 1385     		strh	r3, [r2, #40]
 454              	.L20:
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 455              		.loc 1 499 0
 456 00ea FB68     		ldr	r3, [r7, #12]
 457 00ec 5B8D     		ldrh	r3, [r3, #42]
 458 00ee 002B     		cmp	r3, #0
 459 00f0 CBD1     		bne	.L23
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TC, RESET, Timeout) != HAL_OK)
ARM GAS  /tmp/ccVFl28S.s 			page 18


 460              		.loc 1 518 0
 461 00f2 3B68     		ldr	r3, [r7]
 462 00f4 F868     		ldr	r0, [r7, #12]
 463 00f6 0022     		movs	r2, #0
 464 00f8 4021     		movs	r1, #64
 465 00fa FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 466 00fe 031E     		subs	r3, r0, #0
 467 0100 01D0     		beq	.L24
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return HAL_TIMEOUT;
 468              		.loc 1 520 0
 469 0102 0323     		movs	r3, #3
 470 0104 0AE0     		b	.L17
 471              	.L24:
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 472              		.loc 1 523 0
 473 0106 FB68     		ldr	r3, [r7, #12]
 474 0108 4122     		movs	r2, #65
 475 010a 0121     		movs	r1, #1
 476 010c 9954     		strb	r1, [r3, r2]
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Unlocked */
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 477              		.loc 1 526 0
 478 010e FB68     		ldr	r3, [r7, #12]
 479 0110 4022     		movs	r2, #64
 480 0112 0021     		movs	r1, #0
 481 0114 9954     		strb	r1, [r3, r2]
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_OK;
 482              		.loc 1 528 0
 483 0116 0023     		movs	r3, #0
 484 0118 00E0     		b	.L17
 485              	.L14:
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 486              		.loc 1 532 0
 487 011a 0223     		movs	r3, #2
 488              	.L17:
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 489              		.loc 1 534 0
 490 011c 1800     		movs	r0, r3
 491 011e BD46     		mov	sp, r7
 492 0120 06B0     		add	sp, sp, #24
 493              		@ sp needed
 494 0122 80BD     		pop	{r7, pc}
 495              		.cfi_endproc
 496              	.LFE39:
 498              		.section	.text.HAL_USART_Receive,"ax",%progbits
 499              		.align	1
 500              		.global	HAL_USART_Receive
 501              		.syntax unified
ARM GAS  /tmp/ccVFl28S.s 			page 19


 502              		.code	16
 503              		.thumb_func
 504              		.fpu softvfp
 506              	HAL_USART_Receive:
 507              	.LFB40:
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Receive an amount of data in blocking mode.
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note To receive synchronous data, dummy data are simultaneously transmitted.
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pRxData: Pointer to data buffer.
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Size: Amount of data to be received.
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Timeout: Timeout duration.
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Size, u
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 508              		.loc 1 550 0
 509              		.cfi_startproc
 510 0000 80B5     		push	{r7, lr}
 511              	.LCFI15:
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 515 0002 86B0     		sub	sp, sp, #24
 516              	.LCFI16:
 517              		.cfi_def_cfa_offset 32
 518 0004 00AF     		add	r7, sp, #0
 519              	.LCFI17:
 520              		.cfi_def_cfa_register 7
 521 0006 F860     		str	r0, [r7, #12]
 522 0008 B960     		str	r1, [r7, #8]
 523 000a 3B60     		str	r3, [r7]
 524 000c BB1D     		adds	r3, r7, #6
 525 000e 1A80     		strh	r2, [r3]
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t* tmp=0;
 526              		.loc 1 551 0
 527 0010 0023     		movs	r3, #0
 528 0012 7B61     		str	r3, [r7, #20]
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t uhMask;
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 529              		.loc 1 554 0
 530 0014 FB68     		ldr	r3, [r7, #12]
 531 0016 4122     		movs	r2, #65
 532 0018 9B5C     		ldrb	r3, [r3, r2]
 533 001a DBB2     		uxtb	r3, r3
 534 001c 012B     		cmp	r3, #1
 535 001e 00D0     		beq	.LCB452
 536 0020 C1E0     		b	.L26	@long jump
 537              	.LCB452:
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((pRxData == NULL) || (Size == 0))
ARM GAS  /tmp/ccVFl28S.s 			page 20


 538              		.loc 1 556 0
 539 0022 BB68     		ldr	r3, [r7, #8]
 540 0024 002B     		cmp	r3, #0
 541 0026 03D0     		beq	.L27
 542              		.loc 1 556 0 is_stmt 0 discriminator 1
 543 0028 BB1D     		adds	r3, r7, #6
 544 002a 1B88     		ldrh	r3, [r3]
 545 002c 002B     		cmp	r3, #0
 546 002e 01D1     		bne	.L28
 547              	.L27:
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return  HAL_ERROR;
 548              		.loc 1 558 0 is_stmt 1
 549 0030 0123     		movs	r3, #1
 550 0032 B9E0     		b	.L29
 551              	.L28:
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pRxData buffer provided as input paramter 
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        handled through a u16 cast. */
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 552              		.loc 1 564 0
 553 0034 FB68     		ldr	r3, [r7, #12]
 554 0036 9A68     		ldr	r2, [r3, #8]
 555 0038 8023     		movs	r3, #128
 556 003a 5B01     		lsls	r3, r3, #5
 557 003c 9A42     		cmp	r2, r3
 558 003e 09D1     		bne	.L30
 559              		.loc 1 564 0 is_stmt 0 discriminator 1
 560 0040 FB68     		ldr	r3, [r7, #12]
 561 0042 1B69     		ldr	r3, [r3, #16]
 562 0044 002B     		cmp	r3, #0
 563 0046 05D1     		bne	.L30
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if((((uint32_t)pRxData)&1) != 0)
 564              		.loc 1 566 0 is_stmt 1
 565 0048 BB68     		ldr	r3, [r7, #8]
 566 004a 0122     		movs	r2, #1
 567 004c 1340     		ands	r3, r2
 568 004e 01D0     		beq	.L30
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return  HAL_ERROR;
 569              		.loc 1 568 0
 570 0050 0123     		movs	r3, #1
 571 0052 A9E0     		b	.L29
 572              	.L30:
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Locked */
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_LOCK(husart);
 573              		.loc 1 573 0
 574 0054 FB68     		ldr	r3, [r7, #12]
 575 0056 4022     		movs	r2, #64
 576 0058 9B5C     		ldrb	r3, [r3, r2]
 577 005a 012B     		cmp	r3, #1
ARM GAS  /tmp/ccVFl28S.s 			page 21


 578 005c 01D1     		bne	.L31
 579              		.loc 1 573 0 is_stmt 0 discriminator 1
 580 005e 0223     		movs	r3, #2
 581 0060 A2E0     		b	.L29
 582              	.L31:
 583              		.loc 1 573 0 discriminator 2
 584 0062 FB68     		ldr	r3, [r7, #12]
 585 0064 4022     		movs	r2, #64
 586 0066 0121     		movs	r1, #1
 587 0068 9954     		strb	r1, [r3, r2]
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 588              		.loc 1 575 0 is_stmt 1 discriminator 2
 589 006a FB68     		ldr	r3, [r7, #12]
 590 006c 0022     		movs	r2, #0
 591 006e 5A64     		str	r2, [r3, #68]
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 592              		.loc 1 576 0 discriminator 2
 593 0070 FB68     		ldr	r3, [r7, #12]
 594 0072 4122     		movs	r2, #65
 595 0074 2221     		movs	r1, #34
 596 0076 9954     		strb	r1, [r3, r2]
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->RxXferSize = Size;
 597              		.loc 1 578 0 discriminator 2
 598 0078 FB68     		ldr	r3, [r7, #12]
 599 007a BA1D     		adds	r2, r7, #6
 600 007c 1288     		ldrh	r2, [r2]
 601 007e 1A86     		strh	r2, [r3, #48]
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->RxXferCount = Size;
 602              		.loc 1 579 0 discriminator 2
 603 0080 FB68     		ldr	r3, [r7, #12]
 604 0082 BA1D     		adds	r2, r7, #6
 605 0084 1288     		ldrh	r2, [r2]
 606 0086 5A86     		strh	r2, [r3, #50]
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Computation of USART mask to apply to RDR register */
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     USART_MASK_COMPUTATION(husart);
 607              		.loc 1 582 0 discriminator 2
 608 0088 FB68     		ldr	r3, [r7, #12]
 609 008a 9A68     		ldr	r2, [r3, #8]
 610 008c 8023     		movs	r3, #128
 611 008e 5B01     		lsls	r3, r3, #5
 612 0090 9A42     		cmp	r2, r3
 613 0092 0BD1     		bne	.L32
 614              		.loc 1 582 0 is_stmt 0 discriminator 1
 615 0094 FB68     		ldr	r3, [r7, #12]
 616 0096 1B69     		ldr	r3, [r3, #16]
 617 0098 002B     		cmp	r3, #0
 618 009a 03D1     		bne	.L33
 619              		.loc 1 582 0 discriminator 3
 620 009c FB68     		ldr	r3, [r7, #12]
 621 009e 444A     		ldr	r2, .L45
 622 00a0 9A86     		strh	r2, [r3, #52]
 623 00a2 24E0     		b	.L35
 624              	.L33:
 625              		.loc 1 582 0 discriminator 4
ARM GAS  /tmp/ccVFl28S.s 			page 22


 626 00a4 FB68     		ldr	r3, [r7, #12]
 627 00a6 FF22     		movs	r2, #255
 628 00a8 9A86     		strh	r2, [r3, #52]
 629 00aa 20E0     		b	.L35
 630              	.L32:
 631              		.loc 1 582 0 discriminator 2
 632 00ac FB68     		ldr	r3, [r7, #12]
 633 00ae 9B68     		ldr	r3, [r3, #8]
 634 00b0 002B     		cmp	r3, #0
 635 00b2 0BD1     		bne	.L36
 636              		.loc 1 582 0 discriminator 5
 637 00b4 FB68     		ldr	r3, [r7, #12]
 638 00b6 1B69     		ldr	r3, [r3, #16]
 639 00b8 002B     		cmp	r3, #0
 640 00ba 03D1     		bne	.L37
 641              		.loc 1 582 0 discriminator 7
 642 00bc FB68     		ldr	r3, [r7, #12]
 643 00be FF22     		movs	r2, #255
 644 00c0 9A86     		strh	r2, [r3, #52]
 645 00c2 14E0     		b	.L35
 646              	.L37:
 647              		.loc 1 582 0 discriminator 8
 648 00c4 FB68     		ldr	r3, [r7, #12]
 649 00c6 7F22     		movs	r2, #127
 650 00c8 9A86     		strh	r2, [r3, #52]
 651 00ca 10E0     		b	.L35
 652              	.L36:
 653              		.loc 1 582 0 discriminator 6
 654 00cc FB68     		ldr	r3, [r7, #12]
 655 00ce 9A68     		ldr	r2, [r3, #8]
 656 00d0 8023     		movs	r3, #128
 657 00d2 5B05     		lsls	r3, r3, #21
 658 00d4 9A42     		cmp	r2, r3
 659 00d6 0AD1     		bne	.L35
 660              		.loc 1 582 0 discriminator 9
 661 00d8 FB68     		ldr	r3, [r7, #12]
 662 00da 1B69     		ldr	r3, [r3, #16]
 663 00dc 002B     		cmp	r3, #0
 664 00de 03D1     		bne	.L39
 665              		.loc 1 582 0 discriminator 10
 666 00e0 FB68     		ldr	r3, [r7, #12]
 667 00e2 7F22     		movs	r2, #127
 668 00e4 9A86     		strh	r2, [r3, #52]
 669 00e6 02E0     		b	.L35
 670              	.L39:
 671              		.loc 1 582 0 discriminator 11
 672 00e8 FB68     		ldr	r3, [r7, #12]
 673 00ea 3F22     		movs	r2, #63
 674 00ec 9A86     		strh	r2, [r3, #52]
 675              	.L35:
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     uhMask = husart->Mask;
 676              		.loc 1 583 0 is_stmt 1
 677 00ee 1223     		movs	r3, #18
 678 00f0 FB18     		adds	r3, r7, r3
 679 00f2 FA68     		ldr	r2, [r7, #12]
 680 00f4 928E     		ldrh	r2, [r2, #52]
 681 00f6 1A80     		strh	r2, [r3]
ARM GAS  /tmp/ccVFl28S.s 			page 23


 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* as long as data have to be received */
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     while(husart->RxXferCount > 0)
 682              		.loc 1 586 0
 683 00f8 47E0     		b	.L40
 684              	.L44:
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->RxXferCount--;
 685              		.loc 1 588 0
 686 00fa FB68     		ldr	r3, [r7, #12]
 687 00fc 5B8E     		ldrh	r3, [r3, #50]
 688 00fe 013B     		subs	r3, r3, #1
 689 0100 9AB2     		uxth	r2, r3
 690 0102 FB68     		ldr	r3, [r7, #12]
 691 0104 5A86     		strh	r2, [r3, #50]
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Wait until TC flag is set to send dummy byte in order to generate the
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       * clock for the slave to send data.
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        * Whatever the frame length (7, 8 or 9-bit long), the same dummy value
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        * can be written for all the cases. */
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TC, RESET, Timeout) != HAL_OK)
 692              		.loc 1 594 0
 693 0106 3B68     		ldr	r3, [r7]
 694 0108 F868     		ldr	r0, [r7, #12]
 695 010a 0022     		movs	r2, #0
 696 010c 4021     		movs	r1, #64
 697 010e FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 698 0112 031E     		subs	r3, r0, #0
 699 0114 01D0     		beq	.L41
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return HAL_TIMEOUT;
 700              		.loc 1 596 0
 701 0116 0323     		movs	r3, #3
 702 0118 46E0     		b	.L29
 703              	.L41:
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x0FF);
 704              		.loc 1 598 0
 705 011a FB68     		ldr	r3, [r7, #12]
 706 011c 1B68     		ldr	r3, [r3]
 707 011e FF22     		movs	r2, #255
 708 0120 1A85     		strh	r2, [r3, #40]
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Wait for RXNE Flag */
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 709              		.loc 1 601 0
 710 0122 3B68     		ldr	r3, [r7]
 711 0124 F868     		ldr	r0, [r7, #12]
 712 0126 0022     		movs	r2, #0
 713 0128 2021     		movs	r1, #32
 714 012a FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 715 012e 031E     		subs	r3, r0, #0
 716 0130 01D0     		beq	.L42
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return HAL_TIMEOUT;
 717              		.loc 1 603 0
 718 0132 0323     		movs	r3, #3
ARM GAS  /tmp/ccVFl28S.s 			page 24


 719 0134 38E0     		b	.L29
 720              	.L42:
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_N
 721              		.loc 1 606 0
 722 0136 FB68     		ldr	r3, [r7, #12]
 723 0138 9A68     		ldr	r2, [r3, #8]
 724 013a 8023     		movs	r3, #128
 725 013c 5B01     		lsls	r3, r3, #5
 726 013e 9A42     		cmp	r2, r3
 727 0140 14D1     		bne	.L43
 728              		.loc 1 606 0 is_stmt 0 discriminator 1
 729 0142 FB68     		ldr	r3, [r7, #12]
 730 0144 1B69     		ldr	r3, [r3, #16]
 731 0146 002B     		cmp	r3, #0
 732 0148 10D1     		bne	.L43
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         tmp = (uint16_t*) pRxData ;
 733              		.loc 1 608 0 is_stmt 1
 734 014a BB68     		ldr	r3, [r7, #8]
 735 014c 7B61     		str	r3, [r7, #20]
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         *tmp = (uint16_t)(husart->Instance->RDR & uhMask);
 736              		.loc 1 609 0
 737 014e FB68     		ldr	r3, [r7, #12]
 738 0150 1B68     		ldr	r3, [r3]
 739 0152 9B8C     		ldrh	r3, [r3, #36]
 740 0154 9BB2     		uxth	r3, r3
 741 0156 1222     		movs	r2, #18
 742 0158 BA18     		adds	r2, r7, r2
 743 015a 1288     		ldrh	r2, [r2]
 744 015c 1340     		ands	r3, r2
 745 015e 9AB2     		uxth	r2, r3
 746 0160 7B69     		ldr	r3, [r7, #20]
 747 0162 1A80     		strh	r2, [r3]
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         pRxData +=2;
 748              		.loc 1 610 0
 749 0164 BB68     		ldr	r3, [r7, #8]
 750 0166 0233     		adds	r3, r3, #2
 751 0168 BB60     		str	r3, [r7, #8]
 752 016a 0EE0     		b	.L40
 753              	.L43:
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       else
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         *pRxData++ = (uint8_t)(husart->Instance->RDR & (uint8_t)uhMask);
 754              		.loc 1 614 0
 755 016c BB68     		ldr	r3, [r7, #8]
 756 016e 5A1C     		adds	r2, r3, #1
 757 0170 BA60     		str	r2, [r7, #8]
 758 0172 FA68     		ldr	r2, [r7, #12]
 759 0174 1268     		ldr	r2, [r2]
 760 0176 928C     		ldrh	r2, [r2, #36]
 761 0178 92B2     		uxth	r2, r2
 762 017a D2B2     		uxtb	r2, r2
 763 017c 1221     		movs	r1, #18
 764 017e 7918     		adds	r1, r7, r1
ARM GAS  /tmp/ccVFl28S.s 			page 25


 765 0180 0988     		ldrh	r1, [r1]
 766 0182 C9B2     		uxtb	r1, r1
 767 0184 0A40     		ands	r2, r1
 768 0186 D2B2     		uxtb	r2, r2
 769 0188 1A70     		strb	r2, [r3]
 770              	.L40:
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 771              		.loc 1 586 0
 772 018a FB68     		ldr	r3, [r7, #12]
 773 018c 5B8E     		ldrh	r3, [r3, #50]
 774 018e 002B     		cmp	r3, #0
 775 0190 B3D1     		bne	.L44
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 776              		.loc 1 618 0
 777 0192 FB68     		ldr	r3, [r7, #12]
 778 0194 4122     		movs	r2, #65
 779 0196 0121     		movs	r1, #1
 780 0198 9954     		strb	r1, [r3, r2]
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Unlocked */
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 781              		.loc 1 621 0
 782 019a FB68     		ldr	r3, [r7, #12]
 783 019c 4022     		movs	r2, #64
 784 019e 0021     		movs	r1, #0
 785 01a0 9954     		strb	r1, [r3, r2]
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_OK;
 786              		.loc 1 623 0
 787 01a2 0023     		movs	r3, #0
 788 01a4 00E0     		b	.L29
 789              	.L26:
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 790              		.loc 1 627 0
 791 01a6 0223     		movs	r3, #2
 792              	.L29:
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 793              		.loc 1 629 0
 794 01a8 1800     		movs	r0, r3
 795 01aa BD46     		mov	sp, r7
 796 01ac 06B0     		add	sp, sp, #24
 797              		@ sp needed
 798 01ae 80BD     		pop	{r7, pc}
 799              	.L46:
 800              		.align	2
 801              	.L45:
 802 01b0 FF010000 		.word	511
 803              		.cfi_endproc
 804              	.LFE40:
 806              		.section	.text.HAL_USART_TransmitReceive,"ax",%progbits
ARM GAS  /tmp/ccVFl28S.s 			page 26


 807              		.align	1
 808              		.global	HAL_USART_TransmitReceive
 809              		.syntax unified
 810              		.code	16
 811              		.thumb_func
 812              		.fpu softvfp
 814              	HAL_USART_TransmitReceive:
 815              	.LFB41:
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Full-Duplex Send and Receive an amount of data in blocking mode.
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pTxData: pointer to TX data buffer.
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pRxData: pointer to RX data buffer.
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Size: amount of data to be sent (same amount to be received).
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Timeout: Timeout duration.
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         address of user data buffers containing data to be sent/received, should be aligned on 
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         (as sent/received data will be handled using u16 pointer cast). Depending on compilatio
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive(USART_HandleTypeDef *husart, uint8_t *pTxData, uint8_t 
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 816              		.loc 1 645 0
 817              		.cfi_startproc
 818 0000 80B5     		push	{r7, lr}
 819              	.LCFI18:
 820              		.cfi_def_cfa_offset 8
 821              		.cfi_offset 7, -8
 822              		.cfi_offset 14, -4
 823 0002 86B0     		sub	sp, sp, #24
 824              	.LCFI19:
 825              		.cfi_def_cfa_offset 32
 826 0004 00AF     		add	r7, sp, #0
 827              	.LCFI20:
 828              		.cfi_def_cfa_register 7
 829 0006 F860     		str	r0, [r7, #12]
 830 0008 B960     		str	r1, [r7, #8]
 831 000a 7A60     		str	r2, [r7, #4]
 832 000c 1A00     		movs	r2, r3
 833 000e BB1C     		adds	r3, r7, #2
 834 0010 1A80     		strh	r2, [r3]
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t* tmp=0;
 835              		.loc 1 646 0
 836 0012 0023     		movs	r3, #0
 837 0014 7B61     		str	r3, [r7, #20]
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t uhMask;
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 838              		.loc 1 649 0
 839 0016 FB68     		ldr	r3, [r7, #12]
 840 0018 4122     		movs	r2, #65
 841 001a 9B5C     		ldrb	r3, [r3, r2]
 842 001c DBB2     		uxtb	r3, r3
 843 001e 012B     		cmp	r3, #1
 844 0020 00D0     		beq	.LCB740
ARM GAS  /tmp/ccVFl28S.s 			page 27


 845 0022 FBE0     		b	.L48	@long jump
 846              	.LCB740:
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((pTxData == NULL) || (pRxData == NULL) || (Size == 0))
 847              		.loc 1 651 0
 848 0024 BB68     		ldr	r3, [r7, #8]
 849 0026 002B     		cmp	r3, #0
 850 0028 06D0     		beq	.L49
 851              		.loc 1 651 0 is_stmt 0 discriminator 1
 852 002a 7B68     		ldr	r3, [r7, #4]
 853 002c 002B     		cmp	r3, #0
 854 002e 03D0     		beq	.L49
 855              		.loc 1 651 0 discriminator 2
 856 0030 BB1C     		adds	r3, r7, #2
 857 0032 1B88     		ldrh	r3, [r3]
 858 0034 002B     		cmp	r3, #0
 859 0036 01D1     		bne	.L50
 860              	.L49:
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return  HAL_ERROR;
 861              		.loc 1 653 0 is_stmt 1
 862 0038 0123     		movs	r3, #1
 863 003a F0E0     		b	.L51
 864              	.L50:
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pTxData and pRxData buffers provided as input paramter 
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR/retrieved from RDR will b
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        handled through a u16 cast. */
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 865              		.loc 1 659 0
 866 003c FB68     		ldr	r3, [r7, #12]
 867 003e 9A68     		ldr	r2, [r3, #8]
 868 0040 8023     		movs	r3, #128
 869 0042 5B01     		lsls	r3, r3, #5
 870 0044 9A42     		cmp	r2, r3
 871 0046 0DD1     		bne	.L52
 872              		.loc 1 659 0 is_stmt 0 discriminator 1
 873 0048 FB68     		ldr	r3, [r7, #12]
 874 004a 1B69     		ldr	r3, [r3, #16]
 875 004c 002B     		cmp	r3, #0
 876 004e 09D1     		bne	.L52
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(((((uint32_t)pTxData)&1) != 0) || ((((uint32_t)pRxData)&1) != 0))
 877              		.loc 1 661 0 is_stmt 1
 878 0050 BB68     		ldr	r3, [r7, #8]
 879 0052 0122     		movs	r2, #1
 880 0054 1340     		ands	r3, r2
 881 0056 03D1     		bne	.L53
 882              		.loc 1 661 0 is_stmt 0 discriminator 1
 883 0058 7B68     		ldr	r3, [r7, #4]
 884 005a 0122     		movs	r2, #1
 885 005c 1340     		ands	r3, r2
 886 005e 01D0     		beq	.L52
 887              	.L53:
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return  HAL_ERROR;
ARM GAS  /tmp/ccVFl28S.s 			page 28


 888              		.loc 1 663 0 is_stmt 1
 889 0060 0123     		movs	r3, #1
 890 0062 DCE0     		b	.L51
 891              	.L52:
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Locked */
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_LOCK(husart);
 892              		.loc 1 668 0
 893 0064 FB68     		ldr	r3, [r7, #12]
 894 0066 4022     		movs	r2, #64
 895 0068 9B5C     		ldrb	r3, [r3, r2]
 896 006a 012B     		cmp	r3, #1
 897 006c 01D1     		bne	.L54
 898              		.loc 1 668 0 is_stmt 0 discriminator 1
 899 006e 0223     		movs	r3, #2
 900 0070 D5E0     		b	.L51
 901              	.L54:
 902              		.loc 1 668 0 discriminator 2
 903 0072 FB68     		ldr	r3, [r7, #12]
 904 0074 4022     		movs	r2, #64
 905 0076 0121     		movs	r1, #1
 906 0078 9954     		strb	r1, [r3, r2]
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 907              		.loc 1 670 0 is_stmt 1 discriminator 2
 908 007a FB68     		ldr	r3, [r7, #12]
 909 007c 0022     		movs	r2, #0
 910 007e 5A64     		str	r2, [r3, #68]
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 911              		.loc 1 671 0 discriminator 2
 912 0080 FB68     		ldr	r3, [r7, #12]
 913 0082 4122     		movs	r2, #65
 914 0084 2221     		movs	r1, #34
 915 0086 9954     		strb	r1, [r3, r2]
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->RxXferSize = Size;
 916              		.loc 1 673 0 discriminator 2
 917 0088 FB68     		ldr	r3, [r7, #12]
 918 008a BA1C     		adds	r2, r7, #2
 919 008c 1288     		ldrh	r2, [r2]
 920 008e 1A86     		strh	r2, [r3, #48]
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferSize = Size;
 921              		.loc 1 674 0 discriminator 2
 922 0090 FB68     		ldr	r3, [r7, #12]
 923 0092 BA1C     		adds	r2, r7, #2
 924 0094 1288     		ldrh	r2, [r2]
 925 0096 1A85     		strh	r2, [r3, #40]
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferCount = Size;
 926              		.loc 1 675 0 discriminator 2
 927 0098 FB68     		ldr	r3, [r7, #12]
 928 009a BA1C     		adds	r2, r7, #2
 929 009c 1288     		ldrh	r2, [r2]
 930 009e 5A85     		strh	r2, [r3, #42]
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->RxXferCount = Size;
 931              		.loc 1 676 0 discriminator 2
ARM GAS  /tmp/ccVFl28S.s 			page 29


 932 00a0 FB68     		ldr	r3, [r7, #12]
 933 00a2 BA1C     		adds	r2, r7, #2
 934 00a4 1288     		ldrh	r2, [r2]
 935 00a6 5A86     		strh	r2, [r3, #50]
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Computation of USART mask to apply to RDR register */
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     USART_MASK_COMPUTATION(husart);
 936              		.loc 1 679 0 discriminator 2
 937 00a8 FB68     		ldr	r3, [r7, #12]
 938 00aa 9A68     		ldr	r2, [r3, #8]
 939 00ac 8023     		movs	r3, #128
 940 00ae 5B01     		lsls	r3, r3, #5
 941 00b0 9A42     		cmp	r2, r3
 942 00b2 0BD1     		bne	.L55
 943              		.loc 1 679 0 is_stmt 0 discriminator 1
 944 00b4 FB68     		ldr	r3, [r7, #12]
 945 00b6 1B69     		ldr	r3, [r3, #16]
 946 00b8 002B     		cmp	r3, #0
 947 00ba 03D1     		bne	.L56
 948              		.loc 1 679 0 discriminator 3
 949 00bc FB68     		ldr	r3, [r7, #12]
 950 00be 5A4A     		ldr	r2, .L70
 951 00c0 9A86     		strh	r2, [r3, #52]
 952 00c2 24E0     		b	.L58
 953              	.L56:
 954              		.loc 1 679 0 discriminator 4
 955 00c4 FB68     		ldr	r3, [r7, #12]
 956 00c6 FF22     		movs	r2, #255
 957 00c8 9A86     		strh	r2, [r3, #52]
 958 00ca 20E0     		b	.L58
 959              	.L55:
 960              		.loc 1 679 0 discriminator 2
 961 00cc FB68     		ldr	r3, [r7, #12]
 962 00ce 9B68     		ldr	r3, [r3, #8]
 963 00d0 002B     		cmp	r3, #0
 964 00d2 0BD1     		bne	.L59
 965              		.loc 1 679 0 discriminator 5
 966 00d4 FB68     		ldr	r3, [r7, #12]
 967 00d6 1B69     		ldr	r3, [r3, #16]
 968 00d8 002B     		cmp	r3, #0
 969 00da 03D1     		bne	.L60
 970              		.loc 1 679 0 discriminator 7
 971 00dc FB68     		ldr	r3, [r7, #12]
 972 00de FF22     		movs	r2, #255
 973 00e0 9A86     		strh	r2, [r3, #52]
 974 00e2 14E0     		b	.L58
 975              	.L60:
 976              		.loc 1 679 0 discriminator 8
 977 00e4 FB68     		ldr	r3, [r7, #12]
 978 00e6 7F22     		movs	r2, #127
 979 00e8 9A86     		strh	r2, [r3, #52]
 980 00ea 10E0     		b	.L58
 981              	.L59:
 982              		.loc 1 679 0 discriminator 6
 983 00ec FB68     		ldr	r3, [r7, #12]
 984 00ee 9A68     		ldr	r2, [r3, #8]
 985 00f0 8023     		movs	r3, #128
ARM GAS  /tmp/ccVFl28S.s 			page 30


 986 00f2 5B05     		lsls	r3, r3, #21
 987 00f4 9A42     		cmp	r2, r3
 988 00f6 0AD1     		bne	.L58
 989              		.loc 1 679 0 discriminator 9
 990 00f8 FB68     		ldr	r3, [r7, #12]
 991 00fa 1B69     		ldr	r3, [r3, #16]
 992 00fc 002B     		cmp	r3, #0
 993 00fe 03D1     		bne	.L62
 994              		.loc 1 679 0 discriminator 10
 995 0100 FB68     		ldr	r3, [r7, #12]
 996 0102 7F22     		movs	r2, #127
 997 0104 9A86     		strh	r2, [r3, #52]
 998 0106 02E0     		b	.L58
 999              	.L62:
 1000              		.loc 1 679 0 discriminator 11
 1001 0108 FB68     		ldr	r3, [r7, #12]
 1002 010a 3F22     		movs	r2, #63
 1003 010c 9A86     		strh	r2, [r3, #52]
 1004              	.L58:
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     uhMask = husart->Mask;
 1005              		.loc 1 680 0 is_stmt 1
 1006 010e 1223     		movs	r3, #18
 1007 0110 FB18     		adds	r3, r7, r3
 1008 0112 FA68     		ldr	r2, [r7, #12]
 1009 0114 928E     		ldrh	r2, [r2, #52]
 1010 0116 1A80     		strh	r2, [r3]
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Check the remain data to be sent */
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     while(husart->TxXferCount > 0)
 1011              		.loc 1 683 0
 1012 0118 71E0     		b	.L63
 1013              	.L69:
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->TxXferCount--;
 1014              		.loc 1 685 0
 1015 011a FB68     		ldr	r3, [r7, #12]
 1016 011c 5B8D     		ldrh	r3, [r3, #42]
 1017 011e 013B     		subs	r3, r3, #1
 1018 0120 9AB2     		uxth	r2, r3
 1019 0122 FB68     		ldr	r3, [r7, #12]
 1020 0124 5A85     		strh	r2, [r3, #42]
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->RxXferCount--;
 1021              		.loc 1 686 0
 1022 0126 FB68     		ldr	r3, [r7, #12]
 1023 0128 5B8E     		ldrh	r3, [r3, #50]
 1024 012a 013B     		subs	r3, r3, #1
 1025 012c 9AB2     		uxth	r2, r3
 1026 012e FB68     		ldr	r3, [r7, #12]
 1027 0130 5A86     		strh	r2, [r3, #50]
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Wait until TC flag is set to send data */
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TC, RESET, Timeout) != HAL_OK)
 1028              		.loc 1 689 0
 1029 0132 3B6A     		ldr	r3, [r7, #32]
 1030 0134 F868     		ldr	r0, [r7, #12]
 1031 0136 0022     		movs	r2, #0
 1032 0138 4021     		movs	r1, #64
ARM GAS  /tmp/ccVFl28S.s 			page 31


 1033 013a FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 1034 013e 031E     		subs	r3, r0, #0
 1035 0140 01D0     		beq	.L64
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return HAL_TIMEOUT;
 1036              		.loc 1 691 0
 1037 0142 0323     		movs	r3, #3
 1038 0144 6BE0     		b	.L51
 1039              	.L64:
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_N
 1040              		.loc 1 693 0
 1041 0146 FB68     		ldr	r3, [r7, #12]
 1042 0148 9A68     		ldr	r2, [r3, #8]
 1043 014a 8023     		movs	r3, #128
 1044 014c 5B01     		lsls	r3, r3, #5
 1045 014e 9A42     		cmp	r2, r3
 1046 0150 13D1     		bne	.L65
 1047              		.loc 1 693 0 is_stmt 0 discriminator 1
 1048 0152 FB68     		ldr	r3, [r7, #12]
 1049 0154 1B69     		ldr	r3, [r3, #16]
 1050 0156 002B     		cmp	r3, #0
 1051 0158 0FD1     		bne	.L65
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         tmp = (uint16_t*) pTxData;
 1052              		.loc 1 695 0 is_stmt 1
 1053 015a BB68     		ldr	r3, [r7, #8]
 1054 015c 7B61     		str	r3, [r7, #20]
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         husart->Instance->TDR = (*tmp & uhMask);
 1055              		.loc 1 696 0
 1056 015e FB68     		ldr	r3, [r7, #12]
 1057 0160 1B68     		ldr	r3, [r3]
 1058 0162 7A69     		ldr	r2, [r7, #20]
 1059 0164 1288     		ldrh	r2, [r2]
 1060 0166 1221     		movs	r1, #18
 1061 0168 7918     		adds	r1, r7, r1
 1062 016a 0988     		ldrh	r1, [r1]
 1063 016c 0A40     		ands	r2, r1
 1064 016e 92B2     		uxth	r2, r2
 1065 0170 1A85     		strh	r2, [r3, #40]
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         pTxData += 2;
 1066              		.loc 1 697 0
 1067 0172 BB68     		ldr	r3, [r7, #8]
 1068 0174 0233     		adds	r3, r3, #2
 1069 0176 BB60     		str	r3, [r7, #8]
 1070 0178 0DE0     		b	.L66
 1071              	.L65:
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       else
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         husart->Instance->TDR = (*pTxData++ & (uint8_t)uhMask);
 1072              		.loc 1 701 0
 1073 017a FB68     		ldr	r3, [r7, #12]
 1074 017c 1A68     		ldr	r2, [r3]
 1075 017e BB68     		ldr	r3, [r7, #8]
 1076 0180 591C     		adds	r1, r3, #1
 1077 0182 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccVFl28S.s 			page 32


 1078 0184 1B78     		ldrb	r3, [r3]
 1079 0186 1221     		movs	r1, #18
 1080 0188 7918     		adds	r1, r7, r1
 1081 018a 0988     		ldrh	r1, [r1]
 1082 018c C9B2     		uxtb	r1, r1
 1083 018e 0B40     		ands	r3, r1
 1084 0190 DBB2     		uxtb	r3, r3
 1085 0192 9BB2     		uxth	r3, r3
 1086 0194 1385     		strh	r3, [r2, #40]
 1087              	.L66:
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Wait for RXNE Flag */
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1088              		.loc 1 705 0
 1089 0196 3B6A     		ldr	r3, [r7, #32]
 1090 0198 F868     		ldr	r0, [r7, #12]
 1091 019a 0022     		movs	r2, #0
 1092 019c 2021     		movs	r1, #32
 1093 019e FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 1094 01a2 031E     		subs	r3, r0, #0
 1095 01a4 01D0     		beq	.L67
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return HAL_TIMEOUT;
 1096              		.loc 1 707 0
 1097 01a6 0323     		movs	r3, #3
 1098 01a8 39E0     		b	.L51
 1099              	.L67:
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_N
 1100              		.loc 1 710 0
 1101 01aa FB68     		ldr	r3, [r7, #12]
 1102 01ac 9A68     		ldr	r2, [r3, #8]
 1103 01ae 8023     		movs	r3, #128
 1104 01b0 5B01     		lsls	r3, r3, #5
 1105 01b2 9A42     		cmp	r2, r3
 1106 01b4 14D1     		bne	.L68
 1107              		.loc 1 710 0 is_stmt 0 discriminator 1
 1108 01b6 FB68     		ldr	r3, [r7, #12]
 1109 01b8 1B69     		ldr	r3, [r3, #16]
 1110 01ba 002B     		cmp	r3, #0
 1111 01bc 10D1     		bne	.L68
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         tmp = (uint16_t*) pRxData ;
 1112              		.loc 1 712 0 is_stmt 1
 1113 01be 7B68     		ldr	r3, [r7, #4]
 1114 01c0 7B61     		str	r3, [r7, #20]
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         *tmp = (uint16_t)(husart->Instance->RDR & uhMask);
 1115              		.loc 1 713 0
 1116 01c2 FB68     		ldr	r3, [r7, #12]
 1117 01c4 1B68     		ldr	r3, [r3]
 1118 01c6 9B8C     		ldrh	r3, [r3, #36]
 1119 01c8 9BB2     		uxth	r3, r3
 1120 01ca 1222     		movs	r2, #18
 1121 01cc BA18     		adds	r2, r7, r2
 1122 01ce 1288     		ldrh	r2, [r2]
ARM GAS  /tmp/ccVFl28S.s 			page 33


 1123 01d0 1340     		ands	r3, r2
 1124 01d2 9AB2     		uxth	r2, r3
 1125 01d4 7B69     		ldr	r3, [r7, #20]
 1126 01d6 1A80     		strh	r2, [r3]
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         pRxData +=2;
 1127              		.loc 1 714 0
 1128 01d8 7B68     		ldr	r3, [r7, #4]
 1129 01da 0233     		adds	r3, r3, #2
 1130 01dc 7B60     		str	r3, [r7, #4]
 1131 01de 0EE0     		b	.L63
 1132              	.L68:
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       else
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         *pRxData++ = (uint8_t)(husart->Instance->RDR & (uint8_t)uhMask);
 1133              		.loc 1 718 0
 1134 01e0 7B68     		ldr	r3, [r7, #4]
 1135 01e2 5A1C     		adds	r2, r3, #1
 1136 01e4 7A60     		str	r2, [r7, #4]
 1137 01e6 FA68     		ldr	r2, [r7, #12]
 1138 01e8 1268     		ldr	r2, [r2]
 1139 01ea 928C     		ldrh	r2, [r2, #36]
 1140 01ec 92B2     		uxth	r2, r2
 1141 01ee D2B2     		uxtb	r2, r2
 1142 01f0 1221     		movs	r1, #18
 1143 01f2 7918     		adds	r1, r7, r1
 1144 01f4 0988     		ldrh	r1, [r1]
 1145 01f6 C9B2     		uxtb	r1, r1
 1146 01f8 0A40     		ands	r2, r1
 1147 01fa D2B2     		uxtb	r2, r2
 1148 01fc 1A70     		strb	r2, [r3]
 1149              	.L63:
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 1150              		.loc 1 683 0
 1151 01fe FB68     		ldr	r3, [r7, #12]
 1152 0200 5B8D     		ldrh	r3, [r3, #42]
 1153 0202 002B     		cmp	r3, #0
 1154 0204 00D0     		beq	.LCB1030
 1155 0206 88E7     		b	.L69	@long jump
 1156              	.LCB1030:
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 1157              		.loc 1 722 0
 1158 0208 FB68     		ldr	r3, [r7, #12]
 1159 020a 4122     		movs	r2, #65
 1160 020c 0121     		movs	r1, #1
 1161 020e 9954     		strb	r1, [r3, r2]
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Unlocked */
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1162              		.loc 1 725 0
 1163 0210 FB68     		ldr	r3, [r7, #12]
 1164 0212 4022     		movs	r2, #64
 1165 0214 0021     		movs	r1, #0
 1166 0216 9954     		strb	r1, [r3, r2]
ARM GAS  /tmp/ccVFl28S.s 			page 34


 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_OK;
 1167              		.loc 1 727 0
 1168 0218 0023     		movs	r3, #0
 1169 021a 00E0     		b	.L51
 1170              	.L48:
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 1171              		.loc 1 731 0
 1172 021c 0223     		movs	r3, #2
 1173              	.L51:
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 1174              		.loc 1 733 0
 1175 021e 1800     		movs	r0, r3
 1176 0220 BD46     		mov	sp, r7
 1177 0222 06B0     		add	sp, sp, #24
 1178              		@ sp needed
 1179 0224 80BD     		pop	{r7, pc}
 1180              	.L71:
 1181 0226 C046     		.align	2
 1182              	.L70:
 1183 0228 FF010000 		.word	511
 1184              		.cfi_endproc
 1185              	.LFE41:
 1187              		.section	.text.HAL_USART_Transmit_IT,"ax",%progbits
 1188              		.align	1
 1189              		.global	HAL_USART_Transmit_IT
 1190              		.syntax unified
 1191              		.code	16
 1192              		.thumb_func
 1193              		.fpu softvfp
 1195              	HAL_USART_Transmit_IT:
 1196              	.LFB42:
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Send an amount of data in interrupt mode.
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pTxData: pointer to data buffer.
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Size: amount of data to be sent.
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit_IT(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Siz
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 1197              		.loc 1 747 0
 1198              		.cfi_startproc
 1199 0000 80B5     		push	{r7, lr}
 1200              	.LCFI21:
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 7, -8
 1203              		.cfi_offset 14, -4
ARM GAS  /tmp/ccVFl28S.s 			page 35


 1204 0002 84B0     		sub	sp, sp, #16
 1205              	.LCFI22:
 1206              		.cfi_def_cfa_offset 24
 1207 0004 00AF     		add	r7, sp, #0
 1208              	.LCFI23:
 1209              		.cfi_def_cfa_register 7
 1210 0006 F860     		str	r0, [r7, #12]
 1211 0008 B960     		str	r1, [r7, #8]
 1212 000a BB1D     		adds	r3, r7, #6
 1213 000c 1A80     		strh	r2, [r3]
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 1214              		.loc 1 748 0
 1215 000e FB68     		ldr	r3, [r7, #12]
 1216 0010 4122     		movs	r2, #65
 1217 0012 9B5C     		ldrb	r3, [r3, r2]
 1218 0014 DBB2     		uxtb	r3, r3
 1219 0016 012B     		cmp	r3, #1
 1220 0018 43D1     		bne	.L73
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((pTxData == NULL) || (Size == 0))
 1221              		.loc 1 750 0
 1222 001a BB68     		ldr	r3, [r7, #8]
 1223 001c 002B     		cmp	r3, #0
 1224 001e 03D0     		beq	.L74
 1225              		.loc 1 750 0 is_stmt 0 discriminator 1
 1226 0020 BB1D     		adds	r3, r7, #6
 1227 0022 1B88     		ldrh	r3, [r3]
 1228 0024 002B     		cmp	r3, #0
 1229 0026 01D1     		bne	.L75
 1230              	.L74:
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return HAL_ERROR;
 1231              		.loc 1 752 0 is_stmt 1
 1232 0028 0123     		movs	r3, #1
 1233 002a 3BE0     		b	.L76
 1234              	.L75:
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pTxData buffer provided as input paramter 
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        handled through a u16 cast. */
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 1235              		.loc 1 758 0
 1236 002c FB68     		ldr	r3, [r7, #12]
 1237 002e 9A68     		ldr	r2, [r3, #8]
 1238 0030 8023     		movs	r3, #128
 1239 0032 5B01     		lsls	r3, r3, #5
 1240 0034 9A42     		cmp	r2, r3
 1241 0036 09D1     		bne	.L77
 1242              		.loc 1 758 0 is_stmt 0 discriminator 1
 1243 0038 FB68     		ldr	r3, [r7, #12]
 1244 003a 1B69     		ldr	r3, [r3, #16]
 1245 003c 002B     		cmp	r3, #0
 1246 003e 05D1     		bne	.L77
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if((((uint32_t)pTxData)&1) != 0)
 1247              		.loc 1 760 0 is_stmt 1
ARM GAS  /tmp/ccVFl28S.s 			page 36


 1248 0040 BB68     		ldr	r3, [r7, #8]
 1249 0042 0122     		movs	r2, #1
 1250 0044 1340     		ands	r3, r2
 1251 0046 01D0     		beq	.L77
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return  HAL_ERROR;
 1252              		.loc 1 762 0
 1253 0048 0123     		movs	r3, #1
 1254 004a 2BE0     		b	.L76
 1255              	.L77:
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Locked */
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_LOCK(husart);
 1256              		.loc 1 767 0
 1257 004c FB68     		ldr	r3, [r7, #12]
 1258 004e 4022     		movs	r2, #64
 1259 0050 9B5C     		ldrb	r3, [r3, r2]
 1260 0052 012B     		cmp	r3, #1
 1261 0054 01D1     		bne	.L78
 1262              		.loc 1 767 0 is_stmt 0 discriminator 1
 1263 0056 0223     		movs	r3, #2
 1264 0058 24E0     		b	.L76
 1265              	.L78:
 1266              		.loc 1 767 0 discriminator 2
 1267 005a FB68     		ldr	r3, [r7, #12]
 1268 005c 4022     		movs	r2, #64
 1269 005e 0121     		movs	r1, #1
 1270 0060 9954     		strb	r1, [r3, r2]
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 1271              		.loc 1 769 0 is_stmt 1 discriminator 2
 1272 0062 FB68     		ldr	r3, [r7, #12]
 1273 0064 BA68     		ldr	r2, [r7, #8]
 1274 0066 5A62     		str	r2, [r3, #36]
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferSize = Size;
 1275              		.loc 1 770 0 discriminator 2
 1276 0068 FB68     		ldr	r3, [r7, #12]
 1277 006a BA1D     		adds	r2, r7, #6
 1278 006c 1288     		ldrh	r2, [r2]
 1279 006e 1A85     		strh	r2, [r3, #40]
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferCount = Size;
 1280              		.loc 1 771 0 discriminator 2
 1281 0070 FB68     		ldr	r3, [r7, #12]
 1282 0072 BA1D     		adds	r2, r7, #6
 1283 0074 1288     		ldrh	r2, [r2]
 1284 0076 5A85     		strh	r2, [r3, #42]
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 1285              		.loc 1 773 0 discriminator 2
 1286 0078 FB68     		ldr	r3, [r7, #12]
 1287 007a 0022     		movs	r2, #0
 1288 007c 5A64     		str	r2, [r3, #68]
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 1289              		.loc 1 774 0 discriminator 2
 1290 007e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVFl28S.s 			page 37


 1291 0080 4122     		movs	r2, #65
 1292 0082 1221     		movs	r1, #18
 1293 0084 9954     		strb	r1, [r3, r2]
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* The USART Error Interrupts: (Frame error, noise error, overrun error)
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     are not managed by the USART Transmit Process to avoid the overrun interrupt
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     when the usart mode is configured for transmit and receive "USART_MODE_TX_RX"
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     to benefit for the frame error and noise interrupts the usart mode should be
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     configured only for transmit "USART_MODE_TX" */
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Unlocked */
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1294              		.loc 1 783 0 discriminator 2
 1295 0086 FB68     		ldr	r3, [r7, #12]
 1296 0088 4022     		movs	r2, #64
 1297 008a 0021     		movs	r1, #0
 1298 008c 9954     		strb	r1, [r3, r2]
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART Transmit Data Register Empty Interrupt */
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_ENABLE_IT(husart, USART_IT_TXE);
 1299              		.loc 1 786 0 discriminator 2
 1300 008e FB68     		ldr	r3, [r7, #12]
 1301 0090 1B68     		ldr	r3, [r3]
 1302 0092 FA68     		ldr	r2, [r7, #12]
 1303 0094 1268     		ldr	r2, [r2]
 1304 0096 1268     		ldr	r2, [r2]
 1305 0098 8021     		movs	r1, #128
 1306 009a 0A43     		orrs	r2, r1
 1307 009c 1A60     		str	r2, [r3]
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_OK;
 1308              		.loc 1 788 0 discriminator 2
 1309 009e 0023     		movs	r3, #0
 1310 00a0 00E0     		b	.L76
 1311              	.L73:
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 1312              		.loc 1 792 0
 1313 00a2 0223     		movs	r3, #2
 1314              	.L76:
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 1315              		.loc 1 794 0
 1316 00a4 1800     		movs	r0, r3
 1317 00a6 BD46     		mov	sp, r7
 1318 00a8 04B0     		add	sp, sp, #16
 1319              		@ sp needed
 1320 00aa 80BD     		pop	{r7, pc}
 1321              		.cfi_endproc
 1322              	.LFE42:
 1324              		.section	.text.HAL_USART_Receive_IT,"ax",%progbits
 1325              		.align	1
 1326              		.global	HAL_USART_Receive_IT
 1327              		.syntax unified
 1328              		.code	16
ARM GAS  /tmp/ccVFl28S.s 			page 38


 1329              		.thumb_func
 1330              		.fpu softvfp
 1332              	HAL_USART_Receive_IT:
 1333              	.LFB43:
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Receive an amount of data in blocking mode.
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note  To receive synchronous data, dummy data are simultaneously transmitted.
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pRxData: pointer to data buffer.
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Size: amount of data to be received.
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive_IT(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Size
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 1334              		.loc 1 809 0
 1335              		.cfi_startproc
 1336 0000 80B5     		push	{r7, lr}
 1337              	.LCFI24:
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 0002 84B0     		sub	sp, sp, #16
 1342              	.LCFI25:
 1343              		.cfi_def_cfa_offset 24
 1344 0004 00AF     		add	r7, sp, #0
 1345              	.LCFI26:
 1346              		.cfi_def_cfa_register 7
 1347 0006 F860     		str	r0, [r7, #12]
 1348 0008 B960     		str	r1, [r7, #8]
 1349 000a BB1D     		adds	r3, r7, #6
 1350 000c 1A80     		strh	r2, [r3]
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 1351              		.loc 1 810 0
 1352 000e FB68     		ldr	r3, [r7, #12]
 1353 0010 4122     		movs	r2, #65
 1354 0012 9B5C     		ldrb	r3, [r3, r2]
 1355 0014 DBB2     		uxtb	r3, r3
 1356 0016 012B     		cmp	r3, #1
 1357 0018 00D0     		beq	.LCB1210
 1358 001a 96E0     		b	.L80	@long jump
 1359              	.LCB1210:
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((pRxData == NULL) || (Size == 0))
 1360              		.loc 1 812 0
 1361 001c BB68     		ldr	r3, [r7, #8]
 1362 001e 002B     		cmp	r3, #0
 1363 0020 03D0     		beq	.L81
 1364              		.loc 1 812 0 is_stmt 0 discriminator 1
 1365 0022 BB1D     		adds	r3, r7, #6
 1366 0024 1B88     		ldrh	r3, [r3]
 1367 0026 002B     		cmp	r3, #0
 1368 0028 01D1     		bne	.L82
ARM GAS  /tmp/ccVFl28S.s 			page 39


 1369              	.L81:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return HAL_ERROR;
 1370              		.loc 1 814 0 is_stmt 1
 1371 002a 0123     		movs	r3, #1
 1372 002c 8EE0     		b	.L83
 1373              	.L82:
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pRxData buffer provided as input paramter 
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        handled through a u16 cast. */
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 1374              		.loc 1 820 0
 1375 002e FB68     		ldr	r3, [r7, #12]
 1376 0030 9A68     		ldr	r2, [r3, #8]
 1377 0032 8023     		movs	r3, #128
 1378 0034 5B01     		lsls	r3, r3, #5
 1379 0036 9A42     		cmp	r2, r3
 1380 0038 09D1     		bne	.L84
 1381              		.loc 1 820 0 is_stmt 0 discriminator 1
 1382 003a FB68     		ldr	r3, [r7, #12]
 1383 003c 1B69     		ldr	r3, [r3, #16]
 1384 003e 002B     		cmp	r3, #0
 1385 0040 05D1     		bne	.L84
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if((((uint32_t)pRxData)&1) != 0)
 1386              		.loc 1 822 0 is_stmt 1
 1387 0042 BB68     		ldr	r3, [r7, #8]
 1388 0044 0122     		movs	r2, #1
 1389 0046 1340     		ands	r3, r2
 1390 0048 01D0     		beq	.L84
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return  HAL_ERROR;
 1391              		.loc 1 824 0
 1392 004a 0123     		movs	r3, #1
 1393 004c 7EE0     		b	.L83
 1394              	.L84:
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Locked */
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_LOCK(husart);
 1395              		.loc 1 829 0
 1396 004e FB68     		ldr	r3, [r7, #12]
 1397 0050 4022     		movs	r2, #64
 1398 0052 9B5C     		ldrb	r3, [r3, r2]
 1399 0054 012B     		cmp	r3, #1
 1400 0056 01D1     		bne	.L85
 1401              		.loc 1 829 0 is_stmt 0 discriminator 1
 1402 0058 0223     		movs	r3, #2
 1403 005a 77E0     		b	.L83
 1404              	.L85:
 1405              		.loc 1 829 0 discriminator 2
 1406 005c FB68     		ldr	r3, [r7, #12]
 1407 005e 4022     		movs	r2, #64
 1408 0060 0121     		movs	r1, #1
ARM GAS  /tmp/ccVFl28S.s 			page 40


 1409 0062 9954     		strb	r1, [r3, r2]
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
 1410              		.loc 1 831 0 is_stmt 1 discriminator 2
 1411 0064 FB68     		ldr	r3, [r7, #12]
 1412 0066 BA68     		ldr	r2, [r7, #8]
 1413 0068 DA62     		str	r2, [r3, #44]
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->RxXferSize = Size;
 1414              		.loc 1 832 0 discriminator 2
 1415 006a FB68     		ldr	r3, [r7, #12]
 1416 006c BA1D     		adds	r2, r7, #6
 1417 006e 1288     		ldrh	r2, [r2]
 1418 0070 1A86     		strh	r2, [r3, #48]
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->RxXferCount = Size;
 1419              		.loc 1 833 0 discriminator 2
 1420 0072 FB68     		ldr	r3, [r7, #12]
 1421 0074 BA1D     		adds	r2, r7, #6
 1422 0076 1288     		ldrh	r2, [r2]
 1423 0078 5A86     		strh	r2, [r3, #50]
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     USART_MASK_COMPUTATION(husart);
 1424              		.loc 1 835 0 discriminator 2
 1425 007a FB68     		ldr	r3, [r7, #12]
 1426 007c 9A68     		ldr	r2, [r3, #8]
 1427 007e 8023     		movs	r3, #128
 1428 0080 5B01     		lsls	r3, r3, #5
 1429 0082 9A42     		cmp	r2, r3
 1430 0084 0BD1     		bne	.L86
 1431              		.loc 1 835 0 is_stmt 0 discriminator 1
 1432 0086 FB68     		ldr	r3, [r7, #12]
 1433 0088 1B69     		ldr	r3, [r3, #16]
 1434 008a 002B     		cmp	r3, #0
 1435 008c 03D1     		bne	.L87
 1436              		.loc 1 835 0 discriminator 3
 1437 008e FB68     		ldr	r3, [r7, #12]
 1438 0090 304A     		ldr	r2, .L96
 1439 0092 9A86     		strh	r2, [r3, #52]
 1440 0094 24E0     		b	.L89
 1441              	.L87:
 1442              		.loc 1 835 0 discriminator 4
 1443 0096 FB68     		ldr	r3, [r7, #12]
 1444 0098 FF22     		movs	r2, #255
 1445 009a 9A86     		strh	r2, [r3, #52]
 1446 009c 20E0     		b	.L89
 1447              	.L86:
 1448              		.loc 1 835 0 discriminator 2
 1449 009e FB68     		ldr	r3, [r7, #12]
 1450 00a0 9B68     		ldr	r3, [r3, #8]
 1451 00a2 002B     		cmp	r3, #0
 1452 00a4 0BD1     		bne	.L90
 1453              		.loc 1 835 0 discriminator 5
 1454 00a6 FB68     		ldr	r3, [r7, #12]
 1455 00a8 1B69     		ldr	r3, [r3, #16]
 1456 00aa 002B     		cmp	r3, #0
 1457 00ac 03D1     		bne	.L91
 1458              		.loc 1 835 0 discriminator 7
 1459 00ae FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVFl28S.s 			page 41


 1460 00b0 FF22     		movs	r2, #255
 1461 00b2 9A86     		strh	r2, [r3, #52]
 1462 00b4 14E0     		b	.L89
 1463              	.L91:
 1464              		.loc 1 835 0 discriminator 8
 1465 00b6 FB68     		ldr	r3, [r7, #12]
 1466 00b8 7F22     		movs	r2, #127
 1467 00ba 9A86     		strh	r2, [r3, #52]
 1468 00bc 10E0     		b	.L89
 1469              	.L90:
 1470              		.loc 1 835 0 discriminator 6
 1471 00be FB68     		ldr	r3, [r7, #12]
 1472 00c0 9A68     		ldr	r2, [r3, #8]
 1473 00c2 8023     		movs	r3, #128
 1474 00c4 5B05     		lsls	r3, r3, #21
 1475 00c6 9A42     		cmp	r2, r3
 1476 00c8 0AD1     		bne	.L89
 1477              		.loc 1 835 0 discriminator 9
 1478 00ca FB68     		ldr	r3, [r7, #12]
 1479 00cc 1B69     		ldr	r3, [r3, #16]
 1480 00ce 002B     		cmp	r3, #0
 1481 00d0 03D1     		bne	.L93
 1482              		.loc 1 835 0 discriminator 10
 1483 00d2 FB68     		ldr	r3, [r7, #12]
 1484 00d4 7F22     		movs	r2, #127
 1485 00d6 9A86     		strh	r2, [r3, #52]
 1486 00d8 02E0     		b	.L89
 1487              	.L93:
 1488              		.loc 1 835 0 discriminator 11
 1489 00da FB68     		ldr	r3, [r7, #12]
 1490 00dc 3F22     		movs	r2, #63
 1491 00de 9A86     		strh	r2, [r3, #52]
 1492              	.L89:
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 1493              		.loc 1 837 0 is_stmt 1
 1494 00e0 FB68     		ldr	r3, [r7, #12]
 1495 00e2 0022     		movs	r2, #0
 1496 00e4 5A64     		str	r2, [r3, #68]
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 1497              		.loc 1 838 0
 1498 00e6 FB68     		ldr	r3, [r7, #12]
 1499 00e8 4122     		movs	r2, #65
 1500 00ea 2221     		movs	r1, #34
 1501 00ec 9954     		strb	r1, [r3, r2]
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART Parity Error Interrupt */
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_ENABLE_IT(husart, USART_IT_PE);
 1502              		.loc 1 841 0
 1503 00ee FB68     		ldr	r3, [r7, #12]
 1504 00f0 1B68     		ldr	r3, [r3]
 1505 00f2 FA68     		ldr	r2, [r7, #12]
 1506 00f4 1268     		ldr	r2, [r2]
 1507 00f6 1268     		ldr	r2, [r2]
 1508 00f8 8021     		movs	r1, #128
 1509 00fa 4900     		lsls	r1, r1, #1
 1510 00fc 0A43     		orrs	r2, r1
ARM GAS  /tmp/ccVFl28S.s 			page 42


 1511 00fe 1A60     		str	r2, [r3]
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_ENABLE_IT(husart, USART_IT_ERR);
 1512              		.loc 1 844 0
 1513 0100 FB68     		ldr	r3, [r7, #12]
 1514 0102 1B68     		ldr	r3, [r3]
 1515 0104 FA68     		ldr	r2, [r7, #12]
 1516 0106 1268     		ldr	r2, [r2]
 1517 0108 9268     		ldr	r2, [r2, #8]
 1518 010a 0121     		movs	r1, #1
 1519 010c 0A43     		orrs	r2, r1
 1520 010e 9A60     		str	r2, [r3, #8]
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART Data Register not empty Interrupt */
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_ENABLE_IT(husart, USART_IT_RXNE);
 1521              		.loc 1 847 0
 1522 0110 FB68     		ldr	r3, [r7, #12]
 1523 0112 1B68     		ldr	r3, [r3]
 1524 0114 FA68     		ldr	r2, [r7, #12]
 1525 0116 1268     		ldr	r2, [r2]
 1526 0118 1268     		ldr	r2, [r2]
 1527 011a 2021     		movs	r1, #32
 1528 011c 0A43     		orrs	r2, r1
 1529 011e 1A60     		str	r2, [r3]
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Unlocked */
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1530              		.loc 1 850 0
 1531 0120 FB68     		ldr	r3, [r7, #12]
 1532 0122 4022     		movs	r2, #64
 1533 0124 0021     		movs	r1, #0
 1534 0126 9954     		strb	r1, [r3, r2]
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Send dummy byte in order to generate the clock for the Slave to send the next data */
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(husart->Init.WordLength == USART_WORDLENGTH_9B)
 1535              		.loc 1 854 0
 1536 0128 FB68     		ldr	r3, [r7, #12]
 1537 012a 9A68     		ldr	r2, [r3, #8]
 1538 012c 8023     		movs	r3, #128
 1539 012e 5B01     		lsls	r3, r3, #5
 1540 0130 9A42     		cmp	r2, r3
 1541 0132 04D1     		bne	.L94
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x01FF);
 1542              		.loc 1 856 0
 1543 0134 FB68     		ldr	r3, [r7, #12]
 1544 0136 1B68     		ldr	r3, [r3]
 1545 0138 064A     		ldr	r2, .L96
 1546 013a 1A85     		strh	r2, [r3, #40]
 1547 013c 03E0     		b	.L95
 1548              	.L94:
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     else
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x00FF);
ARM GAS  /tmp/ccVFl28S.s 			page 43


 1549              		.loc 1 860 0
 1550 013e FB68     		ldr	r3, [r7, #12]
 1551 0140 1B68     		ldr	r3, [r3]
 1552 0142 FF22     		movs	r2, #255
 1553 0144 1A85     		strh	r2, [r3, #40]
 1554              	.L95:
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_OK;
 1555              		.loc 1 863 0
 1556 0146 0023     		movs	r3, #0
 1557 0148 00E0     		b	.L83
 1558              	.L80:
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 1559              		.loc 1 867 0
 1560 014a 0223     		movs	r3, #2
 1561              	.L83:
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 1562              		.loc 1 869 0
 1563 014c 1800     		movs	r0, r3
 1564 014e BD46     		mov	sp, r7
 1565 0150 04B0     		add	sp, sp, #16
 1566              		@ sp needed
 1567 0152 80BD     		pop	{r7, pc}
 1568              	.L97:
 1569              		.align	2
 1570              	.L96:
 1571 0154 FF010000 		.word	511
 1572              		.cfi_endproc
 1573              	.LFE43:
 1575              		.section	.text.HAL_USART_TransmitReceive_IT,"ax",%progbits
 1576              		.align	1
 1577              		.global	HAL_USART_TransmitReceive_IT
 1578              		.syntax unified
 1579              		.code	16
 1580              		.thumb_func
 1581              		.fpu softvfp
 1583              	HAL_USART_TransmitReceive_IT:
 1584              	.LFB44:
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Full-Duplex Send and Receive an amount of data in interrupt mode.
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pTxData: pointer to TX data buffer.
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pRxData: pointer to RX data buffer.
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Size: amount of data to be sent (same amount to be received).
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         address of user data buffers containing data to be sent/received, should be aligned on 
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         (as sent/received data will be handled using u16 pointer cast). Depending on compilatio
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive_IT(USART_HandleTypeDef *husart, uint8_t *pTxData, uint8
ARM GAS  /tmp/ccVFl28S.s 			page 44


 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 1585              		.loc 1 884 0
 1586              		.cfi_startproc
 1587 0000 80B5     		push	{r7, lr}
 1588              	.LCFI27:
 1589              		.cfi_def_cfa_offset 8
 1590              		.cfi_offset 7, -8
 1591              		.cfi_offset 14, -4
 1592 0002 84B0     		sub	sp, sp, #16
 1593              	.LCFI28:
 1594              		.cfi_def_cfa_offset 24
 1595 0004 00AF     		add	r7, sp, #0
 1596              	.LCFI29:
 1597              		.cfi_def_cfa_register 7
 1598 0006 F860     		str	r0, [r7, #12]
 1599 0008 B960     		str	r1, [r7, #8]
 1600 000a 7A60     		str	r2, [r7, #4]
 1601 000c 1A00     		movs	r2, r3
 1602 000e BB1C     		adds	r3, r7, #2
 1603 0010 1A80     		strh	r2, [r3]
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 1604              		.loc 1 886 0
 1605 0012 FB68     		ldr	r3, [r7, #12]
 1606 0014 4122     		movs	r2, #65
 1607 0016 9B5C     		ldrb	r3, [r3, r2]
 1608 0018 DBB2     		uxtb	r3, r3
 1609 001a 012B     		cmp	r3, #1
 1610 001c 00D0     		beq	.LCB1445
 1611 001e A1E0     		b	.L99	@long jump
 1612              	.LCB1445:
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((pTxData == NULL) || (pRxData == NULL) || (Size == 0))
 1613              		.loc 1 888 0
 1614 0020 BB68     		ldr	r3, [r7, #8]
 1615 0022 002B     		cmp	r3, #0
 1616 0024 06D0     		beq	.L100
 1617              		.loc 1 888 0 is_stmt 0 discriminator 1
 1618 0026 7B68     		ldr	r3, [r7, #4]
 1619 0028 002B     		cmp	r3, #0
 1620 002a 03D0     		beq	.L100
 1621              		.loc 1 888 0 discriminator 2
 1622 002c BB1C     		adds	r3, r7, #2
 1623 002e 1B88     		ldrh	r3, [r3]
 1624 0030 002B     		cmp	r3, #0
 1625 0032 01D1     		bne	.L101
 1626              	.L100:
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return HAL_ERROR;
 1627              		.loc 1 890 0 is_stmt 1
 1628 0034 0123     		movs	r3, #1
 1629 0036 96E0     		b	.L102
 1630              	.L101:
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pTxData and pRxData buffers provided as input paramter 
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR/retrieved from RDR will b
ARM GAS  /tmp/ccVFl28S.s 			page 45


 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        handled through a u16 cast. */
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 1631              		.loc 1 896 0
 1632 0038 FB68     		ldr	r3, [r7, #12]
 1633 003a 9A68     		ldr	r2, [r3, #8]
 1634 003c 8023     		movs	r3, #128
 1635 003e 5B01     		lsls	r3, r3, #5
 1636 0040 9A42     		cmp	r2, r3
 1637 0042 0DD1     		bne	.L103
 1638              		.loc 1 896 0 is_stmt 0 discriminator 1
 1639 0044 FB68     		ldr	r3, [r7, #12]
 1640 0046 1B69     		ldr	r3, [r3, #16]
 1641 0048 002B     		cmp	r3, #0
 1642 004a 09D1     		bne	.L103
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(((((uint32_t)pTxData)&1) != 0) || ((((uint32_t)pRxData)&1) != 0))
 1643              		.loc 1 898 0 is_stmt 1
 1644 004c BB68     		ldr	r3, [r7, #8]
 1645 004e 0122     		movs	r2, #1
 1646 0050 1340     		ands	r3, r2
 1647 0052 03D1     		bne	.L104
 1648              		.loc 1 898 0 is_stmt 0 discriminator 1
 1649 0054 7B68     		ldr	r3, [r7, #4]
 1650 0056 0122     		movs	r2, #1
 1651 0058 1340     		ands	r3, r2
 1652 005a 01D0     		beq	.L103
 1653              	.L104:
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return  HAL_ERROR;
 1654              		.loc 1 900 0 is_stmt 1
 1655 005c 0123     		movs	r3, #1
 1656 005e 82E0     		b	.L102
 1657              	.L103:
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Locked */
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_LOCK(husart);
 1658              		.loc 1 905 0
 1659 0060 FB68     		ldr	r3, [r7, #12]
 1660 0062 4022     		movs	r2, #64
 1661 0064 9B5C     		ldrb	r3, [r3, r2]
 1662 0066 012B     		cmp	r3, #1
 1663 0068 01D1     		bne	.L105
 1664              		.loc 1 905 0 is_stmt 0 discriminator 1
 1665 006a 0223     		movs	r3, #2
 1666 006c 7BE0     		b	.L102
 1667              	.L105:
 1668              		.loc 1 905 0 discriminator 2
 1669 006e FB68     		ldr	r3, [r7, #12]
 1670 0070 4022     		movs	r2, #64
 1671 0072 0121     		movs	r1, #1
 1672 0074 9954     		strb	r1, [r3, r2]
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
 1673              		.loc 1 907 0 is_stmt 1 discriminator 2
 1674 0076 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVFl28S.s 			page 46


 1675 0078 7A68     		ldr	r2, [r7, #4]
 1676 007a DA62     		str	r2, [r3, #44]
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->RxXferSize = Size;
 1677              		.loc 1 908 0 discriminator 2
 1678 007c FB68     		ldr	r3, [r7, #12]
 1679 007e BA1C     		adds	r2, r7, #2
 1680 0080 1288     		ldrh	r2, [r2]
 1681 0082 1A86     		strh	r2, [r3, #48]
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->RxXferCount = Size;
 1682              		.loc 1 909 0 discriminator 2
 1683 0084 FB68     		ldr	r3, [r7, #12]
 1684 0086 BA1C     		adds	r2, r7, #2
 1685 0088 1288     		ldrh	r2, [r2]
 1686 008a 5A86     		strh	r2, [r3, #50]
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 1687              		.loc 1 910 0 discriminator 2
 1688 008c FB68     		ldr	r3, [r7, #12]
 1689 008e BA68     		ldr	r2, [r7, #8]
 1690 0090 5A62     		str	r2, [r3, #36]
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferSize = Size;
 1691              		.loc 1 911 0 discriminator 2
 1692 0092 FB68     		ldr	r3, [r7, #12]
 1693 0094 BA1C     		adds	r2, r7, #2
 1694 0096 1288     		ldrh	r2, [r2]
 1695 0098 1A85     		strh	r2, [r3, #40]
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferCount = Size;
 1696              		.loc 1 912 0 discriminator 2
 1697 009a FB68     		ldr	r3, [r7, #12]
 1698 009c BA1C     		adds	r2, r7, #2
 1699 009e 1288     		ldrh	r2, [r2]
 1700 00a0 5A85     		strh	r2, [r3, #42]
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Computation of USART mask to apply to RDR register */
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     USART_MASK_COMPUTATION(husart);
 1701              		.loc 1 915 0 discriminator 2
 1702 00a2 FB68     		ldr	r3, [r7, #12]
 1703 00a4 9A68     		ldr	r2, [r3, #8]
 1704 00a6 8023     		movs	r3, #128
 1705 00a8 5B01     		lsls	r3, r3, #5
 1706 00aa 9A42     		cmp	r2, r3
 1707 00ac 0BD1     		bne	.L106
 1708              		.loc 1 915 0 is_stmt 0 discriminator 1
 1709 00ae FB68     		ldr	r3, [r7, #12]
 1710 00b0 1B69     		ldr	r3, [r3, #16]
 1711 00b2 002B     		cmp	r3, #0
 1712 00b4 03D1     		bne	.L107
 1713              		.loc 1 915 0 discriminator 3
 1714 00b6 FB68     		ldr	r3, [r7, #12]
 1715 00b8 2D4A     		ldr	r2, .L114
 1716 00ba 9A86     		strh	r2, [r3, #52]
 1717 00bc 24E0     		b	.L109
 1718              	.L107:
 1719              		.loc 1 915 0 discriminator 4
 1720 00be FB68     		ldr	r3, [r7, #12]
 1721 00c0 FF22     		movs	r2, #255
 1722 00c2 9A86     		strh	r2, [r3, #52]
 1723 00c4 20E0     		b	.L109
ARM GAS  /tmp/ccVFl28S.s 			page 47


 1724              	.L106:
 1725              		.loc 1 915 0 discriminator 2
 1726 00c6 FB68     		ldr	r3, [r7, #12]
 1727 00c8 9B68     		ldr	r3, [r3, #8]
 1728 00ca 002B     		cmp	r3, #0
 1729 00cc 0BD1     		bne	.L110
 1730              		.loc 1 915 0 discriminator 5
 1731 00ce FB68     		ldr	r3, [r7, #12]
 1732 00d0 1B69     		ldr	r3, [r3, #16]
 1733 00d2 002B     		cmp	r3, #0
 1734 00d4 03D1     		bne	.L111
 1735              		.loc 1 915 0 discriminator 7
 1736 00d6 FB68     		ldr	r3, [r7, #12]
 1737 00d8 FF22     		movs	r2, #255
 1738 00da 9A86     		strh	r2, [r3, #52]
 1739 00dc 14E0     		b	.L109
 1740              	.L111:
 1741              		.loc 1 915 0 discriminator 8
 1742 00de FB68     		ldr	r3, [r7, #12]
 1743 00e0 7F22     		movs	r2, #127
 1744 00e2 9A86     		strh	r2, [r3, #52]
 1745 00e4 10E0     		b	.L109
 1746              	.L110:
 1747              		.loc 1 915 0 discriminator 6
 1748 00e6 FB68     		ldr	r3, [r7, #12]
 1749 00e8 9A68     		ldr	r2, [r3, #8]
 1750 00ea 8023     		movs	r3, #128
 1751 00ec 5B05     		lsls	r3, r3, #21
 1752 00ee 9A42     		cmp	r2, r3
 1753 00f0 0AD1     		bne	.L109
 1754              		.loc 1 915 0 discriminator 9
 1755 00f2 FB68     		ldr	r3, [r7, #12]
 1756 00f4 1B69     		ldr	r3, [r3, #16]
 1757 00f6 002B     		cmp	r3, #0
 1758 00f8 03D1     		bne	.L113
 1759              		.loc 1 915 0 discriminator 10
 1760 00fa FB68     		ldr	r3, [r7, #12]
 1761 00fc 7F22     		movs	r2, #127
 1762 00fe 9A86     		strh	r2, [r3, #52]
 1763 0100 02E0     		b	.L109
 1764              	.L113:
 1765              		.loc 1 915 0 discriminator 11
 1766 0102 FB68     		ldr	r3, [r7, #12]
 1767 0104 3F22     		movs	r2, #63
 1768 0106 9A86     		strh	r2, [r3, #52]
 1769              	.L109:
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 1770              		.loc 1 917 0 is_stmt 1
 1771 0108 FB68     		ldr	r3, [r7, #12]
 1772 010a 0022     		movs	r2, #0
 1773 010c 5A64     		str	r2, [r3, #68]
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX_RX;
 1774              		.loc 1 918 0
 1775 010e FB68     		ldr	r3, [r7, #12]
 1776 0110 4122     		movs	r2, #65
 1777 0112 3221     		movs	r1, #50
ARM GAS  /tmp/ccVFl28S.s 			page 48


 1778 0114 9954     		strb	r1, [r3, r2]
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART Data Register not empty Interrupt */
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_ENABLE_IT(husart, USART_IT_RXNE);
 1779              		.loc 1 921 0
 1780 0116 FB68     		ldr	r3, [r7, #12]
 1781 0118 1B68     		ldr	r3, [r3]
 1782 011a FA68     		ldr	r2, [r7, #12]
 1783 011c 1268     		ldr	r2, [r2]
 1784 011e 1268     		ldr	r2, [r2]
 1785 0120 2021     		movs	r1, #32
 1786 0122 0A43     		orrs	r2, r1
 1787 0124 1A60     		str	r2, [r3]
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART Parity Error Interrupt */
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_ENABLE_IT(husart, USART_IT_PE);
 1788              		.loc 1 924 0
 1789 0126 FB68     		ldr	r3, [r7, #12]
 1790 0128 1B68     		ldr	r3, [r3]
 1791 012a FA68     		ldr	r2, [r7, #12]
 1792 012c 1268     		ldr	r2, [r2]
 1793 012e 1268     		ldr	r2, [r2]
 1794 0130 8021     		movs	r1, #128
 1795 0132 4900     		lsls	r1, r1, #1
 1796 0134 0A43     		orrs	r2, r1
 1797 0136 1A60     		str	r2, [r3]
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_ENABLE_IT(husart, USART_IT_ERR);
 1798              		.loc 1 927 0
 1799 0138 FB68     		ldr	r3, [r7, #12]
 1800 013a 1B68     		ldr	r3, [r3]
 1801 013c FA68     		ldr	r2, [r7, #12]
 1802 013e 1268     		ldr	r2, [r2]
 1803 0140 9268     		ldr	r2, [r2, #8]
 1804 0142 0121     		movs	r1, #1
 1805 0144 0A43     		orrs	r2, r1
 1806 0146 9A60     		str	r2, [r3, #8]
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Unlocked */
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1807              		.loc 1 930 0
 1808 0148 FB68     		ldr	r3, [r7, #12]
 1809 014a 4022     		movs	r2, #64
 1810 014c 0021     		movs	r1, #0
 1811 014e 9954     		strb	r1, [r3, r2]
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART Transmit Data Register Empty Interrupt */
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_ENABLE_IT(husart, USART_IT_TXE);
 1812              		.loc 1 933 0
 1813 0150 FB68     		ldr	r3, [r7, #12]
 1814 0152 1B68     		ldr	r3, [r3]
 1815 0154 FA68     		ldr	r2, [r7, #12]
 1816 0156 1268     		ldr	r2, [r2]
 1817 0158 1268     		ldr	r2, [r2]
 1818 015a 8021     		movs	r1, #128
 1819 015c 0A43     		orrs	r2, r1
ARM GAS  /tmp/ccVFl28S.s 			page 49


 1820 015e 1A60     		str	r2, [r3]
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_OK;
 1821              		.loc 1 935 0
 1822 0160 0023     		movs	r3, #0
 1823 0162 00E0     		b	.L102
 1824              	.L99:
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 1825              		.loc 1 939 0
 1826 0164 0223     		movs	r3, #2
 1827              	.L102:
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 1828              		.loc 1 942 0
 1829 0166 1800     		movs	r0, r3
 1830 0168 BD46     		mov	sp, r7
 1831 016a 04B0     		add	sp, sp, #16
 1832              		@ sp needed
 1833 016c 80BD     		pop	{r7, pc}
 1834              	.L115:
 1835 016e C046     		.align	2
 1836              	.L114:
 1837 0170 FF010000 		.word	511
 1838              		.cfi_endproc
 1839              	.LFE44:
 1841              		.section	.text.HAL_USART_Transmit_DMA,"ax",%progbits
 1842              		.align	1
 1843              		.global	HAL_USART_Transmit_DMA
 1844              		.syntax unified
 1845              		.code	16
 1846              		.thumb_func
 1847              		.fpu softvfp
 1849              	HAL_USART_Transmit_DMA:
 1850              	.LFB45:
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Send an amount of data in DMA mode.
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pTxData: pointer to data buffer.
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Size: amount of data to be sent.
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit_DMA(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Si
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 1851              		.loc 1 956 0
 1852              		.cfi_startproc
 1853 0000 80B5     		push	{r7, lr}
 1854              	.LCFI30:
 1855              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccVFl28S.s 			page 50


 1856              		.cfi_offset 7, -8
 1857              		.cfi_offset 14, -4
 1858 0002 86B0     		sub	sp, sp, #24
 1859              	.LCFI31:
 1860              		.cfi_def_cfa_offset 32
 1861 0004 00AF     		add	r7, sp, #0
 1862              	.LCFI32:
 1863              		.cfi_def_cfa_register 7
 1864 0006 F860     		str	r0, [r7, #12]
 1865 0008 B960     		str	r1, [r7, #8]
 1866 000a BB1D     		adds	r3, r7, #6
 1867 000c 1A80     		strh	r2, [r3]
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint32_t *tmp=0;
 1868              		.loc 1 957 0
 1869 000e 0023     		movs	r3, #0
 1870 0010 7B61     		str	r3, [r7, #20]
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 1871              		.loc 1 959 0
 1872 0012 FB68     		ldr	r3, [r7, #12]
 1873 0014 4122     		movs	r2, #65
 1874 0016 9B5C     		ldrb	r3, [r3, r2]
 1875 0018 DBB2     		uxtb	r3, r3
 1876 001a 012B     		cmp	r3, #1
 1877 001c 63D1     		bne	.L117
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((pTxData == NULL) || (Size == 0))
 1878              		.loc 1 961 0
 1879 001e BB68     		ldr	r3, [r7, #8]
 1880 0020 002B     		cmp	r3, #0
 1881 0022 03D0     		beq	.L118
 1882              		.loc 1 961 0 is_stmt 0 discriminator 1
 1883 0024 BB1D     		adds	r3, r7, #6
 1884 0026 1B88     		ldrh	r3, [r3]
 1885 0028 002B     		cmp	r3, #0
 1886 002a 01D1     		bne	.L119
 1887              	.L118:
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return HAL_ERROR;
 1888              		.loc 1 963 0 is_stmt 1
 1889 002c 0123     		movs	r3, #1
 1890 002e 5BE0     		b	.L120
 1891              	.L119:
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pTxData buffer provided as input paramter 
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be 
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        handled by DMA from a u16 frontier. */
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 1892              		.loc 1 969 0
 1893 0030 FB68     		ldr	r3, [r7, #12]
 1894 0032 9A68     		ldr	r2, [r3, #8]
 1895 0034 8023     		movs	r3, #128
 1896 0036 5B01     		lsls	r3, r3, #5
 1897 0038 9A42     		cmp	r2, r3
 1898 003a 0AD1     		bne	.L121
 1899              		.loc 1 969 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccVFl28S.s 			page 51


 1900 003c FB68     		ldr	r3, [r7, #12]
 1901 003e 1B69     		ldr	r3, [r3, #16]
 1902 0040 002B     		cmp	r3, #0
 1903 0042 06D1     		bne	.L121
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if((((uint32_t)pTxData)&1) != 0)
 1904              		.loc 1 971 0 is_stmt 1
 1905 0044 BB68     		ldr	r3, [r7, #8]
 1906 0046 1A00     		movs	r2, r3
 1907 0048 0123     		movs	r3, #1
 1908 004a 1340     		ands	r3, r2
 1909 004c 01D0     		beq	.L121
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return  HAL_ERROR;
 1910              		.loc 1 973 0
 1911 004e 0123     		movs	r3, #1
 1912 0050 4AE0     		b	.L120
 1913              	.L121:
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Locked */
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_LOCK(husart);
 1914              		.loc 1 978 0
 1915 0052 FB68     		ldr	r3, [r7, #12]
 1916 0054 4022     		movs	r2, #64
 1917 0056 9B5C     		ldrb	r3, [r3, r2]
 1918 0058 012B     		cmp	r3, #1
 1919 005a 01D1     		bne	.L122
 1920              		.loc 1 978 0 is_stmt 0 discriminator 1
 1921 005c 0223     		movs	r3, #2
 1922 005e 43E0     		b	.L120
 1923              	.L122:
 1924              		.loc 1 978 0 discriminator 2
 1925 0060 FB68     		ldr	r3, [r7, #12]
 1926 0062 4022     		movs	r2, #64
 1927 0064 0121     		movs	r1, #1
 1928 0066 9954     		strb	r1, [r3, r2]
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 1929              		.loc 1 980 0 is_stmt 1 discriminator 2
 1930 0068 BA68     		ldr	r2, [r7, #8]
 1931 006a FB68     		ldr	r3, [r7, #12]
 1932 006c 5A62     		str	r2, [r3, #36]
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferSize = Size;
 1933              		.loc 1 981 0 discriminator 2
 1934 006e FB68     		ldr	r3, [r7, #12]
 1935 0070 BA1D     		adds	r2, r7, #6
 1936 0072 1288     		ldrh	r2, [r2]
 1937 0074 1A85     		strh	r2, [r3, #40]
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferCount = Size;
 1938              		.loc 1 982 0 discriminator 2
 1939 0076 FB68     		ldr	r3, [r7, #12]
 1940 0078 BA1D     		adds	r2, r7, #6
 1941 007a 1288     		ldrh	r2, [r2]
 1942 007c 5A85     		strh	r2, [r3, #42]
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
ARM GAS  /tmp/ccVFl28S.s 			page 52


 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 1943              		.loc 1 984 0 discriminator 2
 1944 007e FB68     		ldr	r3, [r7, #12]
 1945 0080 0022     		movs	r2, #0
 1946 0082 5A64     		str	r2, [r3, #68]
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 1947              		.loc 1 985 0 discriminator 2
 1948 0084 FB68     		ldr	r3, [r7, #12]
 1949 0086 4122     		movs	r2, #65
 1950 0088 1221     		movs	r1, #18
 1951 008a 9954     		strb	r1, [r3, r2]
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART DMA transfer complete callback */
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmatx->XferCpltCallback = USART_DMATransmitCplt;
 1952              		.loc 1 988 0 discriminator 2
 1953 008c FB68     		ldr	r3, [r7, #12]
 1954 008e 9B6B     		ldr	r3, [r3, #56]
 1955 0090 174A     		ldr	r2, .L123
 1956 0092 9A62     		str	r2, [r3, #40]
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmatx->XferHalfCpltCallback = USART_DMATxHalfCplt;
 1957              		.loc 1 991 0 discriminator 2
 1958 0094 FB68     		ldr	r3, [r7, #12]
 1959 0096 9B6B     		ldr	r3, [r3, #56]
 1960 0098 164A     		ldr	r2, .L123+4
 1961 009a DA62     		str	r2, [r3, #44]
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the DMA error callback */
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmatx->XferErrorCallback = USART_DMAError;
 1962              		.loc 1 994 0 discriminator 2
 1963 009c FB68     		ldr	r3, [r7, #12]
 1964 009e 9B6B     		ldr	r3, [r3, #56]
 1965 00a0 154A     		ldr	r2, .L123+8
 1966 00a2 1A63     		str	r2, [r3, #48]
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART transmit DMA channel */
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     tmp = (uint32_t*)&pTxData;
 1967              		.loc 1 997 0 discriminator 2
 1968 00a4 0823     		movs	r3, #8
 1969 00a6 FB18     		adds	r3, r7, r3
 1970 00a8 7B61     		str	r3, [r7, #20]
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t*)tmp, (uint32_t)&husart->Instance->TDR, Size);
 1971              		.loc 1 998 0 discriminator 2
 1972 00aa FB68     		ldr	r3, [r7, #12]
 1973 00ac 986B     		ldr	r0, [r3, #56]
 1974 00ae 7B69     		ldr	r3, [r7, #20]
 1975 00b0 1968     		ldr	r1, [r3]
 1976 00b2 FB68     		ldr	r3, [r7, #12]
 1977 00b4 1B68     		ldr	r3, [r3]
 1978 00b6 2833     		adds	r3, r3, #40
 1979 00b8 1A00     		movs	r2, r3
 1980 00ba BB1D     		adds	r3, r7, #6
 1981 00bc 1B88     		ldrh	r3, [r3]
 1982 00be FFF7FEFF 		bl	HAL_DMA_Start_IT
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Clear the TC flag in the ICR register */
ARM GAS  /tmp/ccVFl28S.s 			page 53


1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_TCF);
 1983              		.loc 1 1001 0 discriminator 2
 1984 00c2 FB68     		ldr	r3, [r7, #12]
 1985 00c4 1B68     		ldr	r3, [r3]
 1986 00c6 4022     		movs	r2, #64
 1987 00c8 1A62     		str	r2, [r3, #32]
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        in the USART CR3 register */
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 |= USART_CR3_DMAT;
 1988              		.loc 1 1005 0 discriminator 2
 1989 00ca FB68     		ldr	r3, [r7, #12]
 1990 00cc 1B68     		ldr	r3, [r3]
 1991 00ce FA68     		ldr	r2, [r7, #12]
 1992 00d0 1268     		ldr	r2, [r2]
 1993 00d2 9268     		ldr	r2, [r2, #8]
 1994 00d4 8021     		movs	r1, #128
 1995 00d6 0A43     		orrs	r2, r1
 1996 00d8 9A60     		str	r2, [r3, #8]
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Unlocked */
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1997              		.loc 1 1008 0 discriminator 2
 1998 00da FB68     		ldr	r3, [r7, #12]
 1999 00dc 4022     		movs	r2, #64
 2000 00de 0021     		movs	r1, #0
 2001 00e0 9954     		strb	r1, [r3, r2]
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_OK;
 2002              		.loc 1 1010 0 discriminator 2
 2003 00e2 0023     		movs	r3, #0
 2004 00e4 00E0     		b	.L120
 2005              	.L117:
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 2006              		.loc 1 1014 0
 2007 00e6 0223     		movs	r3, #2
 2008              	.L120:
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 2009              		.loc 1 1016 0
 2010 00e8 1800     		movs	r0, r3
 2011 00ea BD46     		mov	sp, r7
 2012 00ec 06B0     		add	sp, sp, #24
 2013              		@ sp needed
 2014 00ee 80BD     		pop	{r7, pc}
 2015              	.L124:
 2016              		.align	2
 2017              	.L123:
 2018 00f0 00000000 		.word	USART_DMATransmitCplt
 2019 00f4 00000000 		.word	USART_DMATxHalfCplt
 2020 00f8 00000000 		.word	USART_DMAError
 2021              		.cfi_endproc
 2022              	.LFE45:
 2024              		.section	.text.HAL_USART_Receive_DMA,"ax",%progbits
ARM GAS  /tmp/ccVFl28S.s 			page 54


 2025              		.align	1
 2026              		.global	HAL_USART_Receive_DMA
 2027              		.syntax unified
 2028              		.code	16
 2029              		.thumb_func
 2030              		.fpu softvfp
 2032              	HAL_USART_Receive_DMA:
 2033              	.LFB46:
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Receive an amount of data in DMA mode.
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pRxData: pointer to data buffer.
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Size: amount of data to be received.
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note The USART DMA transmit channel must be configured in order to generate the clock for the 
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive_DMA(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Siz
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 2034              		.loc 1 1031 0
 2035              		.cfi_startproc
 2036 0000 80B5     		push	{r7, lr}
 2037              	.LCFI33:
 2038              		.cfi_def_cfa_offset 8
 2039              		.cfi_offset 7, -8
 2040              		.cfi_offset 14, -4
 2041 0002 86B0     		sub	sp, sp, #24
 2042              	.LCFI34:
 2043              		.cfi_def_cfa_offset 32
 2044 0004 00AF     		add	r7, sp, #0
 2045              	.LCFI35:
 2046              		.cfi_def_cfa_register 7
 2047 0006 F860     		str	r0, [r7, #12]
 2048 0008 B960     		str	r1, [r7, #8]
 2049 000a BB1D     		adds	r3, r7, #6
 2050 000c 1A80     		strh	r2, [r3]
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint32_t *tmp;
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 2051              		.loc 1 1034 0
 2052 000e FB68     		ldr	r3, [r7, #12]
 2053 0010 4122     		movs	r2, #65
 2054 0012 9B5C     		ldrb	r3, [r3, r2]
 2055 0014 DBB2     		uxtb	r3, r3
 2056 0016 012B     		cmp	r3, #1
 2057 0018 00D0     		beq	.LCB1848
 2058 001a 79E0     		b	.L126	@long jump
 2059              	.LCB1848:
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((pRxData == NULL) || (Size == 0))
 2060              		.loc 1 1036 0
 2061 001c BB68     		ldr	r3, [r7, #8]
 2062 001e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccVFl28S.s 			page 55


 2063 0020 03D0     		beq	.L127
 2064              		.loc 1 1036 0 is_stmt 0 discriminator 1
 2065 0022 BB1D     		adds	r3, r7, #6
 2066 0024 1B88     		ldrh	r3, [r3]
 2067 0026 002B     		cmp	r3, #0
 2068 0028 01D1     		bne	.L128
 2069              	.L127:
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return HAL_ERROR;
 2070              		.loc 1 1038 0 is_stmt 1
 2071 002a 0123     		movs	r3, #1
 2072 002c 71E0     		b	.L129
 2073              	.L128:
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pRxData buffer provided as input paramter 
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be 
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        handled by DMA from a u16 frontier. */
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 2074              		.loc 1 1044 0
 2075 002e FB68     		ldr	r3, [r7, #12]
 2076 0030 9A68     		ldr	r2, [r3, #8]
 2077 0032 8023     		movs	r3, #128
 2078 0034 5B01     		lsls	r3, r3, #5
 2079 0036 9A42     		cmp	r2, r3
 2080 0038 0AD1     		bne	.L130
 2081              		.loc 1 1044 0 is_stmt 0 discriminator 1
 2082 003a FB68     		ldr	r3, [r7, #12]
 2083 003c 1B69     		ldr	r3, [r3, #16]
 2084 003e 002B     		cmp	r3, #0
 2085 0040 06D1     		bne	.L130
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if((((uint32_t)pRxData)&1) != 0)
 2086              		.loc 1 1046 0 is_stmt 1
 2087 0042 BB68     		ldr	r3, [r7, #8]
 2088 0044 1A00     		movs	r2, r3
 2089 0046 0123     		movs	r3, #1
 2090 0048 1340     		ands	r3, r2
 2091 004a 01D0     		beq	.L130
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return  HAL_ERROR;
 2092              		.loc 1 1048 0
 2093 004c 0123     		movs	r3, #1
 2094 004e 60E0     		b	.L129
 2095              	.L130:
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Locked */
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_LOCK(husart);
 2096              		.loc 1 1053 0
 2097 0050 FB68     		ldr	r3, [r7, #12]
 2098 0052 4022     		movs	r2, #64
 2099 0054 9B5C     		ldrb	r3, [r3, r2]
 2100 0056 012B     		cmp	r3, #1
 2101 0058 01D1     		bne	.L131
 2102              		.loc 1 1053 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccVFl28S.s 			page 56


 2103 005a 0223     		movs	r3, #2
 2104 005c 59E0     		b	.L129
 2105              	.L131:
 2106              		.loc 1 1053 0 discriminator 2
 2107 005e FB68     		ldr	r3, [r7, #12]
 2108 0060 4022     		movs	r2, #64
 2109 0062 0121     		movs	r1, #1
 2110 0064 9954     		strb	r1, [r3, r2]
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
 2111              		.loc 1 1055 0 is_stmt 1 discriminator 2
 2112 0066 BA68     		ldr	r2, [r7, #8]
 2113 0068 FB68     		ldr	r3, [r7, #12]
 2114 006a DA62     		str	r2, [r3, #44]
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->RxXferSize = Size;
 2115              		.loc 1 1056 0 discriminator 2
 2116 006c FB68     		ldr	r3, [r7, #12]
 2117 006e BA1D     		adds	r2, r7, #6
 2118 0070 1288     		ldrh	r2, [r2]
 2119 0072 1A86     		strh	r2, [r3, #48]
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->pTxBuffPtr = pRxData;
 2120              		.loc 1 1057 0 discriminator 2
 2121 0074 BA68     		ldr	r2, [r7, #8]
 2122 0076 FB68     		ldr	r3, [r7, #12]
 2123 0078 5A62     		str	r2, [r3, #36]
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferSize = Size;
 2124              		.loc 1 1058 0 discriminator 2
 2125 007a FB68     		ldr	r3, [r7, #12]
 2126 007c BA1D     		adds	r2, r7, #6
 2127 007e 1288     		ldrh	r2, [r2]
 2128 0080 1A85     		strh	r2, [r3, #40]
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 2129              		.loc 1 1060 0 discriminator 2
 2130 0082 FB68     		ldr	r3, [r7, #12]
 2131 0084 0022     		movs	r2, #0
 2132 0086 5A64     		str	r2, [r3, #68]
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 2133              		.loc 1 1061 0 discriminator 2
 2134 0088 FB68     		ldr	r3, [r7, #12]
 2135 008a 4122     		movs	r2, #65
 2136 008c 2221     		movs	r1, #34
 2137 008e 9954     		strb	r1, [r3, r2]
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART DMA Rx transfer complete callback */
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmarx->XferCpltCallback = USART_DMAReceiveCplt;
 2138              		.loc 1 1064 0 discriminator 2
 2139 0090 FB68     		ldr	r3, [r7, #12]
 2140 0092 DB6B     		ldr	r3, [r3, #60]
 2141 0094 214A     		ldr	r2, .L132
 2142 0096 9A62     		str	r2, [r3, #40]
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmarx->XferHalfCpltCallback = USART_DMARxHalfCplt;
 2143              		.loc 1 1067 0 discriminator 2
 2144 0098 FB68     		ldr	r3, [r7, #12]
 2145 009a DB6B     		ldr	r3, [r3, #60]
ARM GAS  /tmp/ccVFl28S.s 			page 57


 2146 009c 204A     		ldr	r2, .L132+4
 2147 009e DA62     		str	r2, [r3, #44]
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART DMA Rx transfer error callback */
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmarx->XferErrorCallback = USART_DMAError;
 2148              		.loc 1 1070 0 discriminator 2
 2149 00a0 FB68     		ldr	r3, [r7, #12]
 2150 00a2 DB6B     		ldr	r3, [r3, #60]
 2151 00a4 1F4A     		ldr	r2, .L132+8
 2152 00a6 1A63     		str	r2, [r3, #48]
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART receive DMA channel */
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     tmp = (uint32_t*)&pRxData;
 2153              		.loc 1 1073 0 discriminator 2
 2154 00a8 0823     		movs	r3, #8
 2155 00aa FB18     		adds	r3, r7, r3
 2156 00ac 7B61     		str	r3, [r7, #20]
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmarx, (uint32_t)&husart->Instance->RDR, *(uint32_t*)tmp, Size);
 2157              		.loc 1 1074 0 discriminator 2
 2158 00ae FB68     		ldr	r3, [r7, #12]
 2159 00b0 D86B     		ldr	r0, [r3, #60]
 2160 00b2 FB68     		ldr	r3, [r7, #12]
 2161 00b4 1B68     		ldr	r3, [r3]
 2162 00b6 2433     		adds	r3, r3, #36
 2163 00b8 1900     		movs	r1, r3
 2164 00ba 7B69     		ldr	r3, [r7, #20]
 2165 00bc 1A68     		ldr	r2, [r3]
 2166 00be BB1D     		adds	r3, r7, #6
 2167 00c0 1B88     		ldrh	r3, [r3]
 2168 00c2 FFF7FEFF 		bl	HAL_DMA_Start_IT
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART transmit DMA channel: the transmit channel is used in order
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        to generate in the non-blocking mode the clock to the slave device,
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        this mode isn't a simplex receive mode but a full-duplex receive mode */
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     tmp = (uint32_t*)&pRxData;
 2169              		.loc 1 1079 0 discriminator 2
 2170 00c6 0823     		movs	r3, #8
 2171 00c8 FB18     		adds	r3, r7, r3
 2172 00ca 7B61     		str	r3, [r7, #20]
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t*)tmp, (uint32_t)&husart->Instance->TDR, Size);
 2173              		.loc 1 1080 0 discriminator 2
 2174 00cc FB68     		ldr	r3, [r7, #12]
 2175 00ce 986B     		ldr	r0, [r3, #56]
 2176 00d0 7B69     		ldr	r3, [r7, #20]
 2177 00d2 1968     		ldr	r1, [r3]
 2178 00d4 FB68     		ldr	r3, [r7, #12]
 2179 00d6 1B68     		ldr	r3, [r3]
 2180 00d8 2833     		adds	r3, r3, #40
 2181 00da 1A00     		movs	r2, r3
 2182 00dc BB1D     		adds	r3, r7, #6
 2183 00de 1B88     		ldrh	r3, [r3]
 2184 00e0 FFF7FEFF 		bl	HAL_DMA_Start_IT
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        in the USART CR3 register */
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 |= USART_CR3_DMAR;
 2185              		.loc 1 1084 0 discriminator 2
ARM GAS  /tmp/ccVFl28S.s 			page 58


 2186 00e4 FB68     		ldr	r3, [r7, #12]
 2187 00e6 1B68     		ldr	r3, [r3]
 2188 00e8 FA68     		ldr	r2, [r7, #12]
 2189 00ea 1268     		ldr	r2, [r2]
 2190 00ec 9268     		ldr	r2, [r2, #8]
 2191 00ee 4021     		movs	r1, #64
 2192 00f0 0A43     		orrs	r2, r1
 2193 00f2 9A60     		str	r2, [r3, #8]
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        in the USART CR3 register */
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 |= USART_CR3_DMAT;
 2194              		.loc 1 1088 0 discriminator 2
 2195 00f4 FB68     		ldr	r3, [r7, #12]
 2196 00f6 1B68     		ldr	r3, [r3]
 2197 00f8 FA68     		ldr	r2, [r7, #12]
 2198 00fa 1268     		ldr	r2, [r2]
 2199 00fc 9268     		ldr	r2, [r2, #8]
 2200 00fe 8021     		movs	r1, #128
 2201 0100 0A43     		orrs	r2, r1
 2202 0102 9A60     		str	r2, [r3, #8]
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Unlocked */
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 2203              		.loc 1 1091 0 discriminator 2
 2204 0104 FB68     		ldr	r3, [r7, #12]
 2205 0106 4022     		movs	r2, #64
 2206 0108 0021     		movs	r1, #0
 2207 010a 9954     		strb	r1, [r3, r2]
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_OK;
 2208              		.loc 1 1093 0 discriminator 2
 2209 010c 0023     		movs	r3, #0
 2210 010e 00E0     		b	.L129
 2211              	.L126:
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 2212              		.loc 1 1097 0
 2213 0110 0223     		movs	r3, #2
 2214              	.L129:
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 2215              		.loc 1 1099 0
 2216 0112 1800     		movs	r0, r3
 2217 0114 BD46     		mov	sp, r7
 2218 0116 06B0     		add	sp, sp, #24
 2219              		@ sp needed
 2220 0118 80BD     		pop	{r7, pc}
 2221              	.L133:
 2222 011a C046     		.align	2
 2223              	.L132:
 2224 011c 00000000 		.word	USART_DMAReceiveCplt
 2225 0120 00000000 		.word	USART_DMARxHalfCplt
 2226 0124 00000000 		.word	USART_DMAError
 2227              		.cfi_endproc
ARM GAS  /tmp/ccVFl28S.s 			page 59


 2228              	.LFE46:
 2230              		.section	.text.HAL_USART_TransmitReceive_DMA,"ax",%progbits
 2231              		.align	1
 2232              		.global	HAL_USART_TransmitReceive_DMA
 2233              		.syntax unified
 2234              		.code	16
 2235              		.thumb_func
 2236              		.fpu softvfp
 2238              	HAL_USART_TransmitReceive_DMA:
 2239              	.LFB47:
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Full-Duplex Transmit Receive an amount of data in non-blocking mode.
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pTxData: pointer to TX data buffer.
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param pRxData: pointer to RX data buffer.
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param Size: amount of data to be received/sent.
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         address of user data buffers containing data to be sent/received, should be aligned on 
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         (as sent/received data will be handled by DMA from halfword frontier). Depending on com
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive_DMA(USART_HandleTypeDef *husart, uint8_t *pTxData, uint
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 2240              		.loc 1 1114 0
 2241              		.cfi_startproc
 2242 0000 80B5     		push	{r7, lr}
 2243              	.LCFI36:
 2244              		.cfi_def_cfa_offset 8
 2245              		.cfi_offset 7, -8
 2246              		.cfi_offset 14, -4
 2247 0002 86B0     		sub	sp, sp, #24
 2248              	.LCFI37:
 2249              		.cfi_def_cfa_offset 32
 2250 0004 00AF     		add	r7, sp, #0
 2251              	.LCFI38:
 2252              		.cfi_def_cfa_register 7
 2253 0006 F860     		str	r0, [r7, #12]
 2254 0008 B960     		str	r1, [r7, #8]
 2255 000a 7A60     		str	r2, [r7, #4]
 2256 000c 1A00     		movs	r2, r3
 2257 000e BB1C     		adds	r3, r7, #2
 2258 0010 1A80     		strh	r2, [r3]
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint32_t *tmp;
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_READY)
 2259              		.loc 1 1117 0
 2260 0012 FB68     		ldr	r3, [r7, #12]
 2261 0014 4122     		movs	r2, #65
 2262 0016 9B5C     		ldrb	r3, [r3, r2]
 2263 0018 DBB2     		uxtb	r3, r3
 2264 001a 012B     		cmp	r3, #1
 2265 001c 00D0     		beq	.LCB2031
 2266 001e 90E0     		b	.L135	@long jump
 2267              	.LCB2031:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
ARM GAS  /tmp/ccVFl28S.s 			page 60


1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((pTxData == NULL) || (pRxData == NULL) || (Size == 0))
 2268              		.loc 1 1119 0
 2269 0020 BB68     		ldr	r3, [r7, #8]
 2270 0022 002B     		cmp	r3, #0
 2271 0024 06D0     		beq	.L136
 2272              		.loc 1 1119 0 is_stmt 0 discriminator 1
 2273 0026 7B68     		ldr	r3, [r7, #4]
 2274 0028 002B     		cmp	r3, #0
 2275 002a 03D0     		beq	.L136
 2276              		.loc 1 1119 0 discriminator 2
 2277 002c BB1C     		adds	r3, r7, #2
 2278 002e 1B88     		ldrh	r3, [r3]
 2279 0030 002B     		cmp	r3, #0
 2280 0032 01D1     		bne	.L137
 2281              	.L136:
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return HAL_ERROR;
 2282              		.loc 1 1121 0 is_stmt 1
 2283 0034 0123     		movs	r3, #1
 2284 0036 85E0     		b	.L138
 2285              	.L137:
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pTxData and pRxData buffers provided as input paramter 
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        should be aligned on a u16 frontier, as data copy to/from TDR/RDR will be 
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        handled by DMA from a u16 frontier. */
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 2286              		.loc 1 1127 0
 2287 0038 FB68     		ldr	r3, [r7, #12]
 2288 003a 9A68     		ldr	r2, [r3, #8]
 2289 003c 8023     		movs	r3, #128
 2290 003e 5B01     		lsls	r3, r3, #5
 2291 0040 9A42     		cmp	r2, r3
 2292 0042 0FD1     		bne	.L139
 2293              		.loc 1 1127 0 is_stmt 0 discriminator 1
 2294 0044 FB68     		ldr	r3, [r7, #12]
 2295 0046 1B69     		ldr	r3, [r3, #16]
 2296 0048 002B     		cmp	r3, #0
 2297 004a 0BD1     		bne	.L139
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(((((uint32_t)pTxData)&1) != 0) || ((((uint32_t)pRxData)&1) != 0))
 2298              		.loc 1 1129 0 is_stmt 1
 2299 004c BB68     		ldr	r3, [r7, #8]
 2300 004e 1A00     		movs	r2, r3
 2301 0050 0123     		movs	r3, #1
 2302 0052 1340     		ands	r3, r2
 2303 0054 04D1     		bne	.L140
 2304              		.loc 1 1129 0 is_stmt 0 discriminator 1
 2305 0056 7B68     		ldr	r3, [r7, #4]
 2306 0058 1A00     		movs	r2, r3
 2307 005a 0123     		movs	r3, #1
 2308 005c 1340     		ands	r3, r2
 2309 005e 01D0     		beq	.L139
 2310              	.L140:
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return  HAL_ERROR;
 2311              		.loc 1 1131 0 is_stmt 1
ARM GAS  /tmp/ccVFl28S.s 			page 61


 2312 0060 0123     		movs	r3, #1
 2313 0062 6FE0     		b	.L138
 2314              	.L139:
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Locked */
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_LOCK(husart);
 2315              		.loc 1 1136 0
 2316 0064 FB68     		ldr	r3, [r7, #12]
 2317 0066 4022     		movs	r2, #64
 2318 0068 9B5C     		ldrb	r3, [r3, r2]
 2319 006a 012B     		cmp	r3, #1
 2320 006c 01D1     		bne	.L141
 2321              		.loc 1 1136 0 is_stmt 0 discriminator 1
 2322 006e 0223     		movs	r3, #2
 2323 0070 68E0     		b	.L138
 2324              	.L141:
 2325              		.loc 1 1136 0 discriminator 2
 2326 0072 FB68     		ldr	r3, [r7, #12]
 2327 0074 4022     		movs	r2, #64
 2328 0076 0121     		movs	r1, #1
 2329 0078 9954     		strb	r1, [r3, r2]
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
 2330              		.loc 1 1138 0 is_stmt 1 discriminator 2
 2331 007a 7A68     		ldr	r2, [r7, #4]
 2332 007c FB68     		ldr	r3, [r7, #12]
 2333 007e DA62     		str	r2, [r3, #44]
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->RxXferSize = Size;
 2334              		.loc 1 1139 0 discriminator 2
 2335 0080 FB68     		ldr	r3, [r7, #12]
 2336 0082 BA1C     		adds	r2, r7, #2
 2337 0084 1288     		ldrh	r2, [r2]
 2338 0086 1A86     		strh	r2, [r3, #48]
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 2339              		.loc 1 1140 0 discriminator 2
 2340 0088 BA68     		ldr	r2, [r7, #8]
 2341 008a FB68     		ldr	r3, [r7, #12]
 2342 008c 5A62     		str	r2, [r3, #36]
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferSize = Size;
 2343              		.loc 1 1141 0 discriminator 2
 2344 008e FB68     		ldr	r3, [r7, #12]
 2345 0090 BA1C     		adds	r2, r7, #2
 2346 0092 1288     		ldrh	r2, [r2]
 2347 0094 1A85     		strh	r2, [r3, #40]
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 2348              		.loc 1 1143 0 discriminator 2
 2349 0096 FB68     		ldr	r3, [r7, #12]
 2350 0098 0022     		movs	r2, #0
 2351 009a 5A64     		str	r2, [r3, #68]
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX_RX;
 2352              		.loc 1 1144 0 discriminator 2
 2353 009c FB68     		ldr	r3, [r7, #12]
 2354 009e 4122     		movs	r2, #65
 2355 00a0 3221     		movs	r1, #50
ARM GAS  /tmp/ccVFl28S.s 			page 62


 2356 00a2 9954     		strb	r1, [r3, r2]
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART DMA Rx transfer complete callback */
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmarx->XferCpltCallback = USART_DMAReceiveCplt;
 2357              		.loc 1 1147 0 discriminator 2
 2358 00a4 FB68     		ldr	r3, [r7, #12]
 2359 00a6 DB6B     		ldr	r3, [r3, #60]
 2360 00a8 284A     		ldr	r2, .L142
 2361 00aa 9A62     		str	r2, [r3, #40]
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmarx->XferHalfCpltCallback = USART_DMARxHalfCplt;
 2362              		.loc 1 1150 0 discriminator 2
 2363 00ac FB68     		ldr	r3, [r7, #12]
 2364 00ae DB6B     		ldr	r3, [r3, #60]
 2365 00b0 274A     		ldr	r2, .L142+4
 2366 00b2 DA62     		str	r2, [r3, #44]
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART DMA Tx transfer complete callback */
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmatx->XferCpltCallback = USART_DMATransmitCplt;
 2367              		.loc 1 1153 0 discriminator 2
 2368 00b4 FB68     		ldr	r3, [r7, #12]
 2369 00b6 9B6B     		ldr	r3, [r3, #56]
 2370 00b8 264A     		ldr	r2, .L142+8
 2371 00ba 9A62     		str	r2, [r3, #40]
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART DMA Half transfer complete callback */
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmatx->XferHalfCpltCallback = USART_DMATxHalfCplt;
 2372              		.loc 1 1156 0 discriminator 2
 2373 00bc FB68     		ldr	r3, [r7, #12]
 2374 00be 9B6B     		ldr	r3, [r3, #56]
 2375 00c0 254A     		ldr	r2, .L142+12
 2376 00c2 DA62     		str	r2, [r3, #44]
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART DMA Tx transfer error callback */
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmatx->XferErrorCallback = USART_DMAError;
 2377              		.loc 1 1159 0 discriminator 2
 2378 00c4 FB68     		ldr	r3, [r7, #12]
 2379 00c6 9B6B     		ldr	r3, [r3, #56]
 2380 00c8 244A     		ldr	r2, .L142+16
 2381 00ca 1A63     		str	r2, [r3, #48]
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART DMA Rx transfer error callback */
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->hdmarx->XferErrorCallback = USART_DMAError;
 2382              		.loc 1 1162 0 discriminator 2
 2383 00cc FB68     		ldr	r3, [r7, #12]
 2384 00ce DB6B     		ldr	r3, [r3, #60]
 2385 00d0 224A     		ldr	r2, .L142+16
 2386 00d2 1A63     		str	r2, [r3, #48]
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART receive DMA channel */
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     tmp = (uint32_t*)&pRxData;
 2387              		.loc 1 1165 0 discriminator 2
 2388 00d4 3B1D     		adds	r3, r7, #4
 2389 00d6 7B61     		str	r3, [r7, #20]
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmarx, (uint32_t)&husart->Instance->RDR, *(uint32_t*)tmp, Size);
 2390              		.loc 1 1166 0 discriminator 2
ARM GAS  /tmp/ccVFl28S.s 			page 63


 2391 00d8 FB68     		ldr	r3, [r7, #12]
 2392 00da D86B     		ldr	r0, [r3, #60]
 2393 00dc FB68     		ldr	r3, [r7, #12]
 2394 00de 1B68     		ldr	r3, [r3]
 2395 00e0 2433     		adds	r3, r3, #36
 2396 00e2 1900     		movs	r1, r3
 2397 00e4 7B69     		ldr	r3, [r7, #20]
 2398 00e6 1A68     		ldr	r2, [r3]
 2399 00e8 BB1C     		adds	r3, r7, #2
 2400 00ea 1B88     		ldrh	r3, [r3]
 2401 00ec FFF7FEFF 		bl	HAL_DMA_Start_IT
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART transmit DMA channel */
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     tmp = (uint32_t*)&pTxData;
 2402              		.loc 1 1169 0 discriminator 2
 2403 00f0 0823     		movs	r3, #8
 2404 00f2 FB18     		adds	r3, r7, r3
 2405 00f4 7B61     		str	r3, [r7, #20]
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t*)tmp, (uint32_t)&husart->Instance->TDR, Size);
 2406              		.loc 1 1170 0 discriminator 2
 2407 00f6 FB68     		ldr	r3, [r7, #12]
 2408 00f8 986B     		ldr	r0, [r3, #56]
 2409 00fa 7B69     		ldr	r3, [r7, #20]
 2410 00fc 1968     		ldr	r1, [r3]
 2411 00fe FB68     		ldr	r3, [r7, #12]
 2412 0100 1B68     		ldr	r3, [r3]
 2413 0102 2833     		adds	r3, r3, #40
 2414 0104 1A00     		movs	r2, r3
 2415 0106 BB1C     		adds	r3, r7, #2
 2416 0108 1B88     		ldrh	r3, [r3]
 2417 010a FFF7FEFF 		bl	HAL_DMA_Start_IT
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Clear the TC flag in the ICR register */
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_TCF);
 2418              		.loc 1 1173 0 discriminator 2
 2419 010e FB68     		ldr	r3, [r7, #12]
 2420 0110 1B68     		ldr	r3, [r3]
 2421 0112 4022     		movs	r2, #64
 2422 0114 1A62     		str	r2, [r3, #32]
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        in the USART CR3 register */
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 |= USART_CR3_DMAR;
 2423              		.loc 1 1177 0 discriminator 2
 2424 0116 FB68     		ldr	r3, [r7, #12]
 2425 0118 1B68     		ldr	r3, [r3]
 2426 011a FA68     		ldr	r2, [r7, #12]
 2427 011c 1268     		ldr	r2, [r2]
 2428 011e 9268     		ldr	r2, [r2, #8]
 2429 0120 4021     		movs	r1, #64
 2430 0122 0A43     		orrs	r2, r1
 2431 0124 9A60     		str	r2, [r3, #8]
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        in the USART CR3 register */
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 |= USART_CR3_DMAT;
 2432              		.loc 1 1181 0 discriminator 2
ARM GAS  /tmp/ccVFl28S.s 			page 64


 2433 0126 FB68     		ldr	r3, [r7, #12]
 2434 0128 1B68     		ldr	r3, [r3]
 2435 012a FA68     		ldr	r2, [r7, #12]
 2436 012c 1268     		ldr	r2, [r2]
 2437 012e 9268     		ldr	r2, [r2, #8]
 2438 0130 8021     		movs	r1, #128
 2439 0132 0A43     		orrs	r2, r1
 2440 0134 9A60     		str	r2, [r3, #8]
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Process Unlocked */
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 2441              		.loc 1 1184 0 discriminator 2
 2442 0136 FB68     		ldr	r3, [r7, #12]
 2443 0138 4022     		movs	r2, #64
 2444 013a 0021     		movs	r1, #0
 2445 013c 9954     		strb	r1, [r3, r2]
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_OK;
 2446              		.loc 1 1186 0 discriminator 2
 2447 013e 0023     		movs	r3, #0
 2448 0140 00E0     		b	.L138
 2449              	.L135:
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 2450              		.loc 1 1190 0
 2451 0142 0223     		movs	r3, #2
 2452              	.L138:
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 2453              		.loc 1 1192 0
 2454 0144 1800     		movs	r0, r3
 2455 0146 BD46     		mov	sp, r7
 2456 0148 06B0     		add	sp, sp, #24
 2457              		@ sp needed
 2458 014a 80BD     		pop	{r7, pc}
 2459              	.L143:
 2460              		.align	2
 2461              	.L142:
 2462 014c 00000000 		.word	USART_DMAReceiveCplt
 2463 0150 00000000 		.word	USART_DMARxHalfCplt
 2464 0154 00000000 		.word	USART_DMATransmitCplt
 2465 0158 00000000 		.word	USART_DMATxHalfCplt
 2466 015c 00000000 		.word	USART_DMAError
 2467              		.cfi_endproc
 2468              	.LFE47:
 2470              		.section	.text.HAL_USART_DMAPause,"ax",%progbits
 2471              		.align	1
 2472              		.global	HAL_USART_DMAPause
 2473              		.syntax unified
 2474              		.code	16
 2475              		.thumb_func
 2476              		.fpu softvfp
 2478              	HAL_USART_DMAPause:
 2479              	.LFB48:
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
ARM GAS  /tmp/ccVFl28S.s 			page 65


1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Pause the DMA Transfer.
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAPause(USART_HandleTypeDef *husart)
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 2480              		.loc 1 1200 0
 2481              		.cfi_startproc
 2482 0000 80B5     		push	{r7, lr}
 2483              	.LCFI39:
 2484              		.cfi_def_cfa_offset 8
 2485              		.cfi_offset 7, -8
 2486              		.cfi_offset 14, -4
 2487 0002 82B0     		sub	sp, sp, #8
 2488              	.LCFI40:
 2489              		.cfi_def_cfa_offset 16
 2490 0004 00AF     		add	r7, sp, #0
 2491              	.LCFI41:
 2492              		.cfi_def_cfa_register 7
 2493 0006 7860     		str	r0, [r7, #4]
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Process Locked */
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   __HAL_LOCK(husart);
 2494              		.loc 1 1202 0
 2495 0008 7B68     		ldr	r3, [r7, #4]
 2496 000a 4022     		movs	r2, #64
 2497 000c 9B5C     		ldrb	r3, [r3, r2]
 2498 000e 012B     		cmp	r3, #1
 2499 0010 01D1     		bne	.L145
 2500              		.loc 1 1202 0 is_stmt 0 discriminator 1
 2501 0012 0223     		movs	r3, #2
 2502 0014 3CE0     		b	.L146
 2503              	.L145:
 2504              		.loc 1 1202 0 discriminator 2
 2505 0016 7B68     		ldr	r3, [r7, #4]
 2506 0018 4022     		movs	r2, #64
 2507 001a 0121     		movs	r1, #1
 2508 001c 9954     		strb	r1, [r3, r2]
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_BUSY_TX)
 2509              		.loc 1 1204 0 is_stmt 1 discriminator 2
 2510 001e 7B68     		ldr	r3, [r7, #4]
 2511 0020 4122     		movs	r2, #65
 2512 0022 9B5C     		ldrb	r3, [r3, r2]
 2513 0024 DBB2     		uxtb	r3, r3
 2514 0026 122B     		cmp	r3, #18
 2515 0028 08D1     		bne	.L147
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Disable the USART DMA Tx request */
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAT);
 2516              		.loc 1 1207 0
 2517 002a 7B68     		ldr	r3, [r7, #4]
 2518 002c 1B68     		ldr	r3, [r3]
 2519 002e 7A68     		ldr	r2, [r7, #4]
 2520 0030 1268     		ldr	r2, [r2]
 2521 0032 9268     		ldr	r2, [r2, #8]
 2522 0034 8021     		movs	r1, #128
ARM GAS  /tmp/ccVFl28S.s 			page 66


 2523 0036 8A43     		bics	r2, r1
 2524 0038 9A60     		str	r2, [r3, #8]
 2525 003a 24E0     		b	.L148
 2526              	.L147:
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else if(husart->State == HAL_USART_STATE_BUSY_RX)
 2527              		.loc 1 1209 0
 2528 003c 7B68     		ldr	r3, [r7, #4]
 2529 003e 4122     		movs	r2, #65
 2530 0040 9B5C     		ldrb	r3, [r3, r2]
 2531 0042 DBB2     		uxtb	r3, r3
 2532 0044 222B     		cmp	r3, #34
 2533 0046 08D1     		bne	.L149
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Disable the USART DMA Rx request */
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAR);
 2534              		.loc 1 1212 0
 2535 0048 7B68     		ldr	r3, [r7, #4]
 2536 004a 1B68     		ldr	r3, [r3]
 2537 004c 7A68     		ldr	r2, [r7, #4]
 2538 004e 1268     		ldr	r2, [r2]
 2539 0050 9268     		ldr	r2, [r2, #8]
 2540 0052 4021     		movs	r1, #64
 2541 0054 8A43     		bics	r2, r1
 2542 0056 9A60     		str	r2, [r3, #8]
 2543 0058 15E0     		b	.L148
 2544              	.L149:
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else if(husart->State == HAL_USART_STATE_BUSY_TX_RX)
 2545              		.loc 1 1214 0
 2546 005a 7B68     		ldr	r3, [r7, #4]
 2547 005c 4122     		movs	r2, #65
 2548 005e 9B5C     		ldrb	r3, [r3, r2]
 2549 0060 DBB2     		uxtb	r3, r3
 2550 0062 322B     		cmp	r3, #50
 2551 0064 0FD1     		bne	.L148
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Disable the USART DMA Tx request */
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAT);
 2552              		.loc 1 1217 0
 2553 0066 7B68     		ldr	r3, [r7, #4]
 2554 0068 1B68     		ldr	r3, [r3]
 2555 006a 7A68     		ldr	r2, [r7, #4]
 2556 006c 1268     		ldr	r2, [r2]
 2557 006e 9268     		ldr	r2, [r2, #8]
 2558 0070 8021     		movs	r1, #128
 2559 0072 8A43     		bics	r2, r1
 2560 0074 9A60     		str	r2, [r3, #8]
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Disable the USART DMA Rx request */
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAR);
 2561              		.loc 1 1219 0
 2562 0076 7B68     		ldr	r3, [r7, #4]
 2563 0078 1B68     		ldr	r3, [r3]
 2564 007a 7A68     		ldr	r2, [r7, #4]
 2565 007c 1268     		ldr	r2, [r2]
 2566 007e 9268     		ldr	r2, [r2, #8]
 2567 0080 4021     		movs	r1, #64
ARM GAS  /tmp/ccVFl28S.s 			page 67


 2568 0082 8A43     		bics	r2, r1
 2569 0084 9A60     		str	r2, [r3, #8]
 2570              	.L148:
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Process Unlocked */
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 2571              		.loc 1 1223 0
 2572 0086 7B68     		ldr	r3, [r7, #4]
 2573 0088 4022     		movs	r2, #64
 2574 008a 0021     		movs	r1, #0
 2575 008c 9954     		strb	r1, [r3, r2]
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   return HAL_OK;
 2576              		.loc 1 1225 0
 2577 008e 0023     		movs	r3, #0
 2578              	.L146:
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 2579              		.loc 1 1226 0
 2580 0090 1800     		movs	r0, r3
 2581 0092 BD46     		mov	sp, r7
 2582 0094 02B0     		add	sp, sp, #8
 2583              		@ sp needed
 2584 0096 80BD     		pop	{r7, pc}
 2585              		.cfi_endproc
 2586              	.LFE48:
 2588              		.section	.text.HAL_USART_DMAResume,"ax",%progbits
 2589              		.align	1
 2590              		.global	HAL_USART_DMAResume
 2591              		.syntax unified
 2592              		.code	16
 2593              		.thumb_func
 2594              		.fpu softvfp
 2596              	HAL_USART_DMAResume:
 2597              	.LFB49:
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Resume the DMA Transfer.
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAResume(USART_HandleTypeDef *husart)
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 2598              		.loc 1 1234 0
 2599              		.cfi_startproc
 2600 0000 80B5     		push	{r7, lr}
 2601              	.LCFI42:
 2602              		.cfi_def_cfa_offset 8
 2603              		.cfi_offset 7, -8
 2604              		.cfi_offset 14, -4
 2605 0002 82B0     		sub	sp, sp, #8
 2606              	.LCFI43:
 2607              		.cfi_def_cfa_offset 16
 2608 0004 00AF     		add	r7, sp, #0
 2609              	.LCFI44:
 2610              		.cfi_def_cfa_register 7
 2611 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccVFl28S.s 			page 68


1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Process Locked */
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   __HAL_LOCK(husart);
 2612              		.loc 1 1236 0
 2613 0008 7B68     		ldr	r3, [r7, #4]
 2614 000a 4022     		movs	r2, #64
 2615 000c 9B5C     		ldrb	r3, [r3, r2]
 2616 000e 012B     		cmp	r3, #1
 2617 0010 01D1     		bne	.L151
 2618              		.loc 1 1236 0 is_stmt 0 discriminator 1
 2619 0012 0223     		movs	r3, #2
 2620 0014 44E0     		b	.L152
 2621              	.L151:
 2622              		.loc 1 1236 0 discriminator 2
 2623 0016 7B68     		ldr	r3, [r7, #4]
 2624 0018 4022     		movs	r2, #64
 2625 001a 0121     		movs	r1, #1
 2626 001c 9954     		strb	r1, [r3, r2]
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_BUSY_TX)
 2627              		.loc 1 1238 0 is_stmt 1 discriminator 2
 2628 001e 7B68     		ldr	r3, [r7, #4]
 2629 0020 4122     		movs	r2, #65
 2630 0022 9B5C     		ldrb	r3, [r3, r2]
 2631 0024 DBB2     		uxtb	r3, r3
 2632 0026 122B     		cmp	r3, #18
 2633 0028 08D1     		bne	.L153
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART DMA Tx request */
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 |= USART_CR3_DMAT;
 2634              		.loc 1 1241 0
 2635 002a 7B68     		ldr	r3, [r7, #4]
 2636 002c 1B68     		ldr	r3, [r3]
 2637 002e 7A68     		ldr	r2, [r7, #4]
 2638 0030 1268     		ldr	r2, [r2]
 2639 0032 9268     		ldr	r2, [r2, #8]
 2640 0034 8021     		movs	r1, #128
 2641 0036 0A43     		orrs	r2, r1
 2642 0038 9A60     		str	r2, [r3, #8]
 2643 003a 2CE0     		b	.L154
 2644              	.L153:
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else if(husart->State == HAL_USART_STATE_BUSY_RX)
 2645              		.loc 1 1243 0
 2646 003c 7B68     		ldr	r3, [r7, #4]
 2647 003e 4122     		movs	r2, #65
 2648 0040 9B5C     		ldrb	r3, [r3, r2]
 2649 0042 DBB2     		uxtb	r3, r3
 2650 0044 222B     		cmp	r3, #34
 2651 0046 0CD1     		bne	.L155
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Clear the Overrun flag before resumming the Rx transfer*/
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_OREF);
 2652              		.loc 1 1246 0
 2653 0048 7B68     		ldr	r3, [r7, #4]
 2654 004a 1B68     		ldr	r3, [r3]
 2655 004c 0822     		movs	r2, #8
 2656 004e 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccVFl28S.s 			page 69


1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART DMA Rx request */
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 |= USART_CR3_DMAR;
 2657              		.loc 1 1249 0
 2658 0050 7B68     		ldr	r3, [r7, #4]
 2659 0052 1B68     		ldr	r3, [r3]
 2660 0054 7A68     		ldr	r2, [r7, #4]
 2661 0056 1268     		ldr	r2, [r2]
 2662 0058 9268     		ldr	r2, [r2, #8]
 2663 005a 4021     		movs	r1, #64
 2664 005c 0A43     		orrs	r2, r1
 2665 005e 9A60     		str	r2, [r3, #8]
 2666 0060 19E0     		b	.L154
 2667              	.L155:
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else if(husart->State == HAL_USART_STATE_BUSY_TX_RX)
 2668              		.loc 1 1251 0
 2669 0062 7B68     		ldr	r3, [r7, #4]
 2670 0064 4122     		movs	r2, #65
 2671 0066 9B5C     		ldrb	r3, [r3, r2]
 2672 0068 DBB2     		uxtb	r3, r3
 2673 006a 322B     		cmp	r3, #50
 2674 006c 13D1     		bne	.L154
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Clear the Overrun flag before resumming the Rx transfer*/
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_OREF);
 2675              		.loc 1 1254 0
 2676 006e 7B68     		ldr	r3, [r7, #4]
 2677 0070 1B68     		ldr	r3, [r3]
 2678 0072 0822     		movs	r2, #8
 2679 0074 1A62     		str	r2, [r3, #32]
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART DMA Rx request  before the DMA Tx request */
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 |= USART_CR3_DMAR;
 2680              		.loc 1 1257 0
 2681 0076 7B68     		ldr	r3, [r7, #4]
 2682 0078 1B68     		ldr	r3, [r3]
 2683 007a 7A68     		ldr	r2, [r7, #4]
 2684 007c 1268     		ldr	r2, [r2]
 2685 007e 9268     		ldr	r2, [r2, #8]
 2686 0080 4021     		movs	r1, #64
 2687 0082 0A43     		orrs	r2, r1
 2688 0084 9A60     		str	r2, [r3, #8]
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Enable the USART DMA Tx request */
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 |= USART_CR3_DMAT;
 2689              		.loc 1 1260 0
 2690 0086 7B68     		ldr	r3, [r7, #4]
 2691 0088 1B68     		ldr	r3, [r3]
 2692 008a 7A68     		ldr	r2, [r7, #4]
 2693 008c 1268     		ldr	r2, [r2]
 2694 008e 9268     		ldr	r2, [r2, #8]
 2695 0090 8021     		movs	r1, #128
 2696 0092 0A43     		orrs	r2, r1
 2697 0094 9A60     		str	r2, [r3, #8]
 2698              	.L154:
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
ARM GAS  /tmp/ccVFl28S.s 			page 70


1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Process Unlocked */
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 2699              		.loc 1 1264 0
 2700 0096 7B68     		ldr	r3, [r7, #4]
 2701 0098 4022     		movs	r2, #64
 2702 009a 0021     		movs	r1, #0
 2703 009c 9954     		strb	r1, [r3, r2]
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   return HAL_OK;
 2704              		.loc 1 1266 0
 2705 009e 0023     		movs	r3, #0
 2706              	.L152:
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 2707              		.loc 1 1267 0
 2708 00a0 1800     		movs	r0, r3
 2709 00a2 BD46     		mov	sp, r7
 2710 00a4 02B0     		add	sp, sp, #8
 2711              		@ sp needed
 2712 00a6 80BD     		pop	{r7, pc}
 2713              		.cfi_endproc
 2714              	.LFE49:
 2716              		.section	.text.HAL_USART_DMAStop,"ax",%progbits
 2717              		.align	1
 2718              		.global	HAL_USART_DMAStop
 2719              		.syntax unified
 2720              		.code	16
 2721              		.thumb_func
 2722              		.fpu softvfp
 2724              	HAL_USART_DMAStop:
 2725              	.LFB50:
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Stop the DMA Transfer.
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAStop(USART_HandleTypeDef *husart)
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 2726              		.loc 1 1275 0
 2727              		.cfi_startproc
 2728 0000 80B5     		push	{r7, lr}
 2729              	.LCFI45:
 2730              		.cfi_def_cfa_offset 8
 2731              		.cfi_offset 7, -8
 2732              		.cfi_offset 14, -4
 2733 0002 82B0     		sub	sp, sp, #8
 2734              	.LCFI46:
 2735              		.cfi_def_cfa_offset 16
 2736 0004 00AF     		add	r7, sp, #0
 2737              	.LCFI47:
 2738              		.cfi_def_cfa_register 7
 2739 0006 7860     		str	r0, [r7, #4]
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* The Lock is not implemented on this API to allow the user application
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      to call the HAL USART API under callbacks HAL_USART_TxCpltCallback() / HAL_USART_RxCpltCallbac
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      HAL_USART_TxHalfCpltCallback() / HAL_USART_RxHalfCpltCallback (): 
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete i
ARM GAS  /tmp/ccVFl28S.s 			page 71


1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      generated if the DMA transfer interruption occurs at the middle or at the end of the stream
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      and the corresponding call back is executed. 
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      */
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Disable the USART Tx/Rx DMA requests */
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->Instance->CR3 &= ~USART_CR3_DMAT;
 2740              		.loc 1 1285 0
 2741 0008 7B68     		ldr	r3, [r7, #4]
 2742 000a 1B68     		ldr	r3, [r3]
 2743 000c 7A68     		ldr	r2, [r7, #4]
 2744 000e 1268     		ldr	r2, [r2]
 2745 0010 9268     		ldr	r2, [r2, #8]
 2746 0012 8021     		movs	r1, #128
 2747 0014 8A43     		bics	r2, r1
 2748 0016 9A60     		str	r2, [r3, #8]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->Instance->CR3 &= ~USART_CR3_DMAR;
 2749              		.loc 1 1286 0
 2750 0018 7B68     		ldr	r3, [r7, #4]
 2751 001a 1B68     		ldr	r3, [r3]
 2752 001c 7A68     		ldr	r2, [r7, #4]
 2753 001e 1268     		ldr	r2, [r2]
 2754 0020 9268     		ldr	r2, [r2, #8]
 2755 0022 4021     		movs	r1, #64
 2756 0024 8A43     		bics	r2, r1
 2757 0026 9A60     		str	r2, [r3, #8]
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Abort the USART DMA tx channel */
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->hdmatx != NULL)
 2758              		.loc 1 1289 0
 2759 0028 7B68     		ldr	r3, [r7, #4]
 2760 002a 9B6B     		ldr	r3, [r3, #56]
 2761 002c 002B     		cmp	r3, #0
 2762 002e 04D0     		beq	.L157
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     HAL_DMA_Abort(husart->hdmatx);
 2763              		.loc 1 1291 0
 2764 0030 7B68     		ldr	r3, [r7, #4]
 2765 0032 9B6B     		ldr	r3, [r3, #56]
 2766 0034 1800     		movs	r0, r3
 2767 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 2768              	.L157:
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Abort the USART DMA rx channel */
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->hdmarx != NULL)
 2769              		.loc 1 1294 0
 2770 003a 7B68     		ldr	r3, [r7, #4]
 2771 003c DB6B     		ldr	r3, [r3, #60]
 2772 003e 002B     		cmp	r3, #0
 2773 0040 04D0     		beq	.L158
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     HAL_DMA_Abort(husart->hdmarx);
 2774              		.loc 1 1296 0
 2775 0042 7B68     		ldr	r3, [r7, #4]
 2776 0044 DB6B     		ldr	r3, [r3, #60]
 2777 0046 1800     		movs	r0, r3
 2778 0048 FFF7FEFF 		bl	HAL_DMA_Abort
 2779              	.L158:
ARM GAS  /tmp/ccVFl28S.s 			page 72


1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 2780              		.loc 1 1299 0
 2781 004c 7B68     		ldr	r3, [r7, #4]
 2782 004e 4122     		movs	r2, #65
 2783 0050 0121     		movs	r1, #1
 2784 0052 9954     		strb	r1, [r3, r2]
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   return HAL_OK;
 2785              		.loc 1 1301 0
 2786 0054 0023     		movs	r3, #0
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 2787              		.loc 1 1302 0
 2788 0056 1800     		movs	r0, r3
 2789 0058 BD46     		mov	sp, r7
 2790 005a 02B0     		add	sp, sp, #8
 2791              		@ sp needed
 2792 005c 80BD     		pop	{r7, pc}
 2793              		.cfi_endproc
 2794              	.LFE50:
 2796              		.section	.text.HAL_USART_IRQHandler,"ax",%progbits
 2797              		.align	1
 2798              		.global	HAL_USART_IRQHandler
 2799              		.syntax unified
 2800              		.code	16
 2801              		.thumb_func
 2802              		.fpu softvfp
 2804              	HAL_USART_IRQHandler:
 2805              	.LFB51:
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Handle USART interrupt request.
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  husart: USART handle.
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** void HAL_USART_IRQHandler(USART_HandleTypeDef *husart)
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 2806              		.loc 1 1310 0
 2807              		.cfi_startproc
 2808 0000 80B5     		push	{r7, lr}
 2809              	.LCFI48:
 2810              		.cfi_def_cfa_offset 8
 2811              		.cfi_offset 7, -8
 2812              		.cfi_offset 14, -4
 2813 0002 82B0     		sub	sp, sp, #8
 2814              	.LCFI49:
 2815              		.cfi_def_cfa_offset 16
 2816 0004 00AF     		add	r7, sp, #0
 2817              	.LCFI50:
 2818              		.cfi_def_cfa_register 7
 2819 0006 7860     		str	r0, [r7, #4]
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* USART parity error interrupt occurred ------------------------------------*/
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if((__HAL_USART_GET_IT(husart, USART_IT_PE) != RESET) && (__HAL_USART_GET_IT_SOURCE(husart, USART
 2820              		.loc 1 1313 0
 2821 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVFl28S.s 			page 73


 2822 000a 1B68     		ldr	r3, [r3]
 2823 000c DB69     		ldr	r3, [r3, #28]
 2824 000e 0122     		movs	r2, #1
 2825 0010 1340     		ands	r3, r2
 2826 0012 14D0     		beq	.L161
 2827              		.loc 1 1313 0 is_stmt 0 discriminator 1
 2828 0014 7B68     		ldr	r3, [r7, #4]
 2829 0016 1B68     		ldr	r3, [r3]
 2830 0018 1A68     		ldr	r2, [r3]
 2831 001a 8023     		movs	r3, #128
 2832 001c 5B00     		lsls	r3, r3, #1
 2833 001e 1340     		ands	r3, r2
 2834 0020 0DD0     		beq	.L161
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_CLEAR_IT(husart, USART_CLEAR_PEF);
 2835              		.loc 1 1315 0 is_stmt 1
 2836 0022 7B68     		ldr	r3, [r7, #4]
 2837 0024 1B68     		ldr	r3, [r3]
 2838 0026 0122     		movs	r2, #1
 2839 0028 1A62     		str	r2, [r3, #32]
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode |= HAL_USART_ERROR_PE;
 2840              		.loc 1 1316 0
 2841 002a 7B68     		ldr	r3, [r7, #4]
 2842 002c 5B6C     		ldr	r3, [r3, #68]
 2843 002e 0122     		movs	r2, #1
 2844 0030 1A43     		orrs	r2, r3
 2845 0032 7B68     		ldr	r3, [r7, #4]
 2846 0034 5A64     		str	r2, [r3, #68]
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART state ready to be able to start again the process */
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 2847              		.loc 1 1318 0
 2848 0036 7B68     		ldr	r3, [r7, #4]
 2849 0038 4122     		movs	r2, #65
 2850 003a 0121     		movs	r1, #1
 2851 003c 9954     		strb	r1, [r3, r2]
 2852              	.L161:
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* USART frame error interrupt occurred -------------------------------------*/
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if((__HAL_USART_GET_IT(husart, USART_IT_FE) != RESET) && (__HAL_USART_GET_IT_SOURCE(husart, USART
 2853              		.loc 1 1322 0
 2854 003e 7B68     		ldr	r3, [r7, #4]
 2855 0040 1B68     		ldr	r3, [r3]
 2856 0042 DB69     		ldr	r3, [r3, #28]
 2857 0044 0222     		movs	r2, #2
 2858 0046 1340     		ands	r3, r2
 2859 0048 13D0     		beq	.L162
 2860              		.loc 1 1322 0 is_stmt 0 discriminator 1
 2861 004a 7B68     		ldr	r3, [r7, #4]
 2862 004c 1B68     		ldr	r3, [r3]
 2863 004e 9B68     		ldr	r3, [r3, #8]
 2864 0050 0122     		movs	r2, #1
 2865 0052 1340     		ands	r3, r2
 2866 0054 0DD0     		beq	.L162
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_CLEAR_IT(husart, USART_CLEAR_FEF);
 2867              		.loc 1 1324 0 is_stmt 1
ARM GAS  /tmp/ccVFl28S.s 			page 74


 2868 0056 7B68     		ldr	r3, [r7, #4]
 2869 0058 1B68     		ldr	r3, [r3]
 2870 005a 0222     		movs	r2, #2
 2871 005c 1A62     		str	r2, [r3, #32]
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode |= HAL_USART_ERROR_FE;
 2872              		.loc 1 1325 0
 2873 005e 7B68     		ldr	r3, [r7, #4]
 2874 0060 5B6C     		ldr	r3, [r3, #68]
 2875 0062 0422     		movs	r2, #4
 2876 0064 1A43     		orrs	r2, r3
 2877 0066 7B68     		ldr	r3, [r7, #4]
 2878 0068 5A64     		str	r2, [r3, #68]
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART state ready to be able to start again the process */
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 2879              		.loc 1 1327 0
 2880 006a 7B68     		ldr	r3, [r7, #4]
 2881 006c 4122     		movs	r2, #65
 2882 006e 0121     		movs	r1, #1
 2883 0070 9954     		strb	r1, [r3, r2]
 2884              	.L162:
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* USART noise error interrupt occurred -------------------------------------*/
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if((__HAL_USART_GET_IT(husart, USART_IT_NE) != RESET) && (__HAL_USART_GET_IT_SOURCE(husart, USART
 2885              		.loc 1 1331 0
 2886 0072 7B68     		ldr	r3, [r7, #4]
 2887 0074 1B68     		ldr	r3, [r3]
 2888 0076 DB69     		ldr	r3, [r3, #28]
 2889 0078 0422     		movs	r2, #4
 2890 007a 1340     		ands	r3, r2
 2891 007c 13D0     		beq	.L163
 2892              		.loc 1 1331 0 is_stmt 0 discriminator 1
 2893 007e 7B68     		ldr	r3, [r7, #4]
 2894 0080 1B68     		ldr	r3, [r3]
 2895 0082 9B68     		ldr	r3, [r3, #8]
 2896 0084 0122     		movs	r2, #1
 2897 0086 1340     		ands	r3, r2
 2898 0088 0DD0     		beq	.L163
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_CLEAR_IT(husart, USART_CLEAR_NEF);
 2899              		.loc 1 1333 0 is_stmt 1
 2900 008a 7B68     		ldr	r3, [r7, #4]
 2901 008c 1B68     		ldr	r3, [r3]
 2902 008e 0422     		movs	r2, #4
 2903 0090 1A62     		str	r2, [r3, #32]
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode |= HAL_USART_ERROR_NE;
 2904              		.loc 1 1334 0
 2905 0092 7B68     		ldr	r3, [r7, #4]
 2906 0094 5B6C     		ldr	r3, [r3, #68]
 2907 0096 0222     		movs	r2, #2
 2908 0098 1A43     		orrs	r2, r3
 2909 009a 7B68     		ldr	r3, [r7, #4]
 2910 009c 5A64     		str	r2, [r3, #68]
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART state ready to be able to start again the process */
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 2911              		.loc 1 1336 0
 2912 009e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVFl28S.s 			page 75


 2913 00a0 4122     		movs	r2, #65
 2914 00a2 0121     		movs	r1, #1
 2915 00a4 9954     		strb	r1, [r3, r2]
 2916              	.L163:
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* USART Over-Run interrupt occurred ----------------------------------------*/
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if((__HAL_USART_GET_IT(husart, USART_IT_ORE) != RESET) && (__HAL_USART_GET_IT_SOURCE(husart, USAR
 2917              		.loc 1 1340 0
 2918 00a6 7B68     		ldr	r3, [r7, #4]
 2919 00a8 1B68     		ldr	r3, [r3]
 2920 00aa DB69     		ldr	r3, [r3, #28]
 2921 00ac 0822     		movs	r2, #8
 2922 00ae 1340     		ands	r3, r2
 2923 00b0 13D0     		beq	.L164
 2924              		.loc 1 1340 0 is_stmt 0 discriminator 1
 2925 00b2 7B68     		ldr	r3, [r7, #4]
 2926 00b4 1B68     		ldr	r3, [r3]
 2927 00b6 9B68     		ldr	r3, [r3, #8]
 2928 00b8 0122     		movs	r2, #1
 2929 00ba 1340     		ands	r3, r2
 2930 00bc 0DD0     		beq	.L164
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     __HAL_USART_CLEAR_IT(husart, USART_CLEAR_OREF);
 2931              		.loc 1 1342 0 is_stmt 1
 2932 00be 7B68     		ldr	r3, [r7, #4]
 2933 00c0 1B68     		ldr	r3, [r3]
 2934 00c2 0822     		movs	r2, #8
 2935 00c4 1A62     		str	r2, [r3, #32]
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->ErrorCode |= HAL_USART_ERROR_ORE;
 2936              		.loc 1 1343 0
 2937 00c6 7B68     		ldr	r3, [r7, #4]
 2938 00c8 5B6C     		ldr	r3, [r3, #68]
 2939 00ca 0822     		movs	r2, #8
 2940 00cc 1A43     		orrs	r2, r3
 2941 00ce 7B68     		ldr	r3, [r7, #4]
 2942 00d0 5A64     		str	r2, [r3, #68]
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Set the USART state ready to be able to start again the process */
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 2943              		.loc 1 1345 0
 2944 00d2 7B68     		ldr	r3, [r7, #4]
 2945 00d4 4122     		movs	r2, #65
 2946 00d6 0121     		movs	r1, #1
 2947 00d8 9954     		strb	r1, [r3, r2]
 2948              	.L164:
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    /* Call USART Error Call back function if need be --------------------------*/
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->ErrorCode != HAL_USART_ERROR_NONE)
 2949              		.loc 1 1349 0
 2950 00da 7B68     		ldr	r3, [r7, #4]
 2951 00dc 5B6C     		ldr	r3, [r3, #68]
 2952 00de 002B     		cmp	r3, #0
 2953 00e0 03D0     		beq	.L165
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     HAL_USART_ErrorCallback(husart);
 2954              		.loc 1 1351 0
ARM GAS  /tmp/ccVFl28S.s 			page 76


 2955 00e2 7B68     		ldr	r3, [r7, #4]
 2956 00e4 1800     		movs	r0, r3
 2957 00e6 FFF7FEFF 		bl	HAL_USART_ErrorCallback
 2958              	.L165:
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* USART in mode Receiver --------------------------------------------------*/
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if((__HAL_USART_GET_IT(husart, USART_IT_RXNE) != RESET) && (__HAL_USART_GET_IT_SOURCE(husart, USA
 2959              		.loc 1 1355 0
 2960 00ea 7B68     		ldr	r3, [r7, #4]
 2961 00ec 1B68     		ldr	r3, [r3]
 2962 00ee DB69     		ldr	r3, [r3, #28]
 2963 00f0 2022     		movs	r2, #32
 2964 00f2 1340     		ands	r3, r2
 2965 00f4 14D0     		beq	.L166
 2966              		.loc 1 1355 0 is_stmt 0 discriminator 1
 2967 00f6 7B68     		ldr	r3, [r7, #4]
 2968 00f8 1B68     		ldr	r3, [r3]
 2969 00fa 1B68     		ldr	r3, [r3]
 2970 00fc 2022     		movs	r2, #32
 2971 00fe 1340     		ands	r3, r2
 2972 0100 0ED0     		beq	.L166
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(husart->State == HAL_USART_STATE_BUSY_RX)
 2973              		.loc 1 1357 0 is_stmt 1
 2974 0102 7B68     		ldr	r3, [r7, #4]
 2975 0104 4122     		movs	r2, #65
 2976 0106 9B5C     		ldrb	r3, [r3, r2]
 2977 0108 DBB2     		uxtb	r3, r3
 2978 010a 222B     		cmp	r3, #34
 2979 010c 04D1     		bne	.L167
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       USART_Receive_IT(husart);
 2980              		.loc 1 1359 0
 2981 010e 7B68     		ldr	r3, [r7, #4]
 2982 0110 1800     		movs	r0, r3
 2983 0112 FFF7FEFF 		bl	USART_Receive_IT
 2984 0116 03E0     		b	.L166
 2985              	.L167:
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     else
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       USART_TransmitReceive_IT(husart);
 2986              		.loc 1 1363 0
 2987 0118 7B68     		ldr	r3, [r7, #4]
 2988 011a 1800     		movs	r0, r3
 2989 011c FFF7FEFF 		bl	USART_TransmitReceive_IT
 2990              	.L166:
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* USART in mode Transmitter -----------------------------------------------*/
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if((__HAL_USART_GET_IT(husart, USART_IT_TXE) != RESET) &&(__HAL_USART_GET_IT_SOURCE(husart, USART
 2991              		.loc 1 1368 0
 2992 0120 7B68     		ldr	r3, [r7, #4]
 2993 0122 1B68     		ldr	r3, [r3]
 2994 0124 DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/ccVFl28S.s 			page 77


 2995 0126 8022     		movs	r2, #128
 2996 0128 1340     		ands	r3, r2
 2997 012a 14D0     		beq	.L168
 2998              		.loc 1 1368 0 is_stmt 0 discriminator 1
 2999 012c 7B68     		ldr	r3, [r7, #4]
 3000 012e 1B68     		ldr	r3, [r3]
 3001 0130 1B68     		ldr	r3, [r3]
 3002 0132 8022     		movs	r2, #128
 3003 0134 1340     		ands	r3, r2
 3004 0136 0ED0     		beq	.L168
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(husart->State == HAL_USART_STATE_BUSY_TX)
 3005              		.loc 1 1370 0 is_stmt 1
 3006 0138 7B68     		ldr	r3, [r7, #4]
 3007 013a 4122     		movs	r2, #65
 3008 013c 9B5C     		ldrb	r3, [r3, r2]
 3009 013e DBB2     		uxtb	r3, r3
 3010 0140 122B     		cmp	r3, #18
 3011 0142 04D1     		bne	.L169
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       USART_Transmit_IT(husart);
 3012              		.loc 1 1372 0
 3013 0144 7B68     		ldr	r3, [r7, #4]
 3014 0146 1800     		movs	r0, r3
 3015 0148 FFF7FEFF 		bl	USART_Transmit_IT
 3016 014c 03E0     		b	.L168
 3017              	.L169:
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     else
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       USART_TransmitReceive_IT(husart);
 3018              		.loc 1 1376 0
 3019 014e 7B68     		ldr	r3, [r7, #4]
 3020 0150 1800     		movs	r0, r3
 3021 0152 FFF7FEFF 		bl	USART_TransmitReceive_IT
 3022              	.L168:
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* USART in mode Transmitter (transmission end) -----------------------------*/
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if((__HAL_USART_GET_IT(husart, USART_IT_TC) != RESET) &&(__HAL_USART_GET_IT_SOURCE(husart, USART_
 3023              		.loc 1 1381 0
 3024 0156 7B68     		ldr	r3, [r7, #4]
 3025 0158 1B68     		ldr	r3, [r3]
 3026 015a DB69     		ldr	r3, [r3, #28]
 3027 015c 4022     		movs	r2, #64
 3028 015e 1340     		ands	r3, r2
 3029 0160 09D0     		beq	.L171
 3030              		.loc 1 1381 0 is_stmt 0 discriminator 1
 3031 0162 7B68     		ldr	r3, [r7, #4]
 3032 0164 1B68     		ldr	r3, [r3]
 3033 0166 1B68     		ldr	r3, [r3]
 3034 0168 4022     		movs	r2, #64
 3035 016a 1340     		ands	r3, r2
 3036 016c 03D0     		beq	.L171
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     USART_EndTransmit_IT(husart);
ARM GAS  /tmp/ccVFl28S.s 			page 78


 3037              		.loc 1 1383 0 is_stmt 1
 3038 016e 7B68     		ldr	r3, [r7, #4]
 3039 0170 1800     		movs	r0, r3
 3040 0172 FFF7FEFF 		bl	USART_EndTransmit_IT
 3041              	.L171:
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 3042              		.loc 1 1386 0
 3043 0176 C046     		nop
 3044 0178 BD46     		mov	sp, r7
 3045 017a 02B0     		add	sp, sp, #8
 3046              		@ sp needed
 3047 017c 80BD     		pop	{r7, pc}
 3048              		.cfi_endproc
 3049              	.LFE51:
 3051              		.section	.text.HAL_USART_TxCpltCallback,"ax",%progbits
 3052              		.align	1
 3053              		.weak	HAL_USART_TxCpltCallback
 3054              		.syntax unified
 3055              		.code	16
 3056              		.thumb_func
 3057              		.fpu softvfp
 3059              	HAL_USART_TxCpltCallback:
 3060              	.LFB52:
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Tx Transfer completed callback.
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  husart: USART handle.
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** __weak void HAL_USART_TxCpltCallback(USART_HandleTypeDef *husart)
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 3061              		.loc 1 1394 0
 3062              		.cfi_startproc
 3063 0000 80B5     		push	{r7, lr}
 3064              	.LCFI51:
 3065              		.cfi_def_cfa_offset 8
 3066              		.cfi_offset 7, -8
 3067              		.cfi_offset 14, -4
 3068 0002 82B0     		sub	sp, sp, #8
 3069              	.LCFI52:
 3070              		.cfi_def_cfa_offset 16
 3071 0004 00AF     		add	r7, sp, #0
 3072              	.LCFI53:
 3073              		.cfi_def_cfa_register 7
 3074 0006 7860     		str	r0, [r7, #4]
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   UNUSED(husart);
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             the HAL_USART_TxCpltCallback can be implemented in the user file.
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    */
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 3075              		.loc 1 1401 0
 3076 0008 C046     		nop
 3077 000a BD46     		mov	sp, r7
ARM GAS  /tmp/ccVFl28S.s 			page 79


 3078 000c 02B0     		add	sp, sp, #8
 3079              		@ sp needed
 3080 000e 80BD     		pop	{r7, pc}
 3081              		.cfi_endproc
 3082              	.LFE52:
 3084              		.section	.text.HAL_USART_TxHalfCpltCallback,"ax",%progbits
 3085              		.align	1
 3086              		.weak	HAL_USART_TxHalfCpltCallback
 3087              		.syntax unified
 3088              		.code	16
 3089              		.thumb_func
 3090              		.fpu softvfp
 3092              	HAL_USART_TxHalfCpltCallback:
 3093              	.LFB53:
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Tx Half Transfer completed callback.
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  husart: USART handle
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****  __weak void HAL_USART_TxHalfCpltCallback(USART_HandleTypeDef *husart)
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 3094              		.loc 1 1409 0
 3095              		.cfi_startproc
 3096 0000 80B5     		push	{r7, lr}
 3097              	.LCFI54:
 3098              		.cfi_def_cfa_offset 8
 3099              		.cfi_offset 7, -8
 3100              		.cfi_offset 14, -4
 3101 0002 82B0     		sub	sp, sp, #8
 3102              	.LCFI55:
 3103              		.cfi_def_cfa_offset 16
 3104 0004 00AF     		add	r7, sp, #0
 3105              	.LCFI56:
 3106              		.cfi_def_cfa_register 7
 3107 0006 7860     		str	r0, [r7, #4]
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   UNUSED(husart);
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****            the HAL_USART_TxHalfCpltCallback can be implemented in the user file.
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    */
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 3108              		.loc 1 1416 0
 3109 0008 C046     		nop
 3110 000a BD46     		mov	sp, r7
 3111 000c 02B0     		add	sp, sp, #8
 3112              		@ sp needed
 3113 000e 80BD     		pop	{r7, pc}
 3114              		.cfi_endproc
 3115              	.LFE53:
 3117              		.section	.text.HAL_USART_RxCpltCallback,"ax",%progbits
 3118              		.align	1
 3119              		.weak	HAL_USART_RxCpltCallback
 3120              		.syntax unified
 3121              		.code	16
 3122              		.thumb_func
ARM GAS  /tmp/ccVFl28S.s 			page 80


 3123              		.fpu softvfp
 3125              	HAL_USART_RxCpltCallback:
 3126              	.LFB54:
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Rx Transfer completed callback.
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  husart: USART handle.
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** __weak void HAL_USART_RxCpltCallback(USART_HandleTypeDef *husart)
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 3127              		.loc 1 1424 0
 3128              		.cfi_startproc
 3129 0000 80B5     		push	{r7, lr}
 3130              	.LCFI57:
 3131              		.cfi_def_cfa_offset 8
 3132              		.cfi_offset 7, -8
 3133              		.cfi_offset 14, -4
 3134 0002 82B0     		sub	sp, sp, #8
 3135              	.LCFI58:
 3136              		.cfi_def_cfa_offset 16
 3137 0004 00AF     		add	r7, sp, #0
 3138              	.LCFI59:
 3139              		.cfi_def_cfa_register 7
 3140 0006 7860     		str	r0, [r7, #4]
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   UNUSED(husart);
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****            the HAL_USART_RxCpltCallback can be implemented in the user file.
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    */
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 3141              		.loc 1 1431 0
 3142 0008 C046     		nop
 3143 000a BD46     		mov	sp, r7
 3144 000c 02B0     		add	sp, sp, #8
 3145              		@ sp needed
 3146 000e 80BD     		pop	{r7, pc}
 3147              		.cfi_endproc
 3148              	.LFE54:
 3150              		.section	.text.HAL_USART_RxHalfCpltCallback,"ax",%progbits
 3151              		.align	1
 3152              		.weak	HAL_USART_RxHalfCpltCallback
 3153              		.syntax unified
 3154              		.code	16
 3155              		.thumb_func
 3156              		.fpu softvfp
 3158              	HAL_USART_RxHalfCpltCallback:
 3159              	.LFB55:
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Rx Half Transfer completed callback.
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  husart: USART handle.
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** __weak void HAL_USART_RxHalfCpltCallback(USART_HandleTypeDef *husart)
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
ARM GAS  /tmp/ccVFl28S.s 			page 81


 3160              		.loc 1 1439 0
 3161              		.cfi_startproc
 3162 0000 80B5     		push	{r7, lr}
 3163              	.LCFI60:
 3164              		.cfi_def_cfa_offset 8
 3165              		.cfi_offset 7, -8
 3166              		.cfi_offset 14, -4
 3167 0002 82B0     		sub	sp, sp, #8
 3168              	.LCFI61:
 3169              		.cfi_def_cfa_offset 16
 3170 0004 00AF     		add	r7, sp, #0
 3171              	.LCFI62:
 3172              		.cfi_def_cfa_register 7
 3173 0006 7860     		str	r0, [r7, #4]
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   UNUSED(husart);
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             the HAL_USART_RxHalfCpltCallback can be implemented in the user file
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    */
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 3174              		.loc 1 1446 0
 3175 0008 C046     		nop
 3176 000a BD46     		mov	sp, r7
 3177 000c 02B0     		add	sp, sp, #8
 3178              		@ sp needed
 3179 000e 80BD     		pop	{r7, pc}
 3180              		.cfi_endproc
 3181              	.LFE55:
 3183              		.section	.text.HAL_USART_TxRxCpltCallback,"ax",%progbits
 3184              		.align	1
 3185              		.weak	HAL_USART_TxRxCpltCallback
 3186              		.syntax unified
 3187              		.code	16
 3188              		.thumb_func
 3189              		.fpu softvfp
 3191              	HAL_USART_TxRxCpltCallback:
 3192              	.LFB56:
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Tx/Rx Transfers completed callback for the non-blocking process.
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  husart: USART handle
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** __weak void HAL_USART_TxRxCpltCallback(USART_HandleTypeDef *husart)
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 3193              		.loc 1 1454 0
 3194              		.cfi_startproc
 3195 0000 80B5     		push	{r7, lr}
 3196              	.LCFI63:
 3197              		.cfi_def_cfa_offset 8
 3198              		.cfi_offset 7, -8
 3199              		.cfi_offset 14, -4
 3200 0002 82B0     		sub	sp, sp, #8
 3201              	.LCFI64:
 3202              		.cfi_def_cfa_offset 16
 3203 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccVFl28S.s 			page 82


 3204              	.LCFI65:
 3205              		.cfi_def_cfa_register 7
 3206 0006 7860     		str	r0, [r7, #4]
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   UNUSED(husart);
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             the HAL_USART_TxRxCpltCallback can be implemented in the user file
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    */
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 3207              		.loc 1 1461 0
 3208 0008 C046     		nop
 3209 000a BD46     		mov	sp, r7
 3210 000c 02B0     		add	sp, sp, #8
 3211              		@ sp needed
 3212 000e 80BD     		pop	{r7, pc}
 3213              		.cfi_endproc
 3214              	.LFE56:
 3216              		.section	.text.HAL_USART_ErrorCallback,"ax",%progbits
 3217              		.align	1
 3218              		.weak	HAL_USART_ErrorCallback
 3219              		.syntax unified
 3220              		.code	16
 3221              		.thumb_func
 3222              		.fpu softvfp
 3224              	HAL_USART_ErrorCallback:
 3225              	.LFB57:
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  USART error callback.
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  husart: USART handle.
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** __weak void HAL_USART_ErrorCallback(USART_HandleTypeDef *husart)
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 3226              		.loc 1 1469 0
 3227              		.cfi_startproc
 3228 0000 80B5     		push	{r7, lr}
 3229              	.LCFI66:
 3230              		.cfi_def_cfa_offset 8
 3231              		.cfi_offset 7, -8
 3232              		.cfi_offset 14, -4
 3233 0002 82B0     		sub	sp, sp, #8
 3234              	.LCFI67:
 3235              		.cfi_def_cfa_offset 16
 3236 0004 00AF     		add	r7, sp, #0
 3237              	.LCFI68:
 3238              		.cfi_def_cfa_register 7
 3239 0006 7860     		str	r0, [r7, #4]
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   UNUSED(husart);
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             the HAL_USART_ErrorCallback can be implemented in the user file.
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 3240              		.loc 1 1476 0
ARM GAS  /tmp/ccVFl28S.s 			page 83


 3241 0008 C046     		nop
 3242 000a BD46     		mov	sp, r7
 3243 000c 02B0     		add	sp, sp, #8
 3244              		@ sp needed
 3245 000e 80BD     		pop	{r7, pc}
 3246              		.cfi_endproc
 3247              	.LFE57:
 3249              		.section	.text.HAL_USART_GetState,"ax",%progbits
 3250              		.align	1
 3251              		.global	HAL_USART_GetState
 3252              		.syntax unified
 3253              		.code	16
 3254              		.thumb_func
 3255              		.fpu softvfp
 3257              	HAL_USART_GetState:
 3258              	.LFB58:
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @}
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group3 Peripheral State and Error functions
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****  *  @brief   USART Peripheral State and Error functions
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****  *
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** @verbatim
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   ==============================================================================
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****             ##### Peripheral State and Error functions #####
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   ==============================================================================
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     [..]
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     This subsection provides functions allowing to :
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       (+) Return the USART handle state
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       (+) Return the USART handle error code
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** @endverbatim
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @{
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Return the USART handle state.
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  husart : pointer to a USART_HandleTypeDef structure that contains
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *                  the configuration information for the specified USART.
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval USART handle state
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** HAL_USART_StateTypeDef HAL_USART_GetState(USART_HandleTypeDef *husart)
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 3259              		.loc 1 1506 0
 3260              		.cfi_startproc
 3261 0000 80B5     		push	{r7, lr}
 3262              	.LCFI69:
 3263              		.cfi_def_cfa_offset 8
 3264              		.cfi_offset 7, -8
 3265              		.cfi_offset 14, -4
 3266 0002 82B0     		sub	sp, sp, #8
 3267              	.LCFI70:
 3268              		.cfi_def_cfa_offset 16
 3269 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccVFl28S.s 			page 84


 3270              	.LCFI71:
 3271              		.cfi_def_cfa_register 7
 3272 0006 7860     		str	r0, [r7, #4]
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   return husart->State;
 3273              		.loc 1 1507 0
 3274 0008 7B68     		ldr	r3, [r7, #4]
 3275 000a 4122     		movs	r2, #65
 3276 000c 9B5C     		ldrb	r3, [r3, r2]
 3277 000e DBB2     		uxtb	r3, r3
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 3278              		.loc 1 1508 0
 3279 0010 1800     		movs	r0, r3
 3280 0012 BD46     		mov	sp, r7
 3281 0014 02B0     		add	sp, sp, #8
 3282              		@ sp needed
 3283 0016 80BD     		pop	{r7, pc}
 3284              		.cfi_endproc
 3285              	.LFE58:
 3287              		.section	.text.HAL_USART_GetError,"ax",%progbits
 3288              		.align	1
 3289              		.global	HAL_USART_GetError
 3290              		.syntax unified
 3291              		.code	16
 3292              		.thumb_func
 3293              		.fpu softvfp
 3295              	HAL_USART_GetError:
 3296              	.LFB59:
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Return the USART error code.
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  husart : pointer to a USART_HandleTypeDef structure that contains
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *                  the configuration information for the specified USART.
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval USART handle Error Code
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** uint32_t HAL_USART_GetError(USART_HandleTypeDef *husart)
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 3297              		.loc 1 1517 0
 3298              		.cfi_startproc
 3299 0000 80B5     		push	{r7, lr}
 3300              	.LCFI72:
 3301              		.cfi_def_cfa_offset 8
 3302              		.cfi_offset 7, -8
 3303              		.cfi_offset 14, -4
 3304 0002 82B0     		sub	sp, sp, #8
 3305              	.LCFI73:
 3306              		.cfi_def_cfa_offset 16
 3307 0004 00AF     		add	r7, sp, #0
 3308              	.LCFI74:
 3309              		.cfi_def_cfa_register 7
 3310 0006 7860     		str	r0, [r7, #4]
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   return husart->ErrorCode;
 3311              		.loc 1 1518 0
 3312 0008 7B68     		ldr	r3, [r7, #4]
 3313 000a 5B6C     		ldr	r3, [r3, #68]
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 3314              		.loc 1 1519 0
 3315 000c 1800     		movs	r0, r3
ARM GAS  /tmp/ccVFl28S.s 			page 85


 3316 000e BD46     		mov	sp, r7
 3317 0010 02B0     		add	sp, sp, #8
 3318              		@ sp needed
 3319 0012 80BD     		pop	{r7, pc}
 3320              		.cfi_endproc
 3321              	.LFE59:
 3323              		.global	__aeabi_uidiv
 3324              		.section	.text.USART_SetConfig,"ax",%progbits
 3325              		.align	1
 3326              		.syntax unified
 3327              		.code	16
 3328              		.thumb_func
 3329              		.fpu softvfp
 3331              	USART_SetConfig:
 3332              	.LFB60:
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @}
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @}
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /** @defgroup USART_Private_Functions USART Private Functions
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief   USART Private functions
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** @verbatim
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     [..]
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     This subsection provides a set of functions allowing to control the USART.
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      (+) USART_SetConfig() API is used to set the USART communication parameters.
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      (+) USART_CheckIdleState() APi ensures that TEACK and/or REACK bits are set after initializati
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** @endverbatim
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @{
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Configure the USART peripheral.
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_SetConfig(USART_HandleTypeDef *husart)
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 3333              		.loc 1 1548 0
 3334              		.cfi_startproc
 3335 0000 80B5     		push	{r7, lr}
 3336              	.LCFI75:
 3337              		.cfi_def_cfa_offset 8
 3338              		.cfi_offset 7, -8
 3339              		.cfi_offset 14, -4
 3340 0002 86B0     		sub	sp, sp, #24
 3341              	.LCFI76:
 3342              		.cfi_def_cfa_offset 32
 3343 0004 00AF     		add	r7, sp, #0
 3344              	.LCFI77:
 3345              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccVFl28S.s 			page 86


 3346 0006 7860     		str	r0, [r7, #4]
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint32_t tmpreg                      = 0x0;
 3347              		.loc 1 1549 0
 3348 0008 0023     		movs	r3, #0
 3349 000a 3B61     		str	r3, [r7, #16]
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   USART_ClockSourceTypeDef clocksource = USART_CLOCKSOURCE_UNDEFINED;
 3350              		.loc 1 1550 0
 3351 000c 1723     		movs	r3, #23
 3352 000e FB18     		adds	r3, r7, r3
 3353 0010 1022     		movs	r2, #16
 3354 0012 1A70     		strb	r2, [r3]
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   HAL_StatusTypeDef ret                = HAL_OK;
 3355              		.loc 1 1551 0
 3356 0014 1623     		movs	r3, #22
 3357 0016 FB18     		adds	r3, r7, r3
 3358 0018 0022     		movs	r2, #0
 3359 001a 1A70     		strb	r2, [r3]
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t brrtemp                     = 0x0000;
 3360              		.loc 1 1552 0
 3361 001c 0E23     		movs	r3, #14
 3362 001e FB18     		adds	r3, r7, r3
 3363 0020 0022     		movs	r2, #0
 3364 0022 1A80     		strh	r2, [r3]
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t usartdiv                    = 0x0000;  
 3365              		.loc 1 1553 0
 3366 0024 1423     		movs	r3, #20
 3367 0026 FB18     		adds	r3, r7, r3
 3368 0028 0022     		movs	r2, #0
 3369 002a 1A80     		strh	r2, [r3]
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Check the parameters */
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   assert_param(IS_USART_POLARITY(husart->Init.CLKPolarity));
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   assert_param(IS_USART_PHASE(husart->Init.CLKPhase));
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   assert_param(IS_USART_LASTBIT(husart->Init.CLKLastBit));
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   assert_param(IS_USART_BAUDRATE(husart->Init.BaudRate));
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   assert_param(IS_USART_WORD_LENGTH(husart->Init.WordLength));
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   assert_param(IS_USART_STOPBITS(husart->Init.StopBits));
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   assert_param(IS_USART_PARITY(husart->Init.Parity));
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   assert_param(IS_USART_MODE(husart->Init.Mode));
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    /* Clear M, PCE, PS, TE and RE bits and configure
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    *  the USART Word Length, Parity and Mode:
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    *  set the M bits according to husart->Init.WordLength value
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    *  set PCE and PS bits according to husart->Init.Parity value
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    *  set TE and RE bits according to husart->Init.Mode value 
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    *  force OVER8 to 1 to allow to reach the maximum speed (Fclock/8)  */
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   tmpreg = (uint32_t)husart->Init.WordLength | husart->Init.Parity | husart->Init.Mode | USART_CR1_
 3370              		.loc 1 1573 0
 3371 002c 7B68     		ldr	r3, [r7, #4]
 3372 002e 9A68     		ldr	r2, [r3, #8]
 3373 0030 7B68     		ldr	r3, [r7, #4]
 3374 0032 1B69     		ldr	r3, [r3, #16]
 3375 0034 1A43     		orrs	r2, r3
 3376 0036 7B68     		ldr	r3, [r7, #4]
 3377 0038 5B69     		ldr	r3, [r3, #20]
ARM GAS  /tmp/ccVFl28S.s 			page 87


 3378 003a 1343     		orrs	r3, r2
 3379 003c 8022     		movs	r2, #128
 3380 003e 1202     		lsls	r2, r2, #8
 3381 0040 1343     		orrs	r3, r2
 3382 0042 3B61     		str	r3, [r7, #16]
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   MODIFY_REG(husart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 3383              		.loc 1 1574 0
 3384 0044 7B68     		ldr	r3, [r7, #4]
 3385 0046 1B68     		ldr	r3, [r3]
 3386 0048 7A68     		ldr	r2, [r7, #4]
 3387 004a 1268     		ldr	r2, [r2]
 3388 004c 1268     		ldr	r2, [r2]
 3389 004e 8F49     		ldr	r1, .L210
 3390 0050 1140     		ands	r1, r2
 3391 0052 3A69     		ldr	r2, [r7, #16]
 3392 0054 0A43     		orrs	r2, r1
 3393 0056 1A60     		str	r2, [r3]
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /*---------------------------- USART CR2 Configuration ---------------------*/
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Clear and configure the USART Clock, CPOL, CPHA, LBCL and STOP bits:
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    * set CPOL bit according to husart->Init.CLKPolarity value
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    * set CPHA bit according to husart->Init.CLKPhase value
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    * set LBCL bit according to husart->Init.CLKLastBit value
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****    * set STOP[13:12] bits according to husart->Init.StopBits value */
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   tmpreg = (uint32_t)(USART_CLOCK_ENABLE);
 3394              		.loc 1 1582 0
 3395 0058 8023     		movs	r3, #128
 3396 005a 1B01     		lsls	r3, r3, #4
 3397 005c 3B61     		str	r3, [r7, #16]
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   tmpreg |= ((uint32_t)husart->Init.CLKPolarity | (uint32_t)husart->Init.CLKPhase);
 3398              		.loc 1 1583 0
 3399 005e 7B68     		ldr	r3, [r7, #4]
 3400 0060 9A69     		ldr	r2, [r3, #24]
 3401 0062 7B68     		ldr	r3, [r7, #4]
 3402 0064 DB69     		ldr	r3, [r3, #28]
 3403 0066 1343     		orrs	r3, r2
 3404 0068 3A69     		ldr	r2, [r7, #16]
 3405 006a 1343     		orrs	r3, r2
 3406 006c 3B61     		str	r3, [r7, #16]
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   tmpreg |= ((uint32_t)husart->Init.CLKLastBit | (uint32_t)husart->Init.StopBits);
 3407              		.loc 1 1584 0
 3408 006e 7B68     		ldr	r3, [r7, #4]
 3409 0070 1A6A     		ldr	r2, [r3, #32]
 3410 0072 7B68     		ldr	r3, [r7, #4]
 3411 0074 DB68     		ldr	r3, [r3, #12]
 3412 0076 1343     		orrs	r3, r2
 3413 0078 3A69     		ldr	r2, [r7, #16]
 3414 007a 1343     		orrs	r3, r2
 3415 007c 3B61     		str	r3, [r7, #16]
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   MODIFY_REG(husart->Instance->CR2, USART_CR2_FIELDS, tmpreg);
 3416              		.loc 1 1585 0
 3417 007e 7B68     		ldr	r3, [r7, #4]
 3418 0080 1B68     		ldr	r3, [r3]
 3419 0082 7A68     		ldr	r2, [r7, #4]
 3420 0084 1268     		ldr	r2, [r2]
 3421 0086 5268     		ldr	r2, [r2, #4]
 3422 0088 8149     		ldr	r1, .L210+4
ARM GAS  /tmp/ccVFl28S.s 			page 88


 3423 008a 1140     		ands	r1, r2
 3424 008c 3A69     		ldr	r2, [r7, #16]
 3425 008e 0A43     		orrs	r2, r1
 3426 0090 5A60     		str	r2, [r3, #4]
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* no CR3 register configuration                                            */
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* BRR is filled-up according to OVER8 bit setting which is forced to 1     */ 
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   USART_GETCLOCKSOURCE(husart, clocksource);
 3427              		.loc 1 1592 0
 3428 0092 7B68     		ldr	r3, [r7, #4]
 3429 0094 1B68     		ldr	r3, [r3]
 3430 0096 7F4A     		ldr	r2, .L210+8
 3431 0098 9342     		cmp	r3, r2
 3432 009a 25D1     		bne	.L183
 3433              		.loc 1 1592 0 is_stmt 0 discriminator 1
 3434 009c 7E4B     		ldr	r3, .L210+12
 3435 009e 1B6B     		ldr	r3, [r3, #48]
 3436 00a0 0322     		movs	r2, #3
 3437 00a2 1340     		ands	r3, r2
 3438 00a4 012B     		cmp	r3, #1
 3439 00a6 0FD0     		beq	.L185
 3440 00a8 04D3     		bcc	.L186
 3441 00aa 022B     		cmp	r3, #2
 3442 00ac 11D0     		beq	.L187
 3443 00ae 032B     		cmp	r3, #3
 3444 00b0 05D0     		beq	.L188
 3445              		.loc 1 1592 0
 3446 00b2 13E0     		b	.L209
 3447              	.L186:
 3448              		.loc 1 1592 0 discriminator 4
 3449 00b4 1723     		movs	r3, #23
 3450 00b6 FB18     		adds	r3, r7, r3
 3451 00b8 0022     		movs	r2, #0
 3452 00ba 1A70     		strb	r2, [r3]
 3453 00bc 64E0     		b	.L190
 3454              	.L188:
 3455              		.loc 1 1592 0 discriminator 7
 3456 00be 1723     		movs	r3, #23
 3457 00c0 FB18     		adds	r3, r7, r3
 3458 00c2 0222     		movs	r2, #2
 3459 00c4 1A70     		strb	r2, [r3]
 3460 00c6 5FE0     		b	.L190
 3461              	.L185:
 3462              		.loc 1 1592 0 discriminator 5
 3463 00c8 1723     		movs	r3, #23
 3464 00ca FB18     		adds	r3, r7, r3
 3465 00cc 0422     		movs	r2, #4
 3466 00ce 1A70     		strb	r2, [r3]
 3467 00d0 5AE0     		b	.L190
 3468              	.L187:
 3469              		.loc 1 1592 0 discriminator 6
 3470 00d2 1723     		movs	r3, #23
 3471 00d4 FB18     		adds	r3, r7, r3
 3472 00d6 0822     		movs	r2, #8
ARM GAS  /tmp/ccVFl28S.s 			page 89


 3473 00d8 1A70     		strb	r2, [r3]
 3474 00da 55E0     		b	.L190
 3475              	.L209:
 3476              		.loc 1 1592 0 discriminator 3
 3477 00dc 1723     		movs	r3, #23
 3478 00de FB18     		adds	r3, r7, r3
 3479 00e0 1022     		movs	r2, #16
 3480 00e2 1A70     		strb	r2, [r3]
 3481 00e4 C046     		nop
 3482 00e6 4FE0     		b	.L190
 3483              	.L183:
 3484              		.loc 1 1592 0 discriminator 2
 3485 00e8 7B68     		ldr	r3, [r7, #4]
 3486 00ea 1B68     		ldr	r3, [r3]
 3487 00ec 6B4A     		ldr	r2, .L210+16
 3488 00ee 9342     		cmp	r3, r2
 3489 00f0 32D1     		bne	.L191
 3490              		.loc 1 1592 0 discriminator 8
 3491 00f2 694B     		ldr	r3, .L210+12
 3492 00f4 1A6B     		ldr	r2, [r3, #48]
 3493 00f6 C023     		movs	r3, #192
 3494 00f8 9B02     		lsls	r3, r3, #10
 3495 00fa 1340     		ands	r3, r2
 3496 00fc 8022     		movs	r2, #128
 3497 00fe 5202     		lsls	r2, r2, #9
 3498 0100 9342     		cmp	r3, r2
 3499 0102 19D0     		beq	.L193
 3500 0104 8022     		movs	r2, #128
 3501 0106 5202     		lsls	r2, r2, #9
 3502 0108 9342     		cmp	r3, r2
 3503 010a 02D8     		bhi	.L194
 3504 010c 002B     		cmp	r3, #0
 3505 010e 09D0     		beq	.L195
 3506              		.loc 1 1592 0
 3507 0110 1CE0     		b	.L192
 3508              	.L194:
 3509              		.loc 1 1592 0 discriminator 8
 3510 0112 8022     		movs	r2, #128
 3511 0114 9202     		lsls	r2, r2, #10
 3512 0116 9342     		cmp	r3, r2
 3513 0118 13D0     		beq	.L196
 3514 011a C022     		movs	r2, #192
 3515 011c 9202     		lsls	r2, r2, #10
 3516 011e 9342     		cmp	r3, r2
 3517 0120 05D0     		beq	.L197
 3518              		.loc 1 1592 0
 3519 0122 13E0     		b	.L192
 3520              	.L195:
 3521              		.loc 1 1592 0 discriminator 11
 3522 0124 1723     		movs	r3, #23
 3523 0126 FB18     		adds	r3, r7, r3
 3524 0128 0022     		movs	r2, #0
 3525 012a 1A70     		strb	r2, [r3]
 3526 012c 2CE0     		b	.L190
 3527              	.L197:
 3528              		.loc 1 1592 0 discriminator 14
 3529 012e 1723     		movs	r3, #23
ARM GAS  /tmp/ccVFl28S.s 			page 90


 3530 0130 FB18     		adds	r3, r7, r3
 3531 0132 0222     		movs	r2, #2
 3532 0134 1A70     		strb	r2, [r3]
 3533 0136 27E0     		b	.L190
 3534              	.L193:
 3535              		.loc 1 1592 0 discriminator 12
 3536 0138 1723     		movs	r3, #23
 3537 013a FB18     		adds	r3, r7, r3
 3538 013c 0422     		movs	r2, #4
 3539 013e 1A70     		strb	r2, [r3]
 3540 0140 22E0     		b	.L190
 3541              	.L196:
 3542              		.loc 1 1592 0 discriminator 13
 3543 0142 1723     		movs	r3, #23
 3544 0144 FB18     		adds	r3, r7, r3
 3545 0146 0822     		movs	r2, #8
 3546 0148 1A70     		strb	r2, [r3]
 3547 014a 1DE0     		b	.L190
 3548              	.L192:
 3549              		.loc 1 1592 0 discriminator 10
 3550 014c 1723     		movs	r3, #23
 3551 014e FB18     		adds	r3, r7, r3
 3552 0150 1022     		movs	r2, #16
 3553 0152 1A70     		strb	r2, [r3]
 3554 0154 C046     		nop
 3555 0156 17E0     		b	.L190
 3556              	.L191:
 3557              		.loc 1 1592 0 discriminator 9
 3558 0158 7B68     		ldr	r3, [r7, #4]
 3559 015a 1B68     		ldr	r3, [r3]
 3560 015c 504A     		ldr	r2, .L210+20
 3561 015e 9342     		cmp	r3, r2
 3562 0160 04D1     		bne	.L199
 3563              		.loc 1 1592 0 discriminator 15
 3564 0162 1723     		movs	r3, #23
 3565 0164 FB18     		adds	r3, r7, r3
 3566 0166 0022     		movs	r2, #0
 3567 0168 1A70     		strb	r2, [r3]
 3568 016a 0DE0     		b	.L190
 3569              	.L199:
 3570              		.loc 1 1592 0 discriminator 16
 3571 016c 7B68     		ldr	r3, [r7, #4]
 3572 016e 1B68     		ldr	r3, [r3]
 3573 0170 4C4A     		ldr	r2, .L210+24
 3574 0172 9342     		cmp	r3, r2
 3575 0174 04D1     		bne	.L200
 3576              		.loc 1 1592 0 discriminator 17
 3577 0176 1723     		movs	r3, #23
 3578 0178 FB18     		adds	r3, r7, r3
 3579 017a 0022     		movs	r2, #0
 3580 017c 1A70     		strb	r2, [r3]
 3581 017e 03E0     		b	.L190
 3582              	.L200:
 3583              		.loc 1 1592 0 discriminator 18
 3584 0180 1723     		movs	r3, #23
 3585 0182 FB18     		adds	r3, r7, r3
 3586 0184 1022     		movs	r2, #16
ARM GAS  /tmp/ccVFl28S.s 			page 91


 3587 0186 1A70     		strb	r2, [r3]
 3588              	.L190:
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   switch (clocksource)
 3589              		.loc 1 1593 0 is_stmt 1
 3590 0188 1723     		movs	r3, #23
 3591 018a FB18     		adds	r3, r7, r3
 3592 018c 1B78     		ldrb	r3, [r3]
 3593 018e 022B     		cmp	r3, #2
 3594 0190 1CD0     		beq	.L202
 3595 0192 02DC     		bgt	.L203
 3596 0194 002B     		cmp	r3, #0
 3597 0196 05D0     		beq	.L204
 3598 0198 4FE0     		b	.L201
 3599              	.L203:
 3600 019a 042B     		cmp	r3, #4
 3601 019c 27D0     		beq	.L205
 3602 019e 082B     		cmp	r3, #8
 3603 01a0 39D0     		beq	.L206
 3604 01a2 4AE0     		b	.L201
 3605              	.L204:
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     case USART_CLOCKSOURCE_PCLK1:
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       usartdiv = (uint16_t)(((2*HAL_RCC_GetPCLK1Freq()) + (husart->Init.BaudRate/2)) / husart->Init
 3606              		.loc 1 1596 0
 3607 01a4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3608 01a8 0300     		movs	r3, r0
 3609 01aa 5A00     		lsls	r2, r3, #1
 3610 01ac 7B68     		ldr	r3, [r7, #4]
 3611 01ae 5B68     		ldr	r3, [r3, #4]
 3612 01b0 5B08     		lsrs	r3, r3, #1
 3613 01b2 D218     		adds	r2, r2, r3
 3614 01b4 7B68     		ldr	r3, [r7, #4]
 3615 01b6 5B68     		ldr	r3, [r3, #4]
 3616 01b8 1900     		movs	r1, r3
 3617 01ba 1000     		movs	r0, r2
 3618 01bc FFF7FEFF 		bl	__aeabi_uidiv
 3619              	.LVL0:
 3620 01c0 0300     		movs	r3, r0
 3621 01c2 1A00     		movs	r2, r3
 3622 01c4 1423     		movs	r3, #20
 3623 01c6 FB18     		adds	r3, r7, r3
 3624 01c8 1A80     		strh	r2, [r3]
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       break;
 3625              		.loc 1 1597 0
 3626 01ca 3BE0     		b	.L207
 3627              	.L202:
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     case USART_CLOCKSOURCE_HSI:
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       usartdiv = (uint16_t)(((2*HSI_VALUE) + (husart->Init.BaudRate/2)) / husart->Init.BaudRate);
 3628              		.loc 1 1599 0
 3629 01cc 7B68     		ldr	r3, [r7, #4]
 3630 01ce 5B68     		ldr	r3, [r3, #4]
 3631 01d0 5B08     		lsrs	r3, r3, #1
 3632 01d2 354A     		ldr	r2, .L210+28
 3633 01d4 9A18     		adds	r2, r3, r2
 3634 01d6 7B68     		ldr	r3, [r7, #4]
 3635 01d8 5B68     		ldr	r3, [r3, #4]
 3636 01da 1900     		movs	r1, r3
ARM GAS  /tmp/ccVFl28S.s 			page 92


 3637 01dc 1000     		movs	r0, r2
 3638 01de FFF7FEFF 		bl	__aeabi_uidiv
 3639              	.LVL1:
 3640 01e2 0300     		movs	r3, r0
 3641 01e4 1A00     		movs	r2, r3
 3642 01e6 1423     		movs	r3, #20
 3643 01e8 FB18     		adds	r3, r7, r3
 3644 01ea 1A80     		strh	r2, [r3]
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       break;
 3645              		.loc 1 1600 0
 3646 01ec 2AE0     		b	.L207
 3647              	.L205:
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     case USART_CLOCKSOURCE_SYSCLK:
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       usartdiv = (uint16_t)(((2*HAL_RCC_GetSysClockFreq()) + (husart->Init.BaudRate/2)) / husart->I
 3648              		.loc 1 1602 0
 3649 01ee FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3650 01f2 0300     		movs	r3, r0
 3651 01f4 5A00     		lsls	r2, r3, #1
 3652 01f6 7B68     		ldr	r3, [r7, #4]
 3653 01f8 5B68     		ldr	r3, [r3, #4]
 3654 01fa 5B08     		lsrs	r3, r3, #1
 3655 01fc D218     		adds	r2, r2, r3
 3656 01fe 7B68     		ldr	r3, [r7, #4]
 3657 0200 5B68     		ldr	r3, [r3, #4]
 3658 0202 1900     		movs	r1, r3
 3659 0204 1000     		movs	r0, r2
 3660 0206 FFF7FEFF 		bl	__aeabi_uidiv
 3661              	.LVL2:
 3662 020a 0300     		movs	r3, r0
 3663 020c 1A00     		movs	r2, r3
 3664 020e 1423     		movs	r3, #20
 3665 0210 FB18     		adds	r3, r7, r3
 3666 0212 1A80     		strh	r2, [r3]
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       break;
 3667              		.loc 1 1603 0
 3668 0214 16E0     		b	.L207
 3669              	.L206:
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     case USART_CLOCKSOURCE_LSE:
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       usartdiv = (uint16_t)(((2*LSE_VALUE) + (husart->Init.BaudRate/2)) / husart->Init.BaudRate);
 3670              		.loc 1 1605 0
 3671 0216 7B68     		ldr	r3, [r7, #4]
 3672 0218 5B68     		ldr	r3, [r3, #4]
 3673 021a 5B08     		lsrs	r3, r3, #1
 3674 021c 8022     		movs	r2, #128
 3675 021e 5202     		lsls	r2, r2, #9
 3676 0220 9A18     		adds	r2, r3, r2
 3677 0222 7B68     		ldr	r3, [r7, #4]
 3678 0224 5B68     		ldr	r3, [r3, #4]
 3679 0226 1900     		movs	r1, r3
 3680 0228 1000     		movs	r0, r2
 3681 022a FFF7FEFF 		bl	__aeabi_uidiv
 3682              	.LVL3:
 3683 022e 0300     		movs	r3, r0
 3684 0230 1A00     		movs	r2, r3
 3685 0232 1423     		movs	r3, #20
 3686 0234 FB18     		adds	r3, r7, r3
 3687 0236 1A80     		strh	r2, [r3]
ARM GAS  /tmp/ccVFl28S.s 			page 93


1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       break;
 3688              		.loc 1 1606 0
 3689 0238 04E0     		b	.L207
 3690              	.L201:
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     case USART_CLOCKSOURCE_UNDEFINED:
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     default:
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       ret = HAL_ERROR;
 3691              		.loc 1 1609 0
 3692 023a 1623     		movs	r3, #22
 3693 023c FB18     		adds	r3, r7, r3
 3694 023e 0122     		movs	r2, #1
 3695 0240 1A70     		strb	r2, [r3]
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       break;
 3696              		.loc 1 1610 0
 3697 0242 C046     		nop
 3698              	.L207:
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   brrtemp = usartdiv & 0xFFF0;
 3699              		.loc 1 1613 0
 3700 0244 0E23     		movs	r3, #14
 3701 0246 FB18     		adds	r3, r7, r3
 3702 0248 1422     		movs	r2, #20
 3703 024a BA18     		adds	r2, r7, r2
 3704 024c 1288     		ldrh	r2, [r2]
 3705 024e 0F21     		movs	r1, #15
 3706 0250 8A43     		bics	r2, r1
 3707 0252 1A80     		strh	r2, [r3]
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000F) >> 1U);
 3708              		.loc 1 1614 0
 3709 0254 1423     		movs	r3, #20
 3710 0256 FB18     		adds	r3, r7, r3
 3711 0258 1B88     		ldrh	r3, [r3]
 3712 025a 5B10     		asrs	r3, r3, #1
 3713 025c 9BB2     		uxth	r3, r3
 3714 025e 0722     		movs	r2, #7
 3715 0260 1340     		ands	r3, r2
 3716 0262 99B2     		uxth	r1, r3
 3717 0264 0E23     		movs	r3, #14
 3718 0266 FB18     		adds	r3, r7, r3
 3719 0268 0E22     		movs	r2, #14
 3720 026a BA18     		adds	r2, r7, r2
 3721 026c 1288     		ldrh	r2, [r2]
 3722 026e 0A43     		orrs	r2, r1
 3723 0270 1A80     		strh	r2, [r3]
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->Instance->BRR = brrtemp;
 3724              		.loc 1 1615 0
 3725 0272 7B68     		ldr	r3, [r7, #4]
 3726 0274 1B68     		ldr	r3, [r3]
 3727 0276 0E22     		movs	r2, #14
 3728 0278 BA18     		adds	r2, r7, r2
 3729 027a 1288     		ldrh	r2, [r2]
 3730 027c DA60     		str	r2, [r3, #12]
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   return ret;
 3731              		.loc 1 1617 0
 3732 027e 1623     		movs	r3, #22
ARM GAS  /tmp/ccVFl28S.s 			page 94


 3733 0280 FB18     		adds	r3, r7, r3
 3734 0282 1B78     		ldrb	r3, [r3]
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 3735              		.loc 1 1618 0
 3736 0284 1800     		movs	r0, r3
 3737 0286 BD46     		mov	sp, r7
 3738 0288 06B0     		add	sp, sp, #24
 3739              		@ sp needed
 3740 028a 80BD     		pop	{r7, pc}
 3741              	.L211:
 3742              		.align	2
 3743              	.L210:
 3744 028c F369FFEF 		.word	-268473869
 3745 0290 FFC0FFFF 		.word	-16129
 3746 0294 00380140 		.word	1073821696
 3747 0298 00100240 		.word	1073876992
 3748 029c 00440040 		.word	1073759232
 3749 02a0 00480040 		.word	1073760256
 3750 02a4 004C0040 		.word	1073761280
 3751 02a8 0024F400 		.word	16000000
 3752              		.cfi_endproc
 3753              	.LFE60:
 3755              		.section	.text.USART_CheckIdleState,"ax",%progbits
 3756              		.align	1
 3757              		.syntax unified
 3758              		.code	16
 3759              		.thumb_func
 3760              		.fpu softvfp
 3762              	USART_CheckIdleState:
 3763              	.LFB61:
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief Check the USART Idle State.
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_CheckIdleState(USART_HandleTypeDef *husart)
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 3764              		.loc 1 1626 0
 3765              		.cfi_startproc
 3766 0000 80B5     		push	{r7, lr}
 3767              	.LCFI78:
 3768              		.cfi_def_cfa_offset 8
 3769              		.cfi_offset 7, -8
 3770              		.cfi_offset 14, -4
 3771 0002 82B0     		sub	sp, sp, #8
 3772              	.LCFI79:
 3773              		.cfi_def_cfa_offset 16
 3774 0004 00AF     		add	r7, sp, #0
 3775              	.LCFI80:
 3776              		.cfi_def_cfa_register 7
 3777 0006 7860     		str	r0, [r7, #4]
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Initialize the USART ErrorCode */
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 3778              		.loc 1 1628 0
 3779 0008 7B68     		ldr	r3, [r7, #4]
 3780 000a 0022     		movs	r2, #0
ARM GAS  /tmp/ccVFl28S.s 			page 95


 3781 000c 5A64     		str	r2, [r3, #68]
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(husart->Instance))
 3782              		.loc 1 1634 0
 3783 000e 7B68     		ldr	r3, [r7, #4]
 3784 0010 1B68     		ldr	r3, [r3]
 3785 0012 1E4A     		ldr	r2, .L217
 3786 0014 9342     		cmp	r3, r2
 3787 0016 04D0     		beq	.L213
 3788              		.loc 1 1634 0 is_stmt 0 discriminator 1
 3789 0018 7B68     		ldr	r3, [r7, #4]
 3790 001a 1B68     		ldr	r3, [r3]
 3791 001c 1C4A     		ldr	r2, .L217+4
 3792 001e 9342     		cmp	r3, r2
 3793 0020 27D1     		bne	.L214
 3794              	.L213:
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Check if the Transmitter is enabled */
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((husart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 3795              		.loc 1 1637 0 is_stmt 1
 3796 0022 7B68     		ldr	r3, [r7, #4]
 3797 0024 1B68     		ldr	r3, [r3]
 3798 0026 1B68     		ldr	r3, [r3]
 3799 0028 0822     		movs	r2, #8
 3800 002a 1340     		ands	r3, r2
 3801 002c 082B     		cmp	r3, #8
 3802 002e 0CD1     		bne	.L215
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Wait until TEACK flag is set */
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(USART_WaitOnFlagUntilTimeout(husart, USART_ISR_TEACK, RESET, USART_TEACK_REACK_TIMEOUT) !=
 3803              		.loc 1 1640 0
 3804 0030 FA23     		movs	r3, #250
 3805 0032 9A00     		lsls	r2, r3, #2
 3806 0034 8023     		movs	r3, #128
 3807 0036 9903     		lsls	r1, r3, #14
 3808 0038 7868     		ldr	r0, [r7, #4]
 3809 003a 1300     		movs	r3, r2
 3810 003c 0022     		movs	r2, #0
 3811 003e FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 3812 0042 031E     		subs	r3, r0, #0
 3813 0044 01D0     		beq	.L215
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         /* Timeout occurred */
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return HAL_TIMEOUT;
 3814              		.loc 1 1643 0
 3815 0046 0323     		movs	r3, #3
 3816 0048 1CE0     		b	.L216
 3817              	.L215:
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Check if the Receiver is enabled */
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((husart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
ARM GAS  /tmp/ccVFl28S.s 			page 96


 3818              		.loc 1 1648 0
 3819 004a 7B68     		ldr	r3, [r7, #4]
 3820 004c 1B68     		ldr	r3, [r3]
 3821 004e 1B68     		ldr	r3, [r3]
 3822 0050 0422     		movs	r2, #4
 3823 0052 1340     		ands	r3, r2
 3824 0054 042B     		cmp	r3, #4
 3825 0056 0CD1     		bne	.L214
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Wait until REACK flag is set */
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(USART_WaitOnFlagUntilTimeout(husart, USART_ISR_REACK, RESET, USART_TEACK_REACK_TIMEOUT) !=
 3826              		.loc 1 1651 0
 3827 0058 FA23     		movs	r3, #250
 3828 005a 9A00     		lsls	r2, r3, #2
 3829 005c 8023     		movs	r3, #128
 3830 005e D903     		lsls	r1, r3, #15
 3831 0060 7868     		ldr	r0, [r7, #4]
 3832 0062 1300     		movs	r3, r2
 3833 0064 0022     		movs	r2, #0
 3834 0066 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 3835 006a 031E     		subs	r3, r0, #0
 3836 006c 01D0     		beq	.L214
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         /* Timeout occurred */
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         return HAL_TIMEOUT;
 3837              		.loc 1 1654 0
 3838 006e 0323     		movs	r3, #3
 3839 0070 08E0     		b	.L216
 3840              	.L214:
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Initialize the USART state*/
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->State= HAL_USART_STATE_READY;
 3841              		.loc 1 1661 0
 3842 0072 7B68     		ldr	r3, [r7, #4]
 3843 0074 4122     		movs	r2, #65
 3844 0076 0121     		movs	r1, #1
 3845 0078 9954     		strb	r1, [r3, r2]
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Process Unlocked */
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 3846              		.loc 1 1664 0
 3847 007a 7B68     		ldr	r3, [r7, #4]
 3848 007c 4022     		movs	r2, #64
 3849 007e 0021     		movs	r1, #0
 3850 0080 9954     		strb	r1, [r3, r2]
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   return HAL_OK;
 3851              		.loc 1 1666 0
 3852 0082 0023     		movs	r3, #0
 3853              	.L216:
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 3854              		.loc 1 1667 0
 3855 0084 1800     		movs	r0, r3
ARM GAS  /tmp/ccVFl28S.s 			page 97


 3856 0086 BD46     		mov	sp, r7
 3857 0088 02B0     		add	sp, sp, #8
 3858              		@ sp needed
 3859 008a 80BD     		pop	{r7, pc}
 3860              	.L218:
 3861              		.align	2
 3862              	.L217:
 3863 008c 00380140 		.word	1073821696
 3864 0090 00440040 		.word	1073759232
 3865              		.cfi_endproc
 3866              	.LFE61:
 3868              		.section	.text.USART_WaitOnFlagUntilTimeout,"ax",%progbits
 3869              		.align	1
 3870              		.syntax unified
 3871              		.code	16
 3872              		.thumb_func
 3873              		.fpu softvfp
 3875              	USART_WaitOnFlagUntilTimeout:
 3876              	.LFB62:
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Handle USART Communication Timeout.
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  husart: USART handle.
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  Flag: specifies the USART flag to check.
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  Status: the Flag status (SET or RESET).
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  Timeout: timeout duration.
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_WaitOnFlagUntilTimeout(USART_HandleTypeDef *husart, uint32_t Flag, F
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 3877              		.loc 1 1679 0
 3878              		.cfi_startproc
 3879 0000 80B5     		push	{r7, lr}
 3880              	.LCFI81:
 3881              		.cfi_def_cfa_offset 8
 3882              		.cfi_offset 7, -8
 3883              		.cfi_offset 14, -4
 3884 0002 86B0     		sub	sp, sp, #24
 3885              	.LCFI82:
 3886              		.cfi_def_cfa_offset 32
 3887 0004 00AF     		add	r7, sp, #0
 3888              	.LCFI83:
 3889              		.cfi_def_cfa_register 7
 3890 0006 F860     		str	r0, [r7, #12]
 3891 0008 B960     		str	r1, [r7, #8]
 3892 000a 3B60     		str	r3, [r7]
 3893 000c FB1D     		adds	r3, r7, #7
 3894 000e 1A70     		strb	r2, [r3]
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint32_t tickstart = HAL_GetTick();
 3895              		.loc 1 1680 0
 3896 0010 FFF7FEFF 		bl	HAL_GetTick
 3897 0014 0300     		movs	r3, r0
 3898 0016 7B61     		str	r3, [r7, #20]
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Wait until flag is set */
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(Status == RESET)
ARM GAS  /tmp/ccVFl28S.s 			page 98


 3899              		.loc 1 1683 0
 3900 0018 FB1D     		adds	r3, r7, #7
 3901 001a 1B78     		ldrb	r3, [r3]
 3902 001c 002B     		cmp	r3, #0
 3903 001e 00D0     		beq	.LCB3524
 3904 0020 79E0     		b	.L226	@long jump
 3905              	.LCB3524:
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     while(__HAL_USART_GET_FLAG(husart, Flag) == RESET)
 3906              		.loc 1 1685 0
 3907 0022 37E0     		b	.L221
 3908              	.L224:
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Check for the Timeout */
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(Timeout != HAL_MAX_DELAY)
 3909              		.loc 1 1688 0
 3910 0024 3B68     		ldr	r3, [r7]
 3911 0026 0133     		adds	r3, r3, #1
 3912 0028 34D0     		beq	.L221
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
 3913              		.loc 1 1690 0
 3914 002a 3B68     		ldr	r3, [r7]
 3915 002c 002B     		cmp	r3, #0
 3916 002e 07D0     		beq	.L222
 3917              		.loc 1 1690 0 is_stmt 0 discriminator 1
 3918 0030 FFF7FEFF 		bl	HAL_GetTick
 3919 0034 0200     		movs	r2, r0
 3920 0036 7B69     		ldr	r3, [r7, #20]
 3921 0038 D21A     		subs	r2, r2, r3
 3922 003a 3B68     		ldr	r3, [r7]
 3923 003c 9A42     		cmp	r2, r3
 3924 003e 29D9     		bls	.L221
 3925              	.L222:
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         {
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           __HAL_USART_DISABLE_IT(husart, USART_IT_TXE);
 3926              		.loc 1 1693 0 is_stmt 1
 3927 0040 FB68     		ldr	r3, [r7, #12]
 3928 0042 1B68     		ldr	r3, [r3]
 3929 0044 FA68     		ldr	r2, [r7, #12]
 3930 0046 1268     		ldr	r2, [r2]
 3931 0048 1268     		ldr	r2, [r2]
 3932 004a 8021     		movs	r1, #128
 3933 004c 8A43     		bics	r2, r1
 3934 004e 1A60     		str	r2, [r3]
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           __HAL_USART_DISABLE_IT(husart, USART_IT_RXNE);
 3935              		.loc 1 1694 0
 3936 0050 FB68     		ldr	r3, [r7, #12]
 3937 0052 1B68     		ldr	r3, [r3]
 3938 0054 FA68     		ldr	r2, [r7, #12]
 3939 0056 1268     		ldr	r2, [r2]
 3940 0058 1268     		ldr	r2, [r2]
 3941 005a 2021     		movs	r1, #32
 3942 005c 8A43     		bics	r2, r1
 3943 005e 1A60     		str	r2, [r3]
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           __HAL_USART_DISABLE_IT(husart, USART_IT_PE);
ARM GAS  /tmp/ccVFl28S.s 			page 99


 3944              		.loc 1 1695 0
 3945 0060 FB68     		ldr	r3, [r7, #12]
 3946 0062 1B68     		ldr	r3, [r3]
 3947 0064 FA68     		ldr	r2, [r7, #12]
 3948 0066 1268     		ldr	r2, [r2]
 3949 0068 1268     		ldr	r2, [r2]
 3950 006a 3149     		ldr	r1, .L229
 3951 006c 0A40     		ands	r2, r1
 3952 006e 1A60     		str	r2, [r3]
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           __HAL_USART_DISABLE_IT(husart, USART_IT_ERR);
 3953              		.loc 1 1696 0
 3954 0070 FB68     		ldr	r3, [r7, #12]
 3955 0072 1B68     		ldr	r3, [r3]
 3956 0074 FA68     		ldr	r2, [r7, #12]
 3957 0076 1268     		ldr	r2, [r2]
 3958 0078 9268     		ldr	r2, [r2, #8]
 3959 007a 0121     		movs	r1, #1
 3960 007c 8A43     		bics	r2, r1
 3961 007e 9A60     		str	r2, [r3, #8]
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           husart->State= HAL_USART_STATE_READY;
 3962              		.loc 1 1698 0
 3963 0080 FB68     		ldr	r3, [r7, #12]
 3964 0082 4122     		movs	r2, #65
 3965 0084 0121     		movs	r1, #1
 3966 0086 9954     		strb	r1, [r3, r2]
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           /* Process Unlocked */
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           __HAL_UNLOCK(husart);
 3967              		.loc 1 1701 0
 3968 0088 FB68     		ldr	r3, [r7, #12]
 3969 008a 4022     		movs	r2, #64
 3970 008c 0021     		movs	r1, #0
 3971 008e 9954     		strb	r1, [r3, r2]
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           return HAL_TIMEOUT;
 3972              		.loc 1 1703 0
 3973 0090 0323     		movs	r3, #3
 3974 0092 49E0     		b	.L223
 3975              	.L221:
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 3976              		.loc 1 1685 0
 3977 0094 FB68     		ldr	r3, [r7, #12]
 3978 0096 1B68     		ldr	r3, [r3]
 3979 0098 DB69     		ldr	r3, [r3, #28]
 3980 009a BA68     		ldr	r2, [r7, #8]
 3981 009c 1A40     		ands	r2, r3
 3982 009e BB68     		ldr	r3, [r7, #8]
 3983 00a0 9A42     		cmp	r2, r3
 3984 00a2 BFD1     		bne	.L224
 3985 00a4 3FE0     		b	.L225
 3986              	.L228:
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         }
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
ARM GAS  /tmp/ccVFl28S.s 			page 100


1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     while(__HAL_USART_GET_FLAG(husart, Flag) != RESET)
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Check for the Timeout */
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(Timeout != HAL_MAX_DELAY)
 3987              		.loc 1 1713 0
 3988 00a6 3B68     		ldr	r3, [r7]
 3989 00a8 0133     		adds	r3, r3, #1
 3990 00aa 34D0     		beq	.L226
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
 3991              		.loc 1 1715 0
 3992 00ac 3B68     		ldr	r3, [r7]
 3993 00ae 002B     		cmp	r3, #0
 3994 00b0 07D0     		beq	.L227
 3995              		.loc 1 1715 0 is_stmt 0 discriminator 1
 3996 00b2 FFF7FEFF 		bl	HAL_GetTick
 3997 00b6 0200     		movs	r2, r0
 3998 00b8 7B69     		ldr	r3, [r7, #20]
 3999 00ba D21A     		subs	r2, r2, r3
 4000 00bc 3B68     		ldr	r3, [r7]
 4001 00be 9A42     		cmp	r2, r3
 4002 00c0 29D9     		bls	.L226
 4003              	.L227:
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         {
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           __HAL_USART_DISABLE_IT(husart, USART_IT_TXE);
 4004              		.loc 1 1718 0 is_stmt 1
 4005 00c2 FB68     		ldr	r3, [r7, #12]
 4006 00c4 1B68     		ldr	r3, [r3]
 4007 00c6 FA68     		ldr	r2, [r7, #12]
 4008 00c8 1268     		ldr	r2, [r2]
 4009 00ca 1268     		ldr	r2, [r2]
 4010 00cc 8021     		movs	r1, #128
 4011 00ce 8A43     		bics	r2, r1
 4012 00d0 1A60     		str	r2, [r3]
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           __HAL_USART_DISABLE_IT(husart, USART_IT_RXNE);
 4013              		.loc 1 1719 0
 4014 00d2 FB68     		ldr	r3, [r7, #12]
 4015 00d4 1B68     		ldr	r3, [r3]
 4016 00d6 FA68     		ldr	r2, [r7, #12]
 4017 00d8 1268     		ldr	r2, [r2]
 4018 00da 1268     		ldr	r2, [r2]
 4019 00dc 2021     		movs	r1, #32
 4020 00de 8A43     		bics	r2, r1
 4021 00e0 1A60     		str	r2, [r3]
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           __HAL_USART_DISABLE_IT(husart, USART_IT_PE);
 4022              		.loc 1 1720 0
 4023 00e2 FB68     		ldr	r3, [r7, #12]
 4024 00e4 1B68     		ldr	r3, [r3]
 4025 00e6 FA68     		ldr	r2, [r7, #12]
 4026 00e8 1268     		ldr	r2, [r2]
 4027 00ea 1268     		ldr	r2, [r2]
 4028 00ec 1049     		ldr	r1, .L229
 4029 00ee 0A40     		ands	r2, r1
 4030 00f0 1A60     		str	r2, [r3]
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           __HAL_USART_DISABLE_IT(husart, USART_IT_ERR);
ARM GAS  /tmp/ccVFl28S.s 			page 101


 4031              		.loc 1 1721 0
 4032 00f2 FB68     		ldr	r3, [r7, #12]
 4033 00f4 1B68     		ldr	r3, [r3]
 4034 00f6 FA68     		ldr	r2, [r7, #12]
 4035 00f8 1268     		ldr	r2, [r2]
 4036 00fa 9268     		ldr	r2, [r2, #8]
 4037 00fc 0121     		movs	r1, #1
 4038 00fe 8A43     		bics	r2, r1
 4039 0100 9A60     		str	r2, [r3, #8]
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           husart->State= HAL_USART_STATE_READY;
 4040              		.loc 1 1723 0
 4041 0102 FB68     		ldr	r3, [r7, #12]
 4042 0104 4122     		movs	r2, #65
 4043 0106 0121     		movs	r1, #1
 4044 0108 9954     		strb	r1, [r3, r2]
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           /* Process Unlocked */
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           __HAL_UNLOCK(husart);
 4045              		.loc 1 1726 0
 4046 010a FB68     		ldr	r3, [r7, #12]
 4047 010c 4022     		movs	r2, #64
 4048 010e 0021     		movs	r1, #0
 4049 0110 9954     		strb	r1, [r3, r2]
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           return HAL_TIMEOUT;
 4050              		.loc 1 1728 0
 4051 0112 0323     		movs	r3, #3
 4052 0114 08E0     		b	.L223
 4053              	.L226:
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 4054              		.loc 1 1710 0
 4055 0116 FB68     		ldr	r3, [r7, #12]
 4056 0118 1B68     		ldr	r3, [r3]
 4057 011a DB69     		ldr	r3, [r3, #28]
 4058 011c BA68     		ldr	r2, [r7, #8]
 4059 011e 1A40     		ands	r2, r3
 4060 0120 BB68     		ldr	r3, [r7, #8]
 4061 0122 9A42     		cmp	r2, r3
 4062 0124 BFD0     		beq	.L228
 4063              	.L225:
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         }
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   return HAL_OK;
 4064              		.loc 1 1733 0
 4065 0126 0023     		movs	r3, #0
 4066              	.L223:
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 4067              		.loc 1 1734 0
 4068 0128 1800     		movs	r0, r3
 4069 012a BD46     		mov	sp, r7
 4070 012c 06B0     		add	sp, sp, #24
 4071              		@ sp needed
 4072 012e 80BD     		pop	{r7, pc}
 4073              	.L230:
ARM GAS  /tmp/ccVFl28S.s 			page 102


 4074              		.align	2
 4075              	.L229:
 4076 0130 FFFEFFFF 		.word	-257
 4077              		.cfi_endproc
 4078              	.LFE62:
 4080              		.section	.text.USART_DMATransmitCplt,"ax",%progbits
 4081              		.align	1
 4082              		.syntax unified
 4083              		.code	16
 4084              		.thumb_func
 4085              		.fpu softvfp
 4087              	USART_DMATransmitCplt:
 4088              	.LFB63:
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  DMA USART transmit process complete callback.
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  hdma: DMA handle
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static void USART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 4089              		.loc 1 1743 0
 4090              		.cfi_startproc
 4091 0000 80B5     		push	{r7, lr}
 4092              	.LCFI84:
 4093              		.cfi_def_cfa_offset 8
 4094              		.cfi_offset 7, -8
 4095              		.cfi_offset 14, -4
 4096 0002 84B0     		sub	sp, sp, #16
 4097              	.LCFI85:
 4098              		.cfi_def_cfa_offset 24
 4099 0004 00AF     		add	r7, sp, #0
 4100              	.LCFI86:
 4101              		.cfi_def_cfa_register 7
 4102 0006 7860     		str	r0, [r7, #4]
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   USART_HandleTypeDef* husart = ( USART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4103              		.loc 1 1744 0
 4104 0008 7B68     		ldr	r3, [r7, #4]
 4105 000a 5B6A     		ldr	r3, [r3, #36]
 4106 000c FB60     		str	r3, [r7, #12]
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* DMA Normal mode */
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 4107              		.loc 1 1747 0
 4108 000e 7B68     		ldr	r3, [r7, #4]
 4109 0010 1B68     		ldr	r3, [r3]
 4110 0012 1B68     		ldr	r3, [r3]
 4111 0014 2022     		movs	r2, #32
 4112 0016 1340     		ands	r3, r2
 4113 0018 19D1     		bne	.L232
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {  
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->TxXferCount = 0;
 4114              		.loc 1 1749 0
 4115 001a FB68     		ldr	r3, [r7, #12]
 4116 001c 0022     		movs	r2, #0
 4117 001e 5A85     		strh	r2, [r3, #42]
ARM GAS  /tmp/ccVFl28S.s 			page 103


1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(husart->State == HAL_USART_STATE_BUSY_TX)
 4118              		.loc 1 1751 0
 4119 0020 FB68     		ldr	r3, [r7, #12]
 4120 0022 4122     		movs	r2, #65
 4121 0024 9B5C     		ldrb	r3, [r3, r2]
 4122 0026 DBB2     		uxtb	r3, r3
 4123 0028 122B     		cmp	r3, #18
 4124 002a 1AD1     		bne	.L235
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Disable the DMA transfer for transmit request by resetting the DMAT bit
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****          in the USART CR3 register */
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->Instance->CR3 &= ~(USART_CR3_DMAT);
 4125              		.loc 1 1755 0
 4126 002c FB68     		ldr	r3, [r7, #12]
 4127 002e 1B68     		ldr	r3, [r3]
 4128 0030 FA68     		ldr	r2, [r7, #12]
 4129 0032 1268     		ldr	r2, [r2]
 4130 0034 9268     		ldr	r2, [r2, #8]
 4131 0036 8021     		movs	r1, #128
 4132 0038 8A43     		bics	r2, r1
 4133 003a 9A60     		str	r2, [r3, #8]
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Enable the USART Transmit Complete Interrupt */
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       __HAL_USART_ENABLE_IT(husart, USART_IT_TC);
 4134              		.loc 1 1758 0
 4135 003c FB68     		ldr	r3, [r7, #12]
 4136 003e 1B68     		ldr	r3, [r3]
 4137 0040 FA68     		ldr	r2, [r7, #12]
 4138 0042 1268     		ldr	r2, [r2]
 4139 0044 1268     		ldr	r2, [r2]
 4140 0046 4021     		movs	r1, #64
 4141 0048 0A43     		orrs	r2, r1
 4142 004a 1A60     		str	r2, [r3]
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* DMA Circular mode */
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(husart->State == HAL_USART_STATE_BUSY_TX)
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       HAL_USART_TxCpltCallback(husart);
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 4143              		.loc 1 1769 0
 4144 004c 09E0     		b	.L235
 4145              	.L232:
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 4146              		.loc 1 1764 0
 4147 004e FB68     		ldr	r3, [r7, #12]
 4148 0050 4122     		movs	r2, #65
 4149 0052 9B5C     		ldrb	r3, [r3, r2]
 4150 0054 DBB2     		uxtb	r3, r3
 4151 0056 122B     		cmp	r3, #18
 4152 0058 03D1     		bne	.L235
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
ARM GAS  /tmp/ccVFl28S.s 			page 104


 4153              		.loc 1 1766 0
 4154 005a FB68     		ldr	r3, [r7, #12]
 4155 005c 1800     		movs	r0, r3
 4156 005e FFF7FEFF 		bl	HAL_USART_TxCpltCallback
 4157              	.L235:
 4158              		.loc 1 1769 0
 4159 0062 C046     		nop
 4160 0064 BD46     		mov	sp, r7
 4161 0066 04B0     		add	sp, sp, #16
 4162              		@ sp needed
 4163 0068 80BD     		pop	{r7, pc}
 4164              		.cfi_endproc
 4165              	.LFE63:
 4167              		.section	.text.USART_DMATxHalfCplt,"ax",%progbits
 4168              		.align	1
 4169              		.syntax unified
 4170              		.code	16
 4171              		.thumb_func
 4172              		.fpu softvfp
 4174              	USART_DMATxHalfCplt:
 4175              	.LFB64:
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  DMA USART transmit process half complete callback.
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  hdma : DMA handle.
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static void USART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 4176              		.loc 1 1778 0
 4177              		.cfi_startproc
 4178 0000 80B5     		push	{r7, lr}
 4179              	.LCFI87:
 4180              		.cfi_def_cfa_offset 8
 4181              		.cfi_offset 7, -8
 4182              		.cfi_offset 14, -4
 4183 0002 84B0     		sub	sp, sp, #16
 4184              	.LCFI88:
 4185              		.cfi_def_cfa_offset 24
 4186 0004 00AF     		add	r7, sp, #0
 4187              	.LCFI89:
 4188              		.cfi_def_cfa_register 7
 4189 0006 7860     		str	r0, [r7, #4]
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   USART_HandleTypeDef* husart = (USART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4190              		.loc 1 1779 0
 4191 0008 7B68     		ldr	r3, [r7, #4]
 4192 000a 5B6A     		ldr	r3, [r3, #36]
 4193 000c FB60     		str	r3, [r7, #12]
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   HAL_USART_TxHalfCpltCallback(husart);
 4194              		.loc 1 1781 0
 4195 000e FB68     		ldr	r3, [r7, #12]
 4196 0010 1800     		movs	r0, r3
 4197 0012 FFF7FEFF 		bl	HAL_USART_TxHalfCpltCallback
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 4198              		.loc 1 1782 0
ARM GAS  /tmp/ccVFl28S.s 			page 105


 4199 0016 C046     		nop
 4200 0018 BD46     		mov	sp, r7
 4201 001a 04B0     		add	sp, sp, #16
 4202              		@ sp needed
 4203 001c 80BD     		pop	{r7, pc}
 4204              		.cfi_endproc
 4205              	.LFE64:
 4207              		.section	.text.USART_DMAReceiveCplt,"ax",%progbits
 4208              		.align	1
 4209              		.syntax unified
 4210              		.code	16
 4211              		.thumb_func
 4212              		.fpu softvfp
 4214              	USART_DMAReceiveCplt:
 4215              	.LFB65:
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  DMA USART receive process complete callback.
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  hdma: DMA handle.
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static void USART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 4216              		.loc 1 1790 0
 4217              		.cfi_startproc
 4218 0000 80B5     		push	{r7, lr}
 4219              	.LCFI90:
 4220              		.cfi_def_cfa_offset 8
 4221              		.cfi_offset 7, -8
 4222              		.cfi_offset 14, -4
 4223 0002 84B0     		sub	sp, sp, #16
 4224              	.LCFI91:
 4225              		.cfi_def_cfa_offset 24
 4226 0004 00AF     		add	r7, sp, #0
 4227              	.LCFI92:
 4228              		.cfi_def_cfa_register 7
 4229 0006 7860     		str	r0, [r7, #4]
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   USART_HandleTypeDef* husart = ( USART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4230              		.loc 1 1791 0
 4231 0008 7B68     		ldr	r3, [r7, #4]
 4232 000a 5B6A     		ldr	r3, [r3, #36]
 4233 000c FB60     		str	r3, [r7, #12]
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* DMA Normal mode */
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 4234              		.loc 1 1794 0
 4235 000e 7B68     		ldr	r3, [r7, #4]
 4236 0010 1B68     		ldr	r3, [r3]
 4237 0012 1B68     		ldr	r3, [r3]
 4238 0014 2022     		movs	r2, #32
 4239 0016 1340     		ands	r3, r2
 4240 0018 26D1     		bne	.L238
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->RxXferCount = 0;
 4241              		.loc 1 1796 0
 4242 001a FB68     		ldr	r3, [r7, #12]
 4243 001c 0022     		movs	r2, #0
ARM GAS  /tmp/ccVFl28S.s 			page 106


 4244 001e 5A86     		strh	r2, [r3, #50]
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Disable the DMA RX transfer for the receiver request by resetting the DMAR bit
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        in USART CR3 register */
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DMAR);
 4245              		.loc 1 1800 0
 4246 0020 FB68     		ldr	r3, [r7, #12]
 4247 0022 1B68     		ldr	r3, [r3]
 4248 0024 FA68     		ldr	r2, [r7, #12]
 4249 0026 1268     		ldr	r2, [r2]
 4250 0028 9268     		ldr	r2, [r2, #8]
 4251 002a 4021     		movs	r1, #64
 4252 002c 8A43     		bics	r2, r1
 4253 002e 9A60     		str	r2, [r3, #8]
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* similarly, disable the DMA TX transfer that was started to provide the
1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****        clock to the slave device */
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DMAT);
 4254              		.loc 1 1803 0
 4255 0030 FB68     		ldr	r3, [r7, #12]
 4256 0032 1B68     		ldr	r3, [r3]
 4257 0034 FA68     		ldr	r2, [r7, #12]
 4258 0036 1268     		ldr	r2, [r2]
 4259 0038 9268     		ldr	r2, [r2, #8]
 4260 003a 8021     		movs	r1, #128
 4261 003c 8A43     		bics	r2, r1
 4262 003e 9A60     		str	r2, [r3, #8]
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(husart->State == HAL_USART_STATE_BUSY_RX)
 4263              		.loc 1 1805 0
 4264 0040 FB68     		ldr	r3, [r7, #12]
 4265 0042 4122     		movs	r2, #65
 4266 0044 9B5C     		ldrb	r3, [r3, r2]
 4267 0046 DBB2     		uxtb	r3, r3
 4268 0048 222B     		cmp	r3, #34
 4269 004a 04D1     		bne	.L239
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       HAL_USART_RxCpltCallback(husart);
 4270              		.loc 1 1807 0
 4271 004c FB68     		ldr	r3, [r7, #12]
 4272 004e 1800     		movs	r0, r3
 4273 0050 FFF7FEFF 		bl	HAL_USART_RxCpltCallback
 4274 0054 03E0     		b	.L240
 4275              	.L239:
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* The USART state is HAL_USART_STATE_BUSY_TX_RX */
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     else
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       HAL_USART_TxRxCpltCallback(husart);
 4276              		.loc 1 1812 0
 4277 0056 FB68     		ldr	r3, [r7, #12]
 4278 0058 1800     		movs	r0, r3
 4279 005a FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 4280              	.L240:
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->State= HAL_USART_STATE_READY;
 4281              		.loc 1 1814 0
 4282 005e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccVFl28S.s 			page 107


 4283 0060 4122     		movs	r2, #65
 4284 0062 0121     		movs	r1, #1
 4285 0064 9954     		strb	r1, [r3, r2]
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* DMA circular mode */
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(husart->State == HAL_USART_STATE_BUSY_RX)
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       HAL_USART_RxCpltCallback(husart);
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* The USART state is HAL_USART_STATE_BUSY_TX_RX */
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     else
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       HAL_USART_TxRxCpltCallback(husart);
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }    
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 4286              		.loc 1 1830 0
 4287 0066 0EE0     		b	.L243
 4288              	.L238:
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
 4289              		.loc 1 1819 0
 4290 0068 FB68     		ldr	r3, [r7, #12]
 4291 006a 4122     		movs	r2, #65
 4292 006c 9B5C     		ldrb	r3, [r3, r2]
 4293 006e DBB2     		uxtb	r3, r3
 4294 0070 222B     		cmp	r3, #34
 4295 0072 04D1     		bne	.L242
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 4296              		.loc 1 1821 0
 4297 0074 FB68     		ldr	r3, [r7, #12]
 4298 0076 1800     		movs	r0, r3
 4299 0078 FFF7FEFF 		bl	HAL_USART_RxCpltCallback
 4300              		.loc 1 1830 0
 4301 007c 03E0     		b	.L243
 4302              	.L242:
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
 4303              		.loc 1 1826 0
 4304 007e FB68     		ldr	r3, [r7, #12]
 4305 0080 1800     		movs	r0, r3
 4306 0082 FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 4307              	.L243:
 4308              		.loc 1 1830 0
 4309 0086 C046     		nop
 4310 0088 BD46     		mov	sp, r7
 4311 008a 04B0     		add	sp, sp, #16
 4312              		@ sp needed
 4313 008c 80BD     		pop	{r7, pc}
 4314              		.cfi_endproc
 4315              	.LFE65:
 4317              		.section	.text.USART_DMARxHalfCplt,"ax",%progbits
 4318              		.align	1
 4319              		.syntax unified
 4320              		.code	16
 4321              		.thumb_func
ARM GAS  /tmp/ccVFl28S.s 			page 108


 4322              		.fpu softvfp
 4324              	USART_DMARxHalfCplt:
 4325              	.LFB66:
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  DMA USART receive process half complete callback.
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  hdma : DMA handle.
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static void USART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 4326              		.loc 1 1838 0
 4327              		.cfi_startproc
 4328 0000 80B5     		push	{r7, lr}
 4329              	.LCFI93:
 4330              		.cfi_def_cfa_offset 8
 4331              		.cfi_offset 7, -8
 4332              		.cfi_offset 14, -4
 4333 0002 84B0     		sub	sp, sp, #16
 4334              	.LCFI94:
 4335              		.cfi_def_cfa_offset 24
 4336 0004 00AF     		add	r7, sp, #0
 4337              	.LCFI95:
 4338              		.cfi_def_cfa_register 7
 4339 0006 7860     		str	r0, [r7, #4]
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   USART_HandleTypeDef* husart = (USART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4340              		.loc 1 1839 0
 4341 0008 7B68     		ldr	r3, [r7, #4]
 4342 000a 5B6A     		ldr	r3, [r3, #36]
 4343 000c FB60     		str	r3, [r7, #12]
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   HAL_USART_RxHalfCpltCallback(husart);
 4344              		.loc 1 1841 0
 4345 000e FB68     		ldr	r3, [r7, #12]
 4346 0010 1800     		movs	r0, r3
 4347 0012 FFF7FEFF 		bl	HAL_USART_RxHalfCpltCallback
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 4348              		.loc 1 1842 0
 4349 0016 C046     		nop
 4350 0018 BD46     		mov	sp, r7
 4351 001a 04B0     		add	sp, sp, #16
 4352              		@ sp needed
 4353 001c 80BD     		pop	{r7, pc}
 4354              		.cfi_endproc
 4355              	.LFE66:
 4357              		.section	.text.USART_DMAError,"ax",%progbits
 4358              		.align	1
 4359              		.syntax unified
 4360              		.code	16
 4361              		.thumb_func
 4362              		.fpu softvfp
 4364              	USART_DMAError:
 4365              	.LFB67:
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  DMA USART communication error callback.
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  hdma: DMA handle.
ARM GAS  /tmp/ccVFl28S.s 			page 109


1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval None
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static void USART_DMAError(DMA_HandleTypeDef *hdma)
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 4366              		.loc 1 1850 0
 4367              		.cfi_startproc
 4368 0000 80B5     		push	{r7, lr}
 4369              	.LCFI96:
 4370              		.cfi_def_cfa_offset 8
 4371              		.cfi_offset 7, -8
 4372              		.cfi_offset 14, -4
 4373 0002 84B0     		sub	sp, sp, #16
 4374              	.LCFI97:
 4375              		.cfi_def_cfa_offset 24
 4376 0004 00AF     		add	r7, sp, #0
 4377              	.LCFI98:
 4378              		.cfi_def_cfa_register 7
 4379 0006 7860     		str	r0, [r7, #4]
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   USART_HandleTypeDef* husart = ( USART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4380              		.loc 1 1851 0
 4381 0008 7B68     		ldr	r3, [r7, #4]
 4382 000a 5B6A     		ldr	r3, [r3, #36]
 4383 000c FB60     		str	r3, [r7, #12]
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->RxXferCount = 0;
 4384              		.loc 1 1853 0
 4385 000e FB68     		ldr	r3, [r7, #12]
 4386 0010 0022     		movs	r2, #0
 4387 0012 5A86     		strh	r2, [r3, #50]
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->TxXferCount = 0;
 4388              		.loc 1 1854 0
 4389 0014 FB68     		ldr	r3, [r7, #12]
 4390 0016 0022     		movs	r2, #0
 4391 0018 5A85     		strh	r2, [r3, #42]
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->ErrorCode |= HAL_USART_ERROR_DMA;
 4392              		.loc 1 1855 0
 4393 001a FB68     		ldr	r3, [r7, #12]
 4394 001c 5B6C     		ldr	r3, [r3, #68]
 4395 001e 1022     		movs	r2, #16
 4396 0020 1A43     		orrs	r2, r3
 4397 0022 FB68     		ldr	r3, [r7, #12]
 4398 0024 5A64     		str	r2, [r3, #68]
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->State= HAL_USART_STATE_READY;
 4399              		.loc 1 1856 0
 4400 0026 FB68     		ldr	r3, [r7, #12]
 4401 0028 4122     		movs	r2, #65
 4402 002a 0121     		movs	r1, #1
 4403 002c 9954     		strb	r1, [r3, r2]
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   HAL_USART_ErrorCallback(husart);
 4404              		.loc 1 1858 0
 4405 002e FB68     		ldr	r3, [r7, #12]
 4406 0030 1800     		movs	r0, r3
 4407 0032 FFF7FEFF 		bl	HAL_USART_ErrorCallback
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 4408              		.loc 1 1859 0
 4409 0036 C046     		nop
ARM GAS  /tmp/ccVFl28S.s 			page 110


 4410 0038 BD46     		mov	sp, r7
 4411 003a 04B0     		add	sp, sp, #16
 4412              		@ sp needed
 4413 003c 80BD     		pop	{r7, pc}
 4414              		.cfi_endproc
 4415              	.LFE67:
 4417              		.section	.text.USART_Transmit_IT,"ax",%progbits
 4418              		.align	1
 4419              		.syntax unified
 4420              		.code	16
 4421              		.thumb_func
 4422              		.fpu softvfp
 4424              	USART_Transmit_IT:
 4425              	.LFB68:
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Simplex send an amount of data in non-blocking mode.
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   Function called under interruption only, once
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         interruptions have been enabled by HAL_USART_Transmit_IT().
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   The USART errors are not managed to avoid the overrun error.
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_Transmit_IT(USART_HandleTypeDef *husart)
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 4426              		.loc 1 1870 0
 4427              		.cfi_startproc
 4428 0000 80B5     		push	{r7, lr}
 4429              	.LCFI99:
 4430              		.cfi_def_cfa_offset 8
 4431              		.cfi_offset 7, -8
 4432              		.cfi_offset 14, -4
 4433 0002 84B0     		sub	sp, sp, #16
 4434              	.LCFI100:
 4435              		.cfi_def_cfa_offset 24
 4436 0004 00AF     		add	r7, sp, #0
 4437              	.LCFI101:
 4438              		.cfi_def_cfa_register 7
 4439 0006 7860     		str	r0, [r7, #4]
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t* tmp=0;
 4440              		.loc 1 1871 0
 4441 0008 0023     		movs	r3, #0
 4442 000a FB60     		str	r3, [r7, #12]
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_BUSY_TX)
 4443              		.loc 1 1873 0
 4444 000c 7B68     		ldr	r3, [r7, #4]
 4445 000e 4122     		movs	r2, #65
 4446 0010 9B5C     		ldrb	r3, [r3, r2]
 4447 0012 DBB2     		uxtb	r3, r3
 4448 0014 122B     		cmp	r3, #18
 4449 0016 42D1     		bne	.L247
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(husart->TxXferCount == 0)
 4450              		.loc 1 1876 0
 4451 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVFl28S.s 			page 111


 4452 001a 5B8D     		ldrh	r3, [r3, #42]
 4453 001c 002B     		cmp	r3, #0
 4454 001e 11D1     		bne	.L248
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Disable the USART Transmit data register empty interrupt */
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       __HAL_USART_DISABLE_IT(husart, USART_IT_TXE);
 4455              		.loc 1 1879 0
 4456 0020 7B68     		ldr	r3, [r7, #4]
 4457 0022 1B68     		ldr	r3, [r3]
 4458 0024 7A68     		ldr	r2, [r7, #4]
 4459 0026 1268     		ldr	r2, [r2]
 4460 0028 1268     		ldr	r2, [r2]
 4461 002a 8021     		movs	r1, #128
 4462 002c 8A43     		bics	r2, r1
 4463 002e 1A60     		str	r2, [r3]
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Enable the USART Transmit Complete Interrupt */
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       __HAL_USART_ENABLE_IT(husart, USART_IT_TC);
 4464              		.loc 1 1882 0
 4465 0030 7B68     		ldr	r3, [r7, #4]
 4466 0032 1B68     		ldr	r3, [r3]
 4467 0034 7A68     		ldr	r2, [r7, #4]
 4468 0036 1268     		ldr	r2, [r2]
 4469 0038 1268     		ldr	r2, [r2]
 4470 003a 4021     		movs	r1, #64
 4471 003c 0A43     		orrs	r2, r1
 4472 003e 1A60     		str	r2, [r3]
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return HAL_OK;
 4473              		.loc 1 1884 0
 4474 0040 0023     		movs	r3, #0
 4475 0042 2DE0     		b	.L249
 4476              	.L248:
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     else
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_N
 4477              		.loc 1 1888 0
 4478 0044 7B68     		ldr	r3, [r7, #4]
 4479 0046 9A68     		ldr	r2, [r3, #8]
 4480 0048 8023     		movs	r3, #128
 4481 004a 5B01     		lsls	r3, r3, #5
 4482 004c 9A42     		cmp	r2, r3
 4483 004e 14D1     		bne	.L250
 4484              		.loc 1 1888 0 is_stmt 0 discriminator 1
 4485 0050 7B68     		ldr	r3, [r7, #4]
 4486 0052 1B69     		ldr	r3, [r3, #16]
 4487 0054 002B     		cmp	r3, #0
 4488 0056 10D1     		bne	.L250
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         tmp = (uint16_t*) husart->pTxBuffPtr;
 4489              		.loc 1 1890 0 is_stmt 1
 4490 0058 7B68     		ldr	r3, [r7, #4]
 4491 005a 5B6A     		ldr	r3, [r3, #36]
 4492 005c FB60     		str	r3, [r7, #12]
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         husart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 4493              		.loc 1 1891 0
ARM GAS  /tmp/ccVFl28S.s 			page 112


 4494 005e 7B68     		ldr	r3, [r7, #4]
 4495 0060 1B68     		ldr	r3, [r3]
 4496 0062 FA68     		ldr	r2, [r7, #12]
 4497 0064 1288     		ldrh	r2, [r2]
 4498 0066 D205     		lsls	r2, r2, #23
 4499 0068 D20D     		lsrs	r2, r2, #23
 4500 006a 92B2     		uxth	r2, r2
 4501 006c 1A85     		strh	r2, [r3, #40]
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         husart->pTxBuffPtr += 2;
 4502              		.loc 1 1892 0
 4503 006e 7B68     		ldr	r3, [r7, #4]
 4504 0070 5B6A     		ldr	r3, [r3, #36]
 4505 0072 9A1C     		adds	r2, r3, #2
 4506 0074 7B68     		ldr	r3, [r7, #4]
 4507 0076 5A62     		str	r2, [r3, #36]
 4508 0078 09E0     		b	.L251
 4509              	.L250:
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       else
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         husart->Instance->TDR = (uint8_t)(*husart->pTxBuffPtr++ & (uint8_t)0xFF);
 4510              		.loc 1 1896 0
 4511 007a 7B68     		ldr	r3, [r7, #4]
 4512 007c 1968     		ldr	r1, [r3]
 4513 007e 7B68     		ldr	r3, [r7, #4]
 4514 0080 5B6A     		ldr	r3, [r3, #36]
 4515 0082 581C     		adds	r0, r3, #1
 4516 0084 7A68     		ldr	r2, [r7, #4]
 4517 0086 5062     		str	r0, [r2, #36]
 4518 0088 1B78     		ldrb	r3, [r3]
 4519 008a 9BB2     		uxth	r3, r3
 4520 008c 0B85     		strh	r3, [r1, #40]
 4521              	.L251:
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->TxXferCount--;
 4522              		.loc 1 1899 0
 4523 008e 7B68     		ldr	r3, [r7, #4]
 4524 0090 5B8D     		ldrh	r3, [r3, #42]
 4525 0092 013B     		subs	r3, r3, #1
 4526 0094 9AB2     		uxth	r2, r3
 4527 0096 7B68     		ldr	r3, [r7, #4]
 4528 0098 5A85     		strh	r2, [r3, #42]
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return HAL_OK;
 4529              		.loc 1 1901 0
 4530 009a 0023     		movs	r3, #0
 4531 009c 00E0     		b	.L249
 4532              	.L247:
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 4533              		.loc 1 1906 0
 4534 009e 0223     		movs	r3, #2
 4535              	.L249:
ARM GAS  /tmp/ccVFl28S.s 			page 113


1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 4536              		.loc 1 1908 0
 4537 00a0 1800     		movs	r0, r3
 4538 00a2 BD46     		mov	sp, r7
 4539 00a4 04B0     		add	sp, sp, #16
 4540              		@ sp needed
 4541 00a6 80BD     		pop	{r7, pc}
 4542              		.cfi_endproc
 4543              	.LFE68:
 4545              		.section	.text.USART_EndTransmit_IT,"ax",%progbits
 4546              		.align	1
 4547              		.syntax unified
 4548              		.code	16
 4549              		.thumb_func
 4550              		.fpu softvfp
 4552              	USART_EndTransmit_IT:
 4553              	.LFB69:
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Wraps up transmission in non-blocking mode.
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param  husart: pointer to a USART_HandleTypeDef structure that contains
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *                the configuration information for the specified USART module.
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_EndTransmit_IT(USART_HandleTypeDef *husart)
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 4554              		.loc 1 1918 0
 4555              		.cfi_startproc
 4556 0000 80B5     		push	{r7, lr}
 4557              	.LCFI102:
 4558              		.cfi_def_cfa_offset 8
 4559              		.cfi_offset 7, -8
 4560              		.cfi_offset 14, -4
 4561 0002 82B0     		sub	sp, sp, #8
 4562              	.LCFI103:
 4563              		.cfi_def_cfa_offset 16
 4564 0004 00AF     		add	r7, sp, #0
 4565              	.LCFI104:
 4566              		.cfi_def_cfa_register 7
 4567 0006 7860     		str	r0, [r7, #4]
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Disable the USART Transmit Complete Interrupt */
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   __HAL_USART_DISABLE_IT(husart, USART_IT_TC);
 4568              		.loc 1 1920 0
 4569 0008 7B68     		ldr	r3, [r7, #4]
 4570 000a 1B68     		ldr	r3, [r3]
 4571 000c 7A68     		ldr	r2, [r7, #4]
 4572 000e 1268     		ldr	r2, [r2]
 4573 0010 1268     		ldr	r2, [r2]
 4574 0012 4021     		movs	r1, #64
 4575 0014 8A43     		bics	r2, r1
 4576 0016 1A60     		str	r2, [r3]
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   __HAL_USART_DISABLE_IT(husart, USART_IT_ERR);
 4577              		.loc 1 1923 0
ARM GAS  /tmp/ccVFl28S.s 			page 114


 4578 0018 7B68     		ldr	r3, [r7, #4]
 4579 001a 1B68     		ldr	r3, [r3]
 4580 001c 7A68     		ldr	r2, [r7, #4]
 4581 001e 1268     		ldr	r2, [r2]
 4582 0020 9268     		ldr	r2, [r2, #8]
 4583 0022 0121     		movs	r1, #1
 4584 0024 8A43     		bics	r2, r1
 4585 0026 9A60     		str	r2, [r3, #8]
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 4586              		.loc 1 1925 0
 4587 0028 7B68     		ldr	r3, [r7, #4]
 4588 002a 4122     		movs	r2, #65
 4589 002c 0121     		movs	r1, #1
 4590 002e 9954     		strb	r1, [r3, r2]
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   HAL_USART_TxCpltCallback(husart);
 4591              		.loc 1 1927 0
 4592 0030 7B68     		ldr	r3, [r7, #4]
 4593 0032 1800     		movs	r0, r3
 4594 0034 FFF7FEFF 		bl	HAL_USART_TxCpltCallback
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   return HAL_OK;
 4595              		.loc 1 1929 0
 4596 0038 0023     		movs	r3, #0
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 4597              		.loc 1 1930 0
 4598 003a 1800     		movs	r0, r3
 4599 003c BD46     		mov	sp, r7
 4600 003e 02B0     		add	sp, sp, #8
 4601              		@ sp needed
 4602 0040 80BD     		pop	{r7, pc}
 4603              		.cfi_endproc
 4604              	.LFE69:
 4606              		.section	.text.USART_Receive_IT,"ax",%progbits
 4607              		.align	1
 4608              		.syntax unified
 4609              		.code	16
 4610              		.thumb_func
 4611              		.fpu softvfp
 4613              	USART_Receive_IT:
 4614              	.LFB70:
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Simplex receive an amount of data in non-blocking mode.
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   Function called under interruption only, once
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         interruptions have been enabled by HAL_USART_Receive_IT().
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_Receive_IT(USART_HandleTypeDef *husart)
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 4615              		.loc 1 1941 0
 4616              		.cfi_startproc
 4617 0000 80B5     		push	{r7, lr}
 4618              	.LCFI105:
ARM GAS  /tmp/ccVFl28S.s 			page 115


 4619              		.cfi_def_cfa_offset 8
 4620              		.cfi_offset 7, -8
 4621              		.cfi_offset 14, -4
 4622 0002 84B0     		sub	sp, sp, #16
 4623              	.LCFI106:
 4624              		.cfi_def_cfa_offset 24
 4625 0004 00AF     		add	r7, sp, #0
 4626              	.LCFI107:
 4627              		.cfi_def_cfa_register 7
 4628 0006 7860     		str	r0, [r7, #4]
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t* tmp=0;
 4629              		.loc 1 1942 0
 4630 0008 0023     		movs	r3, #0
 4631 000a FB60     		str	r3, [r7, #12]
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t uhMask = husart->Mask;
 4632              		.loc 1 1943 0
 4633 000c 0A23     		movs	r3, #10
 4634 000e FB18     		adds	r3, r7, r3
 4635 0010 7A68     		ldr	r2, [r7, #4]
 4636 0012 928E     		ldrh	r2, [r2, #52]
 4637 0014 1A80     		strh	r2, [r3]
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_BUSY_RX)
 4638              		.loc 1 1945 0
 4639 0016 7B68     		ldr	r3, [r7, #4]
 4640 0018 4122     		movs	r2, #65
 4641 001a 9B5C     		ldrb	r3, [r3, r2]
 4642 001c DBB2     		uxtb	r3, r3
 4643 001e 222B     		cmp	r3, #34
 4644 0020 60D1     		bne	.L255
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NON
 4645              		.loc 1 1948 0
 4646 0022 7B68     		ldr	r3, [r7, #4]
 4647 0024 9A68     		ldr	r2, [r3, #8]
 4648 0026 8023     		movs	r3, #128
 4649 0028 5B01     		lsls	r3, r3, #5
 4650 002a 9A42     		cmp	r2, r3
 4651 002c 17D1     		bne	.L256
 4652              		.loc 1 1948 0 is_stmt 0 discriminator 1
 4653 002e 7B68     		ldr	r3, [r7, #4]
 4654 0030 1B69     		ldr	r3, [r3, #16]
 4655 0032 002B     		cmp	r3, #0
 4656 0034 13D1     		bne	.L256
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       tmp = (uint16_t*) husart->pRxBuffPtr;
 4657              		.loc 1 1950 0 is_stmt 1
 4658 0036 7B68     		ldr	r3, [r7, #4]
 4659 0038 DB6A     		ldr	r3, [r3, #44]
 4660 003a FB60     		str	r3, [r7, #12]
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       *tmp = (uint16_t)(husart->Instance->RDR & uhMask);
 4661              		.loc 1 1951 0
 4662 003c 7B68     		ldr	r3, [r7, #4]
 4663 003e 1B68     		ldr	r3, [r3]
 4664 0040 9B8C     		ldrh	r3, [r3, #36]
 4665 0042 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccVFl28S.s 			page 116


 4666 0044 0A22     		movs	r2, #10
 4667 0046 BA18     		adds	r2, r7, r2
 4668 0048 1288     		ldrh	r2, [r2]
 4669 004a 1340     		ands	r3, r2
 4670 004c 9AB2     		uxth	r2, r3
 4671 004e FB68     		ldr	r3, [r7, #12]
 4672 0050 1A80     		strh	r2, [r3]
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->pRxBuffPtr += 2;
 4673              		.loc 1 1952 0
 4674 0052 7B68     		ldr	r3, [r7, #4]
 4675 0054 DB6A     		ldr	r3, [r3, #44]
 4676 0056 9A1C     		adds	r2, r3, #2
 4677 0058 7B68     		ldr	r3, [r7, #4]
 4678 005a DA62     		str	r2, [r3, #44]
 4679 005c 10E0     		b	.L257
 4680              	.L256:
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     else
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       *husart->pRxBuffPtr++ = (uint8_t)(husart->Instance->RDR & (uint8_t)uhMask);
 4681              		.loc 1 1956 0
 4682 005e 7B68     		ldr	r3, [r7, #4]
 4683 0060 DB6A     		ldr	r3, [r3, #44]
 4684 0062 591C     		adds	r1, r3, #1
 4685 0064 7A68     		ldr	r2, [r7, #4]
 4686 0066 D162     		str	r1, [r2, #44]
 4687 0068 7A68     		ldr	r2, [r7, #4]
 4688 006a 1268     		ldr	r2, [r2]
 4689 006c 928C     		ldrh	r2, [r2, #36]
 4690 006e 92B2     		uxth	r2, r2
 4691 0070 D2B2     		uxtb	r2, r2
 4692 0072 0A21     		movs	r1, #10
 4693 0074 7918     		adds	r1, r7, r1
 4694 0076 0988     		ldrh	r1, [r1]
 4695 0078 C9B2     		uxtb	r1, r1
 4696 007a 0A40     		ands	r2, r1
 4697 007c D2B2     		uxtb	r2, r2
 4698 007e 1A70     		strb	r2, [r3]
 4699              	.L257:
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Send dummy byte in order to generate the clock for the Slave to Send the next data */
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x00FF);
 4700              		.loc 1 1960 0
 4701 0080 7B68     		ldr	r3, [r7, #4]
 4702 0082 1B68     		ldr	r3, [r3]
 4703 0084 FF22     		movs	r2, #255
 4704 0086 1A85     		strh	r2, [r3, #40]
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(--husart->RxXferCount == 0)
 4705              		.loc 1 1962 0
 4706 0088 7B68     		ldr	r3, [r7, #4]
 4707 008a 5B8E     		ldrh	r3, [r3, #50]
 4708 008c 013B     		subs	r3, r3, #1
 4709 008e 9AB2     		uxth	r2, r3
 4710 0090 7B68     		ldr	r3, [r7, #4]
 4711 0092 5A86     		strh	r2, [r3, #50]
ARM GAS  /tmp/ccVFl28S.s 			page 117


 4712 0094 7B68     		ldr	r3, [r7, #4]
 4713 0096 5B8E     		ldrh	r3, [r3, #50]
 4714 0098 002B     		cmp	r3, #0
 4715 009a 21D1     		bne	.L258
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       __HAL_USART_DISABLE_IT(husart, USART_IT_RXNE);
 4716              		.loc 1 1964 0
 4717 009c 7B68     		ldr	r3, [r7, #4]
 4718 009e 1B68     		ldr	r3, [r3]
 4719 00a0 7A68     		ldr	r2, [r7, #4]
 4720 00a2 1268     		ldr	r2, [r2]
 4721 00a4 1268     		ldr	r2, [r2]
 4722 00a6 2021     		movs	r1, #32
 4723 00a8 8A43     		bics	r2, r1
 4724 00aa 1A60     		str	r2, [r3]
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Disable the USART Parity Error Interrupt */
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       __HAL_USART_DISABLE_IT(husart, USART_IT_PE);
 4725              		.loc 1 1967 0
 4726 00ac 7B68     		ldr	r3, [r7, #4]
 4727 00ae 1B68     		ldr	r3, [r3]
 4728 00b0 7A68     		ldr	r2, [r7, #4]
 4729 00b2 1268     		ldr	r2, [r2]
 4730 00b4 1268     		ldr	r2, [r2]
 4731 00b6 0E49     		ldr	r1, .L260
 4732 00b8 0A40     		ands	r2, r1
 4733 00ba 1A60     		str	r2, [r3]
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       __HAL_USART_DISABLE_IT(husart, USART_IT_ERR);
 4734              		.loc 1 1970 0
 4735 00bc 7B68     		ldr	r3, [r7, #4]
 4736 00be 1B68     		ldr	r3, [r3]
 4737 00c0 7A68     		ldr	r2, [r7, #4]
 4738 00c2 1268     		ldr	r2, [r2]
 4739 00c4 9268     		ldr	r2, [r2, #8]
 4740 00c6 0121     		movs	r1, #1
 4741 00c8 8A43     		bics	r2, r1
 4742 00ca 9A60     		str	r2, [r3, #8]
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->State = HAL_USART_STATE_READY;
 4743              		.loc 1 1972 0
 4744 00cc 7B68     		ldr	r3, [r7, #4]
 4745 00ce 4122     		movs	r2, #65
 4746 00d0 0121     		movs	r1, #1
 4747 00d2 9954     		strb	r1, [r3, r2]
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       HAL_USART_RxCpltCallback(husart);
 4748              		.loc 1 1974 0
 4749 00d4 7B68     		ldr	r3, [r7, #4]
 4750 00d6 1800     		movs	r0, r3
 4751 00d8 FFF7FEFF 		bl	HAL_USART_RxCpltCallback
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return HAL_OK;
 4752              		.loc 1 1976 0
 4753 00dc 0023     		movs	r3, #0
 4754 00de 02E0     		b	.L259
ARM GAS  /tmp/ccVFl28S.s 			page 118


 4755              	.L258:
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_OK;
 4756              		.loc 1 1979 0
 4757 00e0 0023     		movs	r3, #0
 4758 00e2 00E0     		b	.L259
 4759              	.L255:
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 4760              		.loc 1 1983 0
 4761 00e4 0223     		movs	r3, #2
 4762              	.L259:
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 4763              		.loc 1 1985 0
 4764 00e6 1800     		movs	r0, r3
 4765 00e8 BD46     		mov	sp, r7
 4766 00ea 04B0     		add	sp, sp, #16
 4767              		@ sp needed
 4768 00ec 80BD     		pop	{r7, pc}
 4769              	.L261:
 4770 00ee C046     		.align	2
 4771              	.L260:
 4772 00f0 FFFEFFFF 		.word	-257
 4773              		.cfi_endproc
 4774              	.LFE70:
 4776              		.section	.text.USART_TransmitReceive_IT,"ax",%progbits
 4777              		.align	1
 4778              		.syntax unified
 4779              		.code	16
 4780              		.thumb_func
 4781              		.fpu softvfp
 4783              	USART_TransmitReceive_IT:
 4784              	.LFB71:
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** /**
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @brief  Full-Duplex Send receive an amount of data in full-duplex mode (non-blocking).
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @note   Function called under interruption only, once
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   *         interruptions have been enabled by HAL_USART_TransmitReceive_IT().
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @param husart: USART handle.
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   * @retval HAL status
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   */
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** static HAL_StatusTypeDef USART_TransmitReceive_IT(USART_HandleTypeDef *husart)
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** {
 4785              		.loc 1 1995 0
 4786              		.cfi_startproc
 4787 0000 80B5     		push	{r7, lr}
 4788              	.LCFI108:
 4789              		.cfi_def_cfa_offset 8
 4790              		.cfi_offset 7, -8
 4791              		.cfi_offset 14, -4
 4792 0002 84B0     		sub	sp, sp, #16
 4793              	.LCFI109:
 4794              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccVFl28S.s 			page 119


 4795 0004 00AF     		add	r7, sp, #0
 4796              	.LCFI110:
 4797              		.cfi_def_cfa_register 7
 4798 0006 7860     		str	r0, [r7, #4]
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t* tmp=0;
 4799              		.loc 1 1996 0
 4800 0008 0023     		movs	r3, #0
 4801 000a FB60     		str	r3, [r7, #12]
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   uint16_t uhMask = husart->Mask;
 4802              		.loc 1 1997 0
 4803 000c 0A23     		movs	r3, #10
 4804 000e FB18     		adds	r3, r7, r3
 4805 0010 7A68     		ldr	r2, [r7, #4]
 4806 0012 928E     		ldrh	r2, [r2, #52]
 4807 0014 1A80     		strh	r2, [r3]
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   if(husart->State == HAL_USART_STATE_BUSY_TX_RX)
 4808              		.loc 1 1999 0
 4809 0016 7B68     		ldr	r3, [r7, #4]
 4810 0018 4122     		movs	r2, #65
 4811 001a 9B5C     		ldrb	r3, [r3, r2]
 4812 001c DBB2     		uxtb	r3, r3
 4813 001e 322B     		cmp	r3, #50
 4814 0020 00D0     		beq	.LCB4327
 4815 0022 B1E0     		b	.L263	@long jump
 4816              	.LCB4327:
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(husart->TxXferCount != 0x00)
 4817              		.loc 1 2002 0
 4818 0024 7B68     		ldr	r3, [r7, #4]
 4819 0026 5B8D     		ldrh	r3, [r3, #42]
 4820 0028 002B     		cmp	r3, #0
 4821 002a 45D0     		beq	.L264
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(__HAL_USART_GET_FLAG(husart, USART_FLAG_TXE) != RESET)
 4822              		.loc 1 2004 0
 4823 002c 7B68     		ldr	r3, [r7, #4]
 4824 002e 1B68     		ldr	r3, [r3]
 4825 0030 DB69     		ldr	r3, [r3, #28]
 4826 0032 8022     		movs	r2, #128
 4827 0034 1340     		ands	r3, r2
 4828 0036 802B     		cmp	r3, #128
 4829 0038 3ED1     		bne	.L264
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         if((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY
 4830              		.loc 1 2006 0
 4831 003a 7B68     		ldr	r3, [r7, #4]
 4832 003c 9A68     		ldr	r2, [r3, #8]
 4833 003e 8023     		movs	r3, #128
 4834 0040 5B01     		lsls	r3, r3, #5
 4835 0042 9A42     		cmp	r2, r3
 4836 0044 16D1     		bne	.L265
 4837              		.loc 1 2006 0 is_stmt 0 discriminator 1
 4838 0046 7B68     		ldr	r3, [r7, #4]
 4839 0048 1B69     		ldr	r3, [r3, #16]
 4840 004a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccVFl28S.s 			page 120


 4841 004c 12D1     		bne	.L265
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         {
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           tmp = (uint16_t*) husart->pTxBuffPtr;
 4842              		.loc 1 2008 0 is_stmt 1
 4843 004e 7B68     		ldr	r3, [r7, #4]
 4844 0050 5B6A     		ldr	r3, [r3, #36]
 4845 0052 FB60     		str	r3, [r7, #12]
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           husart->Instance->TDR = (uint16_t)(*tmp & uhMask);
 4846              		.loc 1 2009 0
 4847 0054 7B68     		ldr	r3, [r7, #4]
 4848 0056 1B68     		ldr	r3, [r3]
 4849 0058 FA68     		ldr	r2, [r7, #12]
 4850 005a 1288     		ldrh	r2, [r2]
 4851 005c 0A21     		movs	r1, #10
 4852 005e 7918     		adds	r1, r7, r1
 4853 0060 0988     		ldrh	r1, [r1]
 4854 0062 0A40     		ands	r2, r1
 4855 0064 92B2     		uxth	r2, r2
 4856 0066 1A85     		strh	r2, [r3, #40]
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           husart->pTxBuffPtr += 2;
 4857              		.loc 1 2010 0
 4858 0068 7B68     		ldr	r3, [r7, #4]
 4859 006a 5B6A     		ldr	r3, [r3, #36]
 4860 006c 9A1C     		adds	r2, r3, #2
 4861 006e 7B68     		ldr	r3, [r7, #4]
 4862 0070 5A62     		str	r2, [r3, #36]
 4863 0072 0FE0     		b	.L266
 4864              	.L265:
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         }
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         else
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         {
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           husart->Instance->TDR = (uint8_t)(*husart->pTxBuffPtr++ & (uint8_t)uhMask);
 4865              		.loc 1 2014 0
 4866 0074 7B68     		ldr	r3, [r7, #4]
 4867 0076 1968     		ldr	r1, [r3]
 4868 0078 7B68     		ldr	r3, [r7, #4]
 4869 007a 5B6A     		ldr	r3, [r3, #36]
 4870 007c 581C     		adds	r0, r3, #1
 4871 007e 7A68     		ldr	r2, [r7, #4]
 4872 0080 5062     		str	r0, [r2, #36]
 4873 0082 1B78     		ldrb	r3, [r3]
 4874 0084 0A22     		movs	r2, #10
 4875 0086 BA18     		adds	r2, r7, r2
 4876 0088 1288     		ldrh	r2, [r2]
 4877 008a D2B2     		uxtb	r2, r2
 4878 008c 1340     		ands	r3, r2
 4879 008e DBB2     		uxtb	r3, r3
 4880 0090 9BB2     		uxth	r3, r3
 4881 0092 0B85     		strh	r3, [r1, #40]
 4882              	.L266:
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         }
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         husart->TxXferCount--;
 4883              		.loc 1 2016 0
 4884 0094 7B68     		ldr	r3, [r7, #4]
 4885 0096 5B8D     		ldrh	r3, [r3, #42]
 4886 0098 013B     		subs	r3, r3, #1
 4887 009a 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccVFl28S.s 			page 121


 4888 009c 7B68     		ldr	r3, [r7, #4]
 4889 009e 5A85     		strh	r2, [r3, #42]
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         /* Check the latest data transmitted */
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         if(husart->TxXferCount == 0)
 4890              		.loc 1 2019 0
 4891 00a0 7B68     		ldr	r3, [r7, #4]
 4892 00a2 5B8D     		ldrh	r3, [r3, #42]
 4893 00a4 002B     		cmp	r3, #0
 4894 00a6 07D1     		bne	.L264
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         {
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****            __HAL_USART_DISABLE_IT(husart, USART_IT_TXE);
 4895              		.loc 1 2021 0
 4896 00a8 7B68     		ldr	r3, [r7, #4]
 4897 00aa 1B68     		ldr	r3, [r3]
 4898 00ac 7A68     		ldr	r2, [r7, #4]
 4899 00ae 1268     		ldr	r2, [r2]
 4900 00b0 1268     		ldr	r2, [r2]
 4901 00b2 8021     		movs	r1, #128
 4902 00b4 8A43     		bics	r2, r1
 4903 00b6 1A60     		str	r2, [r3]
 4904              	.L264:
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         }
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(husart->RxXferCount != 0x00)
 4905              		.loc 1 2026 0
 4906 00b8 7B68     		ldr	r3, [r7, #4]
 4907 00ba 5B8E     		ldrh	r3, [r3, #50]
 4908 00bc 002B     		cmp	r3, #0
 4909 00be 3BD0     		beq	.L267
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       if(__HAL_USART_GET_FLAG(husart, USART_FLAG_RXNE) != RESET)
 4910              		.loc 1 2028 0
 4911 00c0 7B68     		ldr	r3, [r7, #4]
 4912 00c2 1B68     		ldr	r3, [r3]
 4913 00c4 DB69     		ldr	r3, [r3, #28]
 4914 00c6 2022     		movs	r2, #32
 4915 00c8 1340     		ands	r3, r2
 4916 00ca 202B     		cmp	r3, #32
 4917 00cc 34D1     		bne	.L267
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       {
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         if((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY
 4918              		.loc 1 2030 0
 4919 00ce 7B68     		ldr	r3, [r7, #4]
 4920 00d0 9A68     		ldr	r2, [r3, #8]
 4921 00d2 8023     		movs	r3, #128
 4922 00d4 5B01     		lsls	r3, r3, #5
 4923 00d6 9A42     		cmp	r2, r3
 4924 00d8 17D1     		bne	.L268
 4925              		.loc 1 2030 0 is_stmt 0 discriminator 1
 4926 00da 7B68     		ldr	r3, [r7, #4]
 4927 00dc 1B69     		ldr	r3, [r3, #16]
 4928 00de 002B     		cmp	r3, #0
 4929 00e0 13D1     		bne	.L268
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         {
ARM GAS  /tmp/ccVFl28S.s 			page 122


2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           tmp = (uint16_t*) husart->pRxBuffPtr;
 4930              		.loc 1 2032 0 is_stmt 1
 4931 00e2 7B68     		ldr	r3, [r7, #4]
 4932 00e4 DB6A     		ldr	r3, [r3, #44]
 4933 00e6 FB60     		str	r3, [r7, #12]
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           *tmp = (uint16_t)(husart->Instance->RDR & uhMask);
 4934              		.loc 1 2033 0
 4935 00e8 7B68     		ldr	r3, [r7, #4]
 4936 00ea 1B68     		ldr	r3, [r3]
 4937 00ec 9B8C     		ldrh	r3, [r3, #36]
 4938 00ee 9BB2     		uxth	r3, r3
 4939 00f0 0A22     		movs	r2, #10
 4940 00f2 BA18     		adds	r2, r7, r2
 4941 00f4 1288     		ldrh	r2, [r2]
 4942 00f6 1340     		ands	r3, r2
 4943 00f8 9AB2     		uxth	r2, r3
 4944 00fa FB68     		ldr	r3, [r7, #12]
 4945 00fc 1A80     		strh	r2, [r3]
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           husart->pRxBuffPtr += 2;
 4946              		.loc 1 2034 0
 4947 00fe 7B68     		ldr	r3, [r7, #4]
 4948 0100 DB6A     		ldr	r3, [r3, #44]
 4949 0102 9A1C     		adds	r2, r3, #2
 4950 0104 7B68     		ldr	r3, [r7, #4]
 4951 0106 DA62     		str	r2, [r3, #44]
 4952 0108 10E0     		b	.L269
 4953              	.L268:
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         }
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         else
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         {
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****           *husart->pRxBuffPtr++ = (uint8_t)(husart->Instance->RDR & (uint8_t)uhMask);
 4954              		.loc 1 2038 0
 4955 010a 7B68     		ldr	r3, [r7, #4]
 4956 010c DB6A     		ldr	r3, [r3, #44]
 4957 010e 591C     		adds	r1, r3, #1
 4958 0110 7A68     		ldr	r2, [r7, #4]
 4959 0112 D162     		str	r1, [r2, #44]
 4960 0114 7A68     		ldr	r2, [r7, #4]
 4961 0116 1268     		ldr	r2, [r2]
 4962 0118 928C     		ldrh	r2, [r2, #36]
 4963 011a 92B2     		uxth	r2, r2
 4964 011c D2B2     		uxtb	r2, r2
 4965 011e 0A21     		movs	r1, #10
 4966 0120 7918     		adds	r1, r7, r1
 4967 0122 0988     		ldrh	r1, [r1]
 4968 0124 C9B2     		uxtb	r1, r1
 4969 0126 0A40     		ands	r2, r1
 4970 0128 D2B2     		uxtb	r2, r2
 4971 012a 1A70     		strb	r2, [r3]
 4972              	.L269:
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         }
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****         husart->RxXferCount--;
 4973              		.loc 1 2040 0
 4974 012c 7B68     		ldr	r3, [r7, #4]
 4975 012e 5B8E     		ldrh	r3, [r3, #50]
 4976 0130 013B     		subs	r3, r3, #1
 4977 0132 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccVFl28S.s 			page 123


 4978 0134 7B68     		ldr	r3, [r7, #4]
 4979 0136 5A86     		strh	r2, [r3, #50]
 4980              	.L267:
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       }
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     /* Check the latest data received */
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     if(husart->RxXferCount == 0)
 4981              		.loc 1 2045 0
 4982 0138 7B68     		ldr	r3, [r7, #4]
 4983 013a 5B8E     		ldrh	r3, [r3, #50]
 4984 013c 002B     		cmp	r3, #0
 4985 013e 21D1     		bne	.L270
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     {
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       __HAL_USART_DISABLE_IT(husart, USART_IT_RXNE);
 4986              		.loc 1 2047 0
 4987 0140 7B68     		ldr	r3, [r7, #4]
 4988 0142 1B68     		ldr	r3, [r3]
 4989 0144 7A68     		ldr	r2, [r7, #4]
 4990 0146 1268     		ldr	r2, [r2]
 4991 0148 1268     		ldr	r2, [r2]
 4992 014a 2021     		movs	r1, #32
 4993 014c 8A43     		bics	r2, r1
 4994 014e 1A60     		str	r2, [r3]
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Disable the USART Parity Error Interrupt */
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       __HAL_USART_DISABLE_IT(husart, USART_IT_PE);
 4995              		.loc 1 2050 0
 4996 0150 7B68     		ldr	r3, [r7, #4]
 4997 0152 1B68     		ldr	r3, [r3]
 4998 0154 7A68     		ldr	r2, [r7, #4]
 4999 0156 1268     		ldr	r2, [r2]
 5000 0158 1268     		ldr	r2, [r2]
 5001 015a 0E49     		ldr	r1, .L272
 5002 015c 0A40     		ands	r2, r1
 5003 015e 1A60     		str	r2, [r3]
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       __HAL_USART_DISABLE_IT(husart, USART_IT_ERR);
 5004              		.loc 1 2053 0
 5005 0160 7B68     		ldr	r3, [r7, #4]
 5006 0162 1B68     		ldr	r3, [r3]
 5007 0164 7A68     		ldr	r2, [r7, #4]
 5008 0166 1268     		ldr	r2, [r2]
 5009 0168 9268     		ldr	r2, [r2, #8]
 5010 016a 0121     		movs	r1, #1
 5011 016c 8A43     		bics	r2, r1
 5012 016e 9A60     		str	r2, [r3, #8]
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       husart->State = HAL_USART_STATE_READY;
 5013              		.loc 1 2055 0
 5014 0170 7B68     		ldr	r3, [r7, #4]
 5015 0172 4122     		movs	r2, #65
 5016 0174 0121     		movs	r1, #1
 5017 0176 9954     		strb	r1, [r3, r2]
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       HAL_USART_TxRxCpltCallback(husart);
ARM GAS  /tmp/ccVFl28S.s 			page 124


 5018              		.loc 1 2057 0
 5019 0178 7B68     		ldr	r3, [r7, #4]
 5020 017a 1800     		movs	r0, r3
 5021 017c FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****       return HAL_OK;
 5022              		.loc 1 2059 0
 5023 0180 0023     		movs	r3, #0
 5024 0182 02E0     		b	.L271
 5025              	.L270:
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     }
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** 
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_OK;
 5026              		.loc 1 2062 0
 5027 0184 0023     		movs	r3, #0
 5028 0186 00E0     		b	.L271
 5029              	.L263:
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   else
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   {
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****     return HAL_BUSY;
 5030              		.loc 1 2066 0
 5031 0188 0223     		movs	r3, #2
 5032              	.L271:
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c ****   }
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_usart.c **** }
 5033              		.loc 1 2068 0
 5034 018a 1800     		movs	r0, r3
 5035 018c BD46     		mov	sp, r7
 5036 018e 04B0     		add	sp, sp, #16
 5037              		@ sp needed
 5038 0190 80BD     		pop	{r7, pc}
 5039              	.L273:
 5040 0192 C046     		.align	2
 5041              	.L272:
 5042 0194 FFFEFFFF 		.word	-257
 5043              		.cfi_endproc
 5044              	.LFE71:
 5046              		.text
 5047              	.Letext0:
 5048              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 5049              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 5050              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 5051              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 5052              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 5053              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 5054              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 5055              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 5056              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 5057              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 5058              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 5059              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_usart.h"
ARM GAS  /tmp/ccVFl28S.s 			page 125


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_usart.c
     /tmp/ccVFl28S.s:16     .text.HAL_USART_Init:0000000000000000 $t
     /tmp/ccVFl28S.s:23     .text.HAL_USART_Init:0000000000000000 HAL_USART_Init
     /tmp/ccVFl28S.s:226    .text.HAL_USART_MspInit:0000000000000000 HAL_USART_MspInit
     /tmp/ccVFl28S.s:3331   .text.USART_SetConfig:0000000000000000 USART_SetConfig
     /tmp/ccVFl28S.s:3762   .text.USART_CheckIdleState:0000000000000000 USART_CheckIdleState
     /tmp/ccVFl28S.s:132    .text.HAL_USART_Init:000000000000009c $d
     /tmp/ccVFl28S.s:137    .text.HAL_USART_DeInit:0000000000000000 $t
     /tmp/ccVFl28S.s:144    .text.HAL_USART_DeInit:0000000000000000 HAL_USART_DeInit
     /tmp/ccVFl28S.s:259    .text.HAL_USART_MspDeInit:0000000000000000 HAL_USART_MspDeInit
     /tmp/ccVFl28S.s:219    .text.HAL_USART_MspInit:0000000000000000 $t
     /tmp/ccVFl28S.s:252    .text.HAL_USART_MspDeInit:0000000000000000 $t
     /tmp/ccVFl28S.s:285    .text.HAL_USART_Transmit:0000000000000000 $t
     /tmp/ccVFl28S.s:292    .text.HAL_USART_Transmit:0000000000000000 HAL_USART_Transmit
     /tmp/ccVFl28S.s:3875   .text.USART_WaitOnFlagUntilTimeout:0000000000000000 USART_WaitOnFlagUntilTimeout
     /tmp/ccVFl28S.s:499    .text.HAL_USART_Receive:0000000000000000 $t
     /tmp/ccVFl28S.s:506    .text.HAL_USART_Receive:0000000000000000 HAL_USART_Receive
     /tmp/ccVFl28S.s:802    .text.HAL_USART_Receive:00000000000001b0 $d
     /tmp/ccVFl28S.s:807    .text.HAL_USART_TransmitReceive:0000000000000000 $t
     /tmp/ccVFl28S.s:814    .text.HAL_USART_TransmitReceive:0000000000000000 HAL_USART_TransmitReceive
     /tmp/ccVFl28S.s:1183   .text.HAL_USART_TransmitReceive:0000000000000228 $d
     /tmp/ccVFl28S.s:1188   .text.HAL_USART_Transmit_IT:0000000000000000 $t
     /tmp/ccVFl28S.s:1195   .text.HAL_USART_Transmit_IT:0000000000000000 HAL_USART_Transmit_IT
     /tmp/ccVFl28S.s:1325   .text.HAL_USART_Receive_IT:0000000000000000 $t
     /tmp/ccVFl28S.s:1332   .text.HAL_USART_Receive_IT:0000000000000000 HAL_USART_Receive_IT
     /tmp/ccVFl28S.s:1571   .text.HAL_USART_Receive_IT:0000000000000154 $d
     /tmp/ccVFl28S.s:1576   .text.HAL_USART_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccVFl28S.s:1583   .text.HAL_USART_TransmitReceive_IT:0000000000000000 HAL_USART_TransmitReceive_IT
     /tmp/ccVFl28S.s:1837   .text.HAL_USART_TransmitReceive_IT:0000000000000170 $d
     /tmp/ccVFl28S.s:1842   .text.HAL_USART_Transmit_DMA:0000000000000000 $t
     /tmp/ccVFl28S.s:1849   .text.HAL_USART_Transmit_DMA:0000000000000000 HAL_USART_Transmit_DMA
     /tmp/ccVFl28S.s:2018   .text.HAL_USART_Transmit_DMA:00000000000000f0 $d
     /tmp/ccVFl28S.s:4087   .text.USART_DMATransmitCplt:0000000000000000 USART_DMATransmitCplt
     /tmp/ccVFl28S.s:4174   .text.USART_DMATxHalfCplt:0000000000000000 USART_DMATxHalfCplt
     /tmp/ccVFl28S.s:4364   .text.USART_DMAError:0000000000000000 USART_DMAError
     /tmp/ccVFl28S.s:2025   .text.HAL_USART_Receive_DMA:0000000000000000 $t
     /tmp/ccVFl28S.s:2032   .text.HAL_USART_Receive_DMA:0000000000000000 HAL_USART_Receive_DMA
     /tmp/ccVFl28S.s:2224   .text.HAL_USART_Receive_DMA:000000000000011c $d
     /tmp/ccVFl28S.s:4214   .text.USART_DMAReceiveCplt:0000000000000000 USART_DMAReceiveCplt
     /tmp/ccVFl28S.s:4324   .text.USART_DMARxHalfCplt:0000000000000000 USART_DMARxHalfCplt
     /tmp/ccVFl28S.s:2231   .text.HAL_USART_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccVFl28S.s:2238   .text.HAL_USART_TransmitReceive_DMA:0000000000000000 HAL_USART_TransmitReceive_DMA
     /tmp/ccVFl28S.s:2462   .text.HAL_USART_TransmitReceive_DMA:000000000000014c $d
     /tmp/ccVFl28S.s:2471   .text.HAL_USART_DMAPause:0000000000000000 $t
     /tmp/ccVFl28S.s:2478   .text.HAL_USART_DMAPause:0000000000000000 HAL_USART_DMAPause
     /tmp/ccVFl28S.s:2589   .text.HAL_USART_DMAResume:0000000000000000 $t
     /tmp/ccVFl28S.s:2596   .text.HAL_USART_DMAResume:0000000000000000 HAL_USART_DMAResume
     /tmp/ccVFl28S.s:2717   .text.HAL_USART_DMAStop:0000000000000000 $t
     /tmp/ccVFl28S.s:2724   .text.HAL_USART_DMAStop:0000000000000000 HAL_USART_DMAStop
     /tmp/ccVFl28S.s:2797   .text.HAL_USART_IRQHandler:0000000000000000 $t
     /tmp/ccVFl28S.s:2804   .text.HAL_USART_IRQHandler:0000000000000000 HAL_USART_IRQHandler
     /tmp/ccVFl28S.s:3224   .text.HAL_USART_ErrorCallback:0000000000000000 HAL_USART_ErrorCallback
     /tmp/ccVFl28S.s:4613   .text.USART_Receive_IT:0000000000000000 USART_Receive_IT
     /tmp/ccVFl28S.s:4783   .text.USART_TransmitReceive_IT:0000000000000000 USART_TransmitReceive_IT
     /tmp/ccVFl28S.s:4424   .text.USART_Transmit_IT:0000000000000000 USART_Transmit_IT
     /tmp/ccVFl28S.s:4552   .text.USART_EndTransmit_IT:0000000000000000 USART_EndTransmit_IT
ARM GAS  /tmp/ccVFl28S.s 			page 126


     /tmp/ccVFl28S.s:3052   .text.HAL_USART_TxCpltCallback:0000000000000000 $t
     /tmp/ccVFl28S.s:3059   .text.HAL_USART_TxCpltCallback:0000000000000000 HAL_USART_TxCpltCallback
     /tmp/ccVFl28S.s:3085   .text.HAL_USART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccVFl28S.s:3092   .text.HAL_USART_TxHalfCpltCallback:0000000000000000 HAL_USART_TxHalfCpltCallback
     /tmp/ccVFl28S.s:3118   .text.HAL_USART_RxCpltCallback:0000000000000000 $t
     /tmp/ccVFl28S.s:3125   .text.HAL_USART_RxCpltCallback:0000000000000000 HAL_USART_RxCpltCallback
     /tmp/ccVFl28S.s:3151   .text.HAL_USART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccVFl28S.s:3158   .text.HAL_USART_RxHalfCpltCallback:0000000000000000 HAL_USART_RxHalfCpltCallback
     /tmp/ccVFl28S.s:3184   .text.HAL_USART_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccVFl28S.s:3191   .text.HAL_USART_TxRxCpltCallback:0000000000000000 HAL_USART_TxRxCpltCallback
     /tmp/ccVFl28S.s:3217   .text.HAL_USART_ErrorCallback:0000000000000000 $t
     /tmp/ccVFl28S.s:3250   .text.HAL_USART_GetState:0000000000000000 $t
     /tmp/ccVFl28S.s:3257   .text.HAL_USART_GetState:0000000000000000 HAL_USART_GetState
     /tmp/ccVFl28S.s:3288   .text.HAL_USART_GetError:0000000000000000 $t
     /tmp/ccVFl28S.s:3295   .text.HAL_USART_GetError:0000000000000000 HAL_USART_GetError
     /tmp/ccVFl28S.s:3325   .text.USART_SetConfig:0000000000000000 $t
     /tmp/ccVFl28S.s:3744   .text.USART_SetConfig:000000000000028c $d
     /tmp/ccVFl28S.s:3756   .text.USART_CheckIdleState:0000000000000000 $t
     /tmp/ccVFl28S.s:3863   .text.USART_CheckIdleState:000000000000008c $d
     /tmp/ccVFl28S.s:3869   .text.USART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccVFl28S.s:4076   .text.USART_WaitOnFlagUntilTimeout:0000000000000130 $d
     /tmp/ccVFl28S.s:4081   .text.USART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccVFl28S.s:4168   .text.USART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccVFl28S.s:4208   .text.USART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccVFl28S.s:4318   .text.USART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccVFl28S.s:4358   .text.USART_DMAError:0000000000000000 $t
     /tmp/ccVFl28S.s:4418   .text.USART_Transmit_IT:0000000000000000 $t
     /tmp/ccVFl28S.s:4546   .text.USART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccVFl28S.s:4607   .text.USART_Receive_IT:0000000000000000 $t
     /tmp/ccVFl28S.s:4772   .text.USART_Receive_IT:00000000000000f0 $d
     /tmp/ccVFl28S.s:4777   .text.USART_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccVFl28S.s:5042   .text.USART_TransmitReceive_IT:0000000000000194 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick

ARM GAS  /tmp/ccTNQqxW.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_conf.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.comm	hpcd_USB_FS,544,4
  16              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_PCD_MspInit
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_PCD_MspInit:
  25              	.LFB35:
  26              		.file 1 "Src/usbd_conf.c"
   1:Src/usbd_conf.c **** /**
   2:Src/usbd_conf.c ****   ******************************************************************************
   3:Src/usbd_conf.c ****   * @file           : usbd_conf.c
   4:Src/usbd_conf.c ****   * @version        : v1.0_Cube
   5:Src/usbd_conf.c ****   * @brief          : This file implements the board support package for the USB device library
   6:Src/usbd_conf.c ****   ******************************************************************************
   7:Src/usbd_conf.c ****   *
   8:Src/usbd_conf.c ****   * Copyright (c) 2016 STMicroelectronics International N.V. 
   9:Src/usbd_conf.c ****   * All rights reserved.
  10:Src/usbd_conf.c ****   *
  11:Src/usbd_conf.c ****   * Redistribution and use in source and binary forms, with or without 
  12:Src/usbd_conf.c ****   * modification, are permitted, provided that the following conditions are met:
  13:Src/usbd_conf.c ****   *
  14:Src/usbd_conf.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  15:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer.
  16:Src/usbd_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer in the documentation
  18:Src/usbd_conf.c ****   *    and/or other materials provided with the distribution.
  19:Src/usbd_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  20:Src/usbd_conf.c ****   *    contributors to this software may be used to endorse or promote products 
  21:Src/usbd_conf.c ****   *    derived from this software without specific written permission.
  22:Src/usbd_conf.c ****   * 4. This software, including modifications and/or derivative works of this 
  23:Src/usbd_conf.c ****   *    software, must execute solely and exclusively on microcontroller or
  24:Src/usbd_conf.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  25:Src/usbd_conf.c ****   * 5. Redistribution and use of this software other than as permitted under 
  26:Src/usbd_conf.c ****   *    this license is void and will automatically terminate your rights under 
  27:Src/usbd_conf.c ****   *    this license. 
  28:Src/usbd_conf.c ****   *
  29:Src/usbd_conf.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  30:Src/usbd_conf.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  31:Src/usbd_conf.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  32:Src/usbd_conf.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
ARM GAS  /tmp/ccTNQqxW.s 			page 2


  33:Src/usbd_conf.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  34:Src/usbd_conf.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  35:Src/usbd_conf.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  36:Src/usbd_conf.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  37:Src/usbd_conf.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  38:Src/usbd_conf.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  39:Src/usbd_conf.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  40:Src/usbd_conf.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  41:Src/usbd_conf.c ****   *
  42:Src/usbd_conf.c ****   ******************************************************************************
  43:Src/usbd_conf.c **** */
  44:Src/usbd_conf.c **** /* Includes ------------------------------------------------------------------*/
  45:Src/usbd_conf.c **** #include "stm32f0xx.h"
  46:Src/usbd_conf.c **** #include "stm32f0xx_hal.h"
  47:Src/usbd_conf.c **** #include "usbd_def.h"
  48:Src/usbd_conf.c **** #include "usbd_core.h"
  49:Src/usbd_conf.c **** #include "usbd_cdc.h"
  50:Src/usbd_conf.c **** /* Private typedef -----------------------------------------------------------*/
  51:Src/usbd_conf.c **** /* Private define ------------------------------------------------------------*/
  52:Src/usbd_conf.c **** /* Private macro -------------------------------------------------------------*/
  53:Src/usbd_conf.c **** /* Private variables ---------------------------------------------------------*/
  54:Src/usbd_conf.c **** PCD_HandleTypeDef hpcd_USB_FS;
  55:Src/usbd_conf.c **** void Error_Handler(void);
  56:Src/usbd_conf.c **** 
  57:Src/usbd_conf.c **** /* USER CODE BEGIN 0 */
  58:Src/usbd_conf.c **** 
  59:Src/usbd_conf.c **** /* USER CODE END 0 */
  60:Src/usbd_conf.c **** 
  61:Src/usbd_conf.c **** /* Private function prototypes -----------------------------------------------*/
  62:Src/usbd_conf.c **** /* Private functions ---------------------------------------------------------*/
  63:Src/usbd_conf.c **** /* USER CODE BEGIN 1 */
  64:Src/usbd_conf.c **** static void SystemClockConfig_Resume(void);
  65:Src/usbd_conf.c **** /* USER CODE END 1 */
  66:Src/usbd_conf.c **** void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state);
  67:Src/usbd_conf.c **** extern void SystemClock_Config(void);
  68:Src/usbd_conf.c **** 
  69:Src/usbd_conf.c **** /*******************************************************************************
  70:Src/usbd_conf.c ****                        LL Driver Callbacks (PCD -> USB Device Library)
  71:Src/usbd_conf.c **** *******************************************************************************/
  72:Src/usbd_conf.c **** /* MSP Init */
  73:Src/usbd_conf.c **** 
  74:Src/usbd_conf.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
  75:Src/usbd_conf.c **** {
  27              		.loc 1 75 0
  28              		.cfi_startproc
  29 0000 80B5     		push	{r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 84B0     		sub	sp, sp, #16
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              	.LCFI2:
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccTNQqxW.s 			page 3


  76:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
  41              		.loc 1 76 0
  42 0008 7B68     		ldr	r3, [r7, #4]
  43 000a 1B68     		ldr	r3, [r3]
  44 000c 0E4A     		ldr	r2, .L4
  45 000e 9342     		cmp	r3, r2
  46 0010 15D1     		bne	.L3
  47              	.LBB2:
  77:Src/usbd_conf.c ****   {
  78:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 0 */
  79:Src/usbd_conf.c **** 
  80:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 0 */
  81:Src/usbd_conf.c ****     /* Peripheral clock enable */
  82:Src/usbd_conf.c ****     __HAL_RCC_USB_CLK_ENABLE();
  48              		.loc 1 82 0
  49 0012 0E4B     		ldr	r3, .L4+4
  50 0014 0D4A     		ldr	r2, .L4+4
  51 0016 D269     		ldr	r2, [r2, #28]
  52 0018 8021     		movs	r1, #128
  53 001a 0904     		lsls	r1, r1, #16
  54 001c 0A43     		orrs	r2, r1
  55 001e DA61     		str	r2, [r3, #28]
  56 0020 0A4B     		ldr	r3, .L4+4
  57 0022 DA69     		ldr	r2, [r3, #28]
  58 0024 8023     		movs	r3, #128
  59 0026 1B04     		lsls	r3, r3, #16
  60 0028 1340     		ands	r3, r2
  61 002a FB60     		str	r3, [r7, #12]
  62 002c FB68     		ldr	r3, [r7, #12]
  63              	.LBE2:
  83:Src/usbd_conf.c **** 
  84:Src/usbd_conf.c ****     /* Peripheral interrupt init */
  85:Src/usbd_conf.c ****     HAL_NVIC_SetPriority(USB_IRQn, 0, 0);
  64              		.loc 1 85 0
  65 002e 0022     		movs	r2, #0
  66 0030 0021     		movs	r1, #0
  67 0032 1F20     		movs	r0, #31
  68 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  86:Src/usbd_conf.c ****     HAL_NVIC_EnableIRQ(USB_IRQn);
  69              		.loc 1 86 0
  70 0038 1F20     		movs	r0, #31
  71 003a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  72              	.L3:
  87:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 1 */
  88:Src/usbd_conf.c **** 
  89:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 1 */
  90:Src/usbd_conf.c ****   }
  91:Src/usbd_conf.c **** }
  73              		.loc 1 91 0
  74 003e C046     		nop
  75 0040 BD46     		mov	sp, r7
  76 0042 04B0     		add	sp, sp, #16
  77              		@ sp needed
  78 0044 80BD     		pop	{r7, pc}
  79              	.L5:
  80 0046 C046     		.align	2
  81              	.L4:
ARM GAS  /tmp/ccTNQqxW.s 			page 4


  82 0048 005C0040 		.word	1073765376
  83 004c 00100240 		.word	1073876992
  84              		.cfi_endproc
  85              	.LFE35:
  87              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
  88              		.align	1
  89              		.global	HAL_PCD_MspDeInit
  90              		.syntax unified
  91              		.code	16
  92              		.thumb_func
  93              		.fpu softvfp
  95              	HAL_PCD_MspDeInit:
  96              	.LFB36:
  92:Src/usbd_conf.c **** 
  93:Src/usbd_conf.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef* pcdHandle)
  94:Src/usbd_conf.c **** {
  97              		.loc 1 94 0
  98              		.cfi_startproc
  99 0000 80B5     		push	{r7, lr}
 100              	.LCFI3:
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 82B0     		sub	sp, sp, #8
 105              	.LCFI4:
 106              		.cfi_def_cfa_offset 16
 107 0004 00AF     		add	r7, sp, #0
 108              	.LCFI5:
 109              		.cfi_def_cfa_register 7
 110 0006 7860     		str	r0, [r7, #4]
  95:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
 111              		.loc 1 95 0
 112 0008 7B68     		ldr	r3, [r7, #4]
 113 000a 1B68     		ldr	r3, [r3]
 114 000c 074A     		ldr	r2, .L9
 115 000e 9342     		cmp	r3, r2
 116 0010 08D1     		bne	.L8
  96:Src/usbd_conf.c ****   {
  97:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 0 */
  98:Src/usbd_conf.c **** 
  99:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 0 */
 100:Src/usbd_conf.c ****     /* Peripheral clock disable */
 101:Src/usbd_conf.c ****     __HAL_RCC_USB_CLK_DISABLE();
 117              		.loc 1 101 0
 118 0012 074B     		ldr	r3, .L9+4
 119 0014 064A     		ldr	r2, .L9+4
 120 0016 D269     		ldr	r2, [r2, #28]
 121 0018 0649     		ldr	r1, .L9+8
 122 001a 0A40     		ands	r2, r1
 123 001c DA61     		str	r2, [r3, #28]
 102:Src/usbd_conf.c **** 
 103:Src/usbd_conf.c ****     /* Peripheral interrupt Deinit*/
 104:Src/usbd_conf.c ****     HAL_NVIC_DisableIRQ(USB_IRQn);
 124              		.loc 1 104 0
 125 001e 1F20     		movs	r0, #31
 126 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 127              	.L8:
ARM GAS  /tmp/ccTNQqxW.s 			page 5


 105:Src/usbd_conf.c **** 
 106:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 1 */
 107:Src/usbd_conf.c **** 
 108:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 1 */
 109:Src/usbd_conf.c ****   }
 110:Src/usbd_conf.c **** }
 128              		.loc 1 110 0
 129 0024 C046     		nop
 130 0026 BD46     		mov	sp, r7
 131 0028 02B0     		add	sp, sp, #8
 132              		@ sp needed
 133 002a 80BD     		pop	{r7, pc}
 134              	.L10:
 135              		.align	2
 136              	.L9:
 137 002c 005C0040 		.word	1073765376
 138 0030 00100240 		.word	1073876992
 139 0034 FFFF7FFF 		.word	-8388609
 140              		.cfi_endproc
 141              	.LFE36:
 143              		.section	.text.HAL_PCD_SetupStageCallback,"ax",%progbits
 144              		.align	1
 145              		.global	HAL_PCD_SetupStageCallback
 146              		.syntax unified
 147              		.code	16
 148              		.thumb_func
 149              		.fpu softvfp
 151              	HAL_PCD_SetupStageCallback:
 152              	.LFB37:
 111:Src/usbd_conf.c **** 
 112:Src/usbd_conf.c **** /**
 113:Src/usbd_conf.c ****   * @brief  Setup Stage callback
 114:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 115:Src/usbd_conf.c ****   * @retval None
 116:Src/usbd_conf.c ****   */
 117:Src/usbd_conf.c **** void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 118:Src/usbd_conf.c **** {
 153              		.loc 1 118 0
 154              		.cfi_startproc
 155 0000 80B5     		push	{r7, lr}
 156              	.LCFI6:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 82B0     		sub	sp, sp, #8
 161              	.LCFI7:
 162              		.cfi_def_cfa_offset 16
 163 0004 00AF     		add	r7, sp, #0
 164              	.LCFI8:
 165              		.cfi_def_cfa_register 7
 166 0006 7860     		str	r0, [r7, #4]
 119:Src/usbd_conf.c ****   USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 167              		.loc 1 119 0
 168 0008 7A68     		ldr	r2, [r7, #4]
 169 000a 8723     		movs	r3, #135
 170 000c 9B00     		lsls	r3, r3, #2
 171 000e D258     		ldr	r2, [r2, r3]
ARM GAS  /tmp/ccTNQqxW.s 			page 6


 172 0010 7B68     		ldr	r3, [r7, #4]
 173 0012 ED33     		adds	r3, r3, #237
 174 0014 FF33     		adds	r3, r3, #255
 175 0016 1900     		movs	r1, r3
 176 0018 1000     		movs	r0, r2
 177 001a FFF7FEFF 		bl	USBD_LL_SetupStage
 120:Src/usbd_conf.c **** }
 178              		.loc 1 120 0
 179 001e C046     		nop
 180 0020 BD46     		mov	sp, r7
 181 0022 02B0     		add	sp, sp, #8
 182              		@ sp needed
 183 0024 80BD     		pop	{r7, pc}
 184              		.cfi_endproc
 185              	.LFE37:
 187              		.section	.text.HAL_PCD_DataOutStageCallback,"ax",%progbits
 188              		.align	1
 189              		.global	HAL_PCD_DataOutStageCallback
 190              		.syntax unified
 191              		.code	16
 192              		.thumb_func
 193              		.fpu softvfp
 195              	HAL_PCD_DataOutStageCallback:
 196              	.LFB38:
 121:Src/usbd_conf.c **** 
 122:Src/usbd_conf.c **** /**
 123:Src/usbd_conf.c ****   * @brief  Data Out Stage callback.
 124:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 125:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 126:Src/usbd_conf.c ****   * @retval None
 127:Src/usbd_conf.c ****   */
 128:Src/usbd_conf.c **** void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 129:Src/usbd_conf.c **** {
 197              		.loc 1 129 0
 198              		.cfi_startproc
 199 0000 90B5     		push	{r4, r7, lr}
 200              	.LCFI9:
 201              		.cfi_def_cfa_offset 12
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 83B0     		sub	sp, sp, #12
 206              	.LCFI10:
 207              		.cfi_def_cfa_offset 24
 208 0004 00AF     		add	r7, sp, #0
 209              	.LCFI11:
 210              		.cfi_def_cfa_register 7
 211 0006 7860     		str	r0, [r7, #4]
 212 0008 0A00     		movs	r2, r1
 213 000a FB1C     		adds	r3, r7, #3
 214 000c 1A70     		strb	r2, [r3]
 130:Src/usbd_conf.c ****   USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 215              		.loc 1 130 0
 216 000e 7A68     		ldr	r2, [r7, #4]
 217 0010 8723     		movs	r3, #135
 218 0012 9B00     		lsls	r3, r3, #2
 219 0014 D458     		ldr	r4, [r2, r3]
ARM GAS  /tmp/ccTNQqxW.s 			page 7


 220 0016 FB1C     		adds	r3, r7, #3
 221 0018 1A78     		ldrb	r2, [r3]
 222 001a 7868     		ldr	r0, [r7, #4]
 223 001c 8C23     		movs	r3, #140
 224 001e 5900     		lsls	r1, r3, #1
 225 0020 1300     		movs	r3, r2
 226 0022 DB00     		lsls	r3, r3, #3
 227 0024 9B1A     		subs	r3, r3, r2
 228 0026 9B00     		lsls	r3, r3, #2
 229 0028 C318     		adds	r3, r0, r3
 230 002a 5B18     		adds	r3, r3, r1
 231 002c 1A68     		ldr	r2, [r3]
 232 002e FB1C     		adds	r3, r7, #3
 233 0030 1B78     		ldrb	r3, [r3]
 234 0032 1900     		movs	r1, r3
 235 0034 2000     		movs	r0, r4
 236 0036 FFF7FEFF 		bl	USBD_LL_DataOutStage
 131:Src/usbd_conf.c **** }
 237              		.loc 1 131 0
 238 003a C046     		nop
 239 003c BD46     		mov	sp, r7
 240 003e 03B0     		add	sp, sp, #12
 241              		@ sp needed
 242 0040 90BD     		pop	{r4, r7, pc}
 243              		.cfi_endproc
 244              	.LFE38:
 246              		.section	.text.HAL_PCD_DataInStageCallback,"ax",%progbits
 247              		.align	1
 248              		.global	HAL_PCD_DataInStageCallback
 249              		.syntax unified
 250              		.code	16
 251              		.thumb_func
 252              		.fpu softvfp
 254              	HAL_PCD_DataInStageCallback:
 255              	.LFB39:
 132:Src/usbd_conf.c **** 
 133:Src/usbd_conf.c **** /**
 134:Src/usbd_conf.c ****   * @brief  Data In Stage callback..
 135:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 136:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 137:Src/usbd_conf.c ****   * @retval None
 138:Src/usbd_conf.c ****   */
 139:Src/usbd_conf.c **** void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 140:Src/usbd_conf.c **** {
 256              		.loc 1 140 0
 257              		.cfi_startproc
 258 0000 80B5     		push	{r7, lr}
 259              	.LCFI12:
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 7, -8
 262              		.cfi_offset 14, -4
 263 0002 82B0     		sub	sp, sp, #8
 264              	.LCFI13:
 265              		.cfi_def_cfa_offset 16
 266 0004 00AF     		add	r7, sp, #0
 267              	.LCFI14:
 268              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccTNQqxW.s 			page 8


 269 0006 7860     		str	r0, [r7, #4]
 270 0008 0A00     		movs	r2, r1
 271 000a FB1C     		adds	r3, r7, #3
 272 000c 1A70     		strb	r2, [r3]
 141:Src/usbd_conf.c ****   USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 273              		.loc 1 141 0
 274 000e 7A68     		ldr	r2, [r7, #4]
 275 0010 8723     		movs	r3, #135
 276 0012 9B00     		lsls	r3, r3, #2
 277 0014 D058     		ldr	r0, [r2, r3]
 278 0016 FB1C     		adds	r3, r7, #3
 279 0018 1A78     		ldrb	r2, [r3]
 280 001a 7968     		ldr	r1, [r7, #4]
 281 001c 1300     		movs	r3, r2
 282 001e DB00     		lsls	r3, r3, #3
 283 0020 9B1A     		subs	r3, r3, r2
 284 0022 9B00     		lsls	r3, r3, #2
 285 0024 CB18     		adds	r3, r1, r3
 286 0026 3833     		adds	r3, r3, #56
 287 0028 1A68     		ldr	r2, [r3]
 288 002a FB1C     		adds	r3, r7, #3
 289 002c 1B78     		ldrb	r3, [r3]
 290 002e 1900     		movs	r1, r3
 291 0030 FFF7FEFF 		bl	USBD_LL_DataInStage
 142:Src/usbd_conf.c **** }
 292              		.loc 1 142 0
 293 0034 C046     		nop
 294 0036 BD46     		mov	sp, r7
 295 0038 02B0     		add	sp, sp, #8
 296              		@ sp needed
 297 003a 80BD     		pop	{r7, pc}
 298              		.cfi_endproc
 299              	.LFE39:
 301              		.section	.text.HAL_PCD_SOFCallback,"ax",%progbits
 302              		.align	1
 303              		.global	HAL_PCD_SOFCallback
 304              		.syntax unified
 305              		.code	16
 306              		.thumb_func
 307              		.fpu softvfp
 309              	HAL_PCD_SOFCallback:
 310              	.LFB40:
 143:Src/usbd_conf.c **** 
 144:Src/usbd_conf.c **** /**
 145:Src/usbd_conf.c ****   * @brief  SOF callback.
 146:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 147:Src/usbd_conf.c ****   * @retval None
 148:Src/usbd_conf.c ****   */
 149:Src/usbd_conf.c **** void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
 150:Src/usbd_conf.c **** {
 311              		.loc 1 150 0
 312              		.cfi_startproc
 313 0000 80B5     		push	{r7, lr}
 314              	.LCFI15:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 7, -8
 317              		.cfi_offset 14, -4
ARM GAS  /tmp/ccTNQqxW.s 			page 9


 318 0002 82B0     		sub	sp, sp, #8
 319              	.LCFI16:
 320              		.cfi_def_cfa_offset 16
 321 0004 00AF     		add	r7, sp, #0
 322              	.LCFI17:
 323              		.cfi_def_cfa_register 7
 324 0006 7860     		str	r0, [r7, #4]
 151:Src/usbd_conf.c ****   USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 325              		.loc 1 151 0
 326 0008 7A68     		ldr	r2, [r7, #4]
 327 000a 8723     		movs	r3, #135
 328 000c 9B00     		lsls	r3, r3, #2
 329 000e D358     		ldr	r3, [r2, r3]
 330 0010 1800     		movs	r0, r3
 331 0012 FFF7FEFF 		bl	USBD_LL_SOF
 152:Src/usbd_conf.c **** }
 332              		.loc 1 152 0
 333 0016 C046     		nop
 334 0018 BD46     		mov	sp, r7
 335 001a 02B0     		add	sp, sp, #8
 336              		@ sp needed
 337 001c 80BD     		pop	{r7, pc}
 338              		.cfi_endproc
 339              	.LFE40:
 341              		.section	.text.HAL_PCD_ResetCallback,"ax",%progbits
 342              		.align	1
 343              		.global	HAL_PCD_ResetCallback
 344              		.syntax unified
 345              		.code	16
 346              		.thumb_func
 347              		.fpu softvfp
 349              	HAL_PCD_ResetCallback:
 350              	.LFB41:
 153:Src/usbd_conf.c **** 
 154:Src/usbd_conf.c **** /**
 155:Src/usbd_conf.c ****   * @brief  Reset callback.
 156:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 157:Src/usbd_conf.c ****   * @retval None
 158:Src/usbd_conf.c ****   */
 159:Src/usbd_conf.c **** void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
 160:Src/usbd_conf.c **** { 
 351              		.loc 1 160 0
 352              		.cfi_startproc
 353 0000 80B5     		push	{r7, lr}
 354              	.LCFI18:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 7, -8
 357              		.cfi_offset 14, -4
 358 0002 84B0     		sub	sp, sp, #16
 359              	.LCFI19:
 360              		.cfi_def_cfa_offset 24
 361 0004 00AF     		add	r7, sp, #0
 362              	.LCFI20:
 363              		.cfi_def_cfa_register 7
 364 0006 7860     		str	r0, [r7, #4]
 161:Src/usbd_conf.c ****   USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 365              		.loc 1 161 0
ARM GAS  /tmp/ccTNQqxW.s 			page 10


 366 0008 0F23     		movs	r3, #15
 367 000a FB18     		adds	r3, r7, r3
 368 000c 0122     		movs	r2, #1
 369 000e 1A70     		strb	r2, [r3]
 162:Src/usbd_conf.c **** 
 163:Src/usbd_conf.c ****   /*Set USB Current Speed*/
 164:Src/usbd_conf.c ****   switch (hpcd->Init.speed)
 370              		.loc 1 164 0
 371 0010 7B68     		ldr	r3, [r7, #4]
 372 0012 9B68     		ldr	r3, [r3, #8]
 373 0014 022B     		cmp	r3, #2
 374 0016 04D1     		bne	.L19
 165:Src/usbd_conf.c ****   {
 166:Src/usbd_conf.c ****   case PCD_SPEED_FULL:
 167:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;    
 375              		.loc 1 167 0
 376 0018 0F23     		movs	r3, #15
 377 001a FB18     		adds	r3, r7, r3
 378 001c 0122     		movs	r2, #1
 379 001e 1A70     		strb	r2, [r3]
 168:Src/usbd_conf.c ****     break;
 380              		.loc 1 168 0
 381 0020 04E0     		b	.L18
 382              	.L19:
 169:Src/usbd_conf.c **** 	
 170:Src/usbd_conf.c ****   default:
 171:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;    
 383              		.loc 1 171 0
 384 0022 0F23     		movs	r3, #15
 385 0024 FB18     		adds	r3, r7, r3
 386 0026 0122     		movs	r2, #1
 387 0028 1A70     		strb	r2, [r3]
 172:Src/usbd_conf.c ****     break;    
 388              		.loc 1 172 0
 389 002a C046     		nop
 390              	.L18:
 173:Src/usbd_conf.c ****   }
 174:Src/usbd_conf.c ****   USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);  
 391              		.loc 1 174 0
 392 002c 7A68     		ldr	r2, [r7, #4]
 393 002e 8723     		movs	r3, #135
 394 0030 9B00     		lsls	r3, r3, #2
 395 0032 D258     		ldr	r2, [r2, r3]
 396 0034 0F23     		movs	r3, #15
 397 0036 FB18     		adds	r3, r7, r3
 398 0038 1B78     		ldrb	r3, [r3]
 399 003a 1900     		movs	r1, r3
 400 003c 1000     		movs	r0, r2
 401 003e FFF7FEFF 		bl	USBD_LL_SetSpeed
 175:Src/usbd_conf.c ****   
 176:Src/usbd_conf.c ****   /*Reset Device*/
 177:Src/usbd_conf.c ****   USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 402              		.loc 1 177 0
 403 0042 7A68     		ldr	r2, [r7, #4]
 404 0044 8723     		movs	r3, #135
 405 0046 9B00     		lsls	r3, r3, #2
 406 0048 D358     		ldr	r3, [r2, r3]
ARM GAS  /tmp/ccTNQqxW.s 			page 11


 407 004a 1800     		movs	r0, r3
 408 004c FFF7FEFF 		bl	USBD_LL_Reset
 178:Src/usbd_conf.c **** }
 409              		.loc 1 178 0
 410 0050 C046     		nop
 411 0052 BD46     		mov	sp, r7
 412 0054 04B0     		add	sp, sp, #16
 413              		@ sp needed
 414 0056 80BD     		pop	{r7, pc}
 415              		.cfi_endproc
 416              	.LFE41:
 418              		.section	.text.HAL_PCD_SuspendCallback,"ax",%progbits
 419              		.align	1
 420              		.global	HAL_PCD_SuspendCallback
 421              		.syntax unified
 422              		.code	16
 423              		.thumb_func
 424              		.fpu softvfp
 426              	HAL_PCD_SuspendCallback:
 427              	.LFB42:
 179:Src/usbd_conf.c **** 
 180:Src/usbd_conf.c **** /**
 181:Src/usbd_conf.c ****   * @brief  Suspend callback.
 182:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 183:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 184:Src/usbd_conf.c ****   * @retval None
 185:Src/usbd_conf.c ****   */
 186:Src/usbd_conf.c **** void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 187:Src/usbd_conf.c **** {
 428              		.loc 1 187 0
 429              		.cfi_startproc
 430 0000 80B5     		push	{r7, lr}
 431              	.LCFI21:
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 7, -8
 434              		.cfi_offset 14, -4
 435 0002 82B0     		sub	sp, sp, #8
 436              	.LCFI22:
 437              		.cfi_def_cfa_offset 16
 438 0004 00AF     		add	r7, sp, #0
 439              	.LCFI23:
 440              		.cfi_def_cfa_register 7
 441 0006 7860     		str	r0, [r7, #4]
 188:Src/usbd_conf.c ****   /* Inform USB library that core enters in suspend Mode */
 189:Src/usbd_conf.c ****   USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 442              		.loc 1 189 0
 443 0008 7A68     		ldr	r2, [r7, #4]
 444 000a 8723     		movs	r3, #135
 445 000c 9B00     		lsls	r3, r3, #2
 446 000e D358     		ldr	r3, [r2, r3]
 447 0010 1800     		movs	r0, r3
 448 0012 FFF7FEFF 		bl	USBD_LL_Suspend
 190:Src/usbd_conf.c ****   /*Enter in STOP mode */
 191:Src/usbd_conf.c ****   /* USER CODE BEGIN 2 */
 192:Src/usbd_conf.c ****   if (hpcd->Init.low_power_enable)
 449              		.loc 1 192 0
 450 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccTNQqxW.s 			page 12


 451 0018 9B69     		ldr	r3, [r3, #24]
 452 001a 002B     		cmp	r3, #0
 453 001c 05D0     		beq	.L22
 193:Src/usbd_conf.c ****   {
 194:Src/usbd_conf.c ****     /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register */
 195:Src/usbd_conf.c ****     SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 454              		.loc 1 195 0
 455 001e 054B     		ldr	r3, .L23
 456 0020 044A     		ldr	r2, .L23
 457 0022 1269     		ldr	r2, [r2, #16]
 458 0024 0621     		movs	r1, #6
 459 0026 0A43     		orrs	r2, r1
 460 0028 1A61     		str	r2, [r3, #16]
 461              	.L22:
 196:Src/usbd_conf.c ****   }
 197:Src/usbd_conf.c ****   /* USER CODE END 2 */
 198:Src/usbd_conf.c **** }
 462              		.loc 1 198 0
 463 002a C046     		nop
 464 002c BD46     		mov	sp, r7
 465 002e 02B0     		add	sp, sp, #8
 466              		@ sp needed
 467 0030 80BD     		pop	{r7, pc}
 468              	.L24:
 469 0032 C046     		.align	2
 470              	.L23:
 471 0034 00ED00E0 		.word	-536810240
 472              		.cfi_endproc
 473              	.LFE42:
 475              		.section	.text.HAL_PCD_ResumeCallback,"ax",%progbits
 476              		.align	1
 477              		.global	HAL_PCD_ResumeCallback
 478              		.syntax unified
 479              		.code	16
 480              		.thumb_func
 481              		.fpu softvfp
 483              	HAL_PCD_ResumeCallback:
 484              	.LFB43:
 199:Src/usbd_conf.c **** 
 200:Src/usbd_conf.c **** /**
 201:Src/usbd_conf.c ****   * @brief  Resume callback.
 202:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 203:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 204:Src/usbd_conf.c ****   * @retval None
 205:Src/usbd_conf.c ****   */
 206:Src/usbd_conf.c **** void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 207:Src/usbd_conf.c **** {
 485              		.loc 1 207 0
 486              		.cfi_startproc
 487 0000 80B5     		push	{r7, lr}
 488              	.LCFI24:
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 7, -8
 491              		.cfi_offset 14, -4
 492 0002 82B0     		sub	sp, sp, #8
 493              	.LCFI25:
 494              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccTNQqxW.s 			page 13


 495 0004 00AF     		add	r7, sp, #0
 496              	.LCFI26:
 497              		.cfi_def_cfa_register 7
 498 0006 7860     		str	r0, [r7, #4]
 208:Src/usbd_conf.c ****   /* USER CODE BEGIN 3 */
 209:Src/usbd_conf.c ****   if (hpcd->Init.low_power_enable)
 499              		.loc 1 209 0
 500 0008 7B68     		ldr	r3, [r7, #4]
 501 000a 9B69     		ldr	r3, [r3, #24]
 502 000c 002B     		cmp	r3, #0
 503 000e 07D0     		beq	.L26
 210:Src/usbd_conf.c ****   {    
 211:Src/usbd_conf.c ****     /* Reset SLEEPDEEP bit of Cortex System Control Register */
 212:Src/usbd_conf.c ****     SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));   
 504              		.loc 1 212 0
 505 0010 094B     		ldr	r3, .L27
 506 0012 094A     		ldr	r2, .L27
 507 0014 1269     		ldr	r2, [r2, #16]
 508 0016 0621     		movs	r1, #6
 509 0018 8A43     		bics	r2, r1
 510 001a 1A61     		str	r2, [r3, #16]
 213:Src/usbd_conf.c ****     SystemClockConfig_Resume(); 
 511              		.loc 1 213 0
 512 001c FFF7FEFF 		bl	SystemClockConfig_Resume
 513              	.L26:
 214:Src/usbd_conf.c ****   }
 215:Src/usbd_conf.c ****   /* USER CODE END 3 */
 216:Src/usbd_conf.c ****   USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 514              		.loc 1 216 0
 515 0020 7A68     		ldr	r2, [r7, #4]
 516 0022 8723     		movs	r3, #135
 517 0024 9B00     		lsls	r3, r3, #2
 518 0026 D358     		ldr	r3, [r2, r3]
 519 0028 1800     		movs	r0, r3
 520 002a FFF7FEFF 		bl	USBD_LL_Resume
 217:Src/usbd_conf.c ****   
 218:Src/usbd_conf.c **** }
 521              		.loc 1 218 0
 522 002e C046     		nop
 523 0030 BD46     		mov	sp, r7
 524 0032 02B0     		add	sp, sp, #8
 525              		@ sp needed
 526 0034 80BD     		pop	{r7, pc}
 527              	.L28:
 528 0036 C046     		.align	2
 529              	.L27:
 530 0038 00ED00E0 		.word	-536810240
 531              		.cfi_endproc
 532              	.LFE43:
 534              		.section	.text.HAL_PCD_ISOOUTIncompleteCallback,"ax",%progbits
 535              		.align	1
 536              		.global	HAL_PCD_ISOOUTIncompleteCallback
 537              		.syntax unified
 538              		.code	16
 539              		.thumb_func
 540              		.fpu softvfp
 542              	HAL_PCD_ISOOUTIncompleteCallback:
ARM GAS  /tmp/ccTNQqxW.s 			page 14


 543              	.LFB44:
 219:Src/usbd_conf.c **** 
 220:Src/usbd_conf.c **** /**
 221:Src/usbd_conf.c ****   * @brief  ISOOUTIncomplete callback.
 222:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 223:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 224:Src/usbd_conf.c ****   * @retval None
 225:Src/usbd_conf.c ****   */
 226:Src/usbd_conf.c **** void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 227:Src/usbd_conf.c **** {
 544              		.loc 1 227 0
 545              		.cfi_startproc
 546 0000 80B5     		push	{r7, lr}
 547              	.LCFI27:
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 82B0     		sub	sp, sp, #8
 552              	.LCFI28:
 553              		.cfi_def_cfa_offset 16
 554 0004 00AF     		add	r7, sp, #0
 555              	.LCFI29:
 556              		.cfi_def_cfa_register 7
 557 0006 7860     		str	r0, [r7, #4]
 558 0008 0A00     		movs	r2, r1
 559 000a FB1C     		adds	r3, r7, #3
 560 000c 1A70     		strb	r2, [r3]
 228:Src/usbd_conf.c ****   USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 561              		.loc 1 228 0
 562 000e 7A68     		ldr	r2, [r7, #4]
 563 0010 8723     		movs	r3, #135
 564 0012 9B00     		lsls	r3, r3, #2
 565 0014 D258     		ldr	r2, [r2, r3]
 566 0016 FB1C     		adds	r3, r7, #3
 567 0018 1B78     		ldrb	r3, [r3]
 568 001a 1900     		movs	r1, r3
 569 001c 1000     		movs	r0, r2
 570 001e FFF7FEFF 		bl	USBD_LL_IsoOUTIncomplete
 229:Src/usbd_conf.c **** }
 571              		.loc 1 229 0
 572 0022 C046     		nop
 573 0024 BD46     		mov	sp, r7
 574 0026 02B0     		add	sp, sp, #8
 575              		@ sp needed
 576 0028 80BD     		pop	{r7, pc}
 577              		.cfi_endproc
 578              	.LFE44:
 580              		.section	.text.HAL_PCD_ISOINIncompleteCallback,"ax",%progbits
 581              		.align	1
 582              		.global	HAL_PCD_ISOINIncompleteCallback
 583              		.syntax unified
 584              		.code	16
 585              		.thumb_func
 586              		.fpu softvfp
 588              	HAL_PCD_ISOINIncompleteCallback:
 589              	.LFB45:
 230:Src/usbd_conf.c **** 
ARM GAS  /tmp/ccTNQqxW.s 			page 15


 231:Src/usbd_conf.c **** /**
 232:Src/usbd_conf.c ****   * @brief  ISOINIncomplete callback.
 233:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 234:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 235:Src/usbd_conf.c ****   * @retval None
 236:Src/usbd_conf.c ****   */
 237:Src/usbd_conf.c **** void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 238:Src/usbd_conf.c **** {
 590              		.loc 1 238 0
 591              		.cfi_startproc
 592 0000 80B5     		push	{r7, lr}
 593              	.LCFI30:
 594              		.cfi_def_cfa_offset 8
 595              		.cfi_offset 7, -8
 596              		.cfi_offset 14, -4
 597 0002 82B0     		sub	sp, sp, #8
 598              	.LCFI31:
 599              		.cfi_def_cfa_offset 16
 600 0004 00AF     		add	r7, sp, #0
 601              	.LCFI32:
 602              		.cfi_def_cfa_register 7
 603 0006 7860     		str	r0, [r7, #4]
 604 0008 0A00     		movs	r2, r1
 605 000a FB1C     		adds	r3, r7, #3
 606 000c 1A70     		strb	r2, [r3]
 239:Src/usbd_conf.c ****   USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 607              		.loc 1 239 0
 608 000e 7A68     		ldr	r2, [r7, #4]
 609 0010 8723     		movs	r3, #135
 610 0012 9B00     		lsls	r3, r3, #2
 611 0014 D258     		ldr	r2, [r2, r3]
 612 0016 FB1C     		adds	r3, r7, #3
 613 0018 1B78     		ldrb	r3, [r3]
 614 001a 1900     		movs	r1, r3
 615 001c 1000     		movs	r0, r2
 616 001e FFF7FEFF 		bl	USBD_LL_IsoINIncomplete
 240:Src/usbd_conf.c **** }
 617              		.loc 1 240 0
 618 0022 C046     		nop
 619 0024 BD46     		mov	sp, r7
 620 0026 02B0     		add	sp, sp, #8
 621              		@ sp needed
 622 0028 80BD     		pop	{r7, pc}
 623              		.cfi_endproc
 624              	.LFE45:
 626              		.section	.text.HAL_PCD_ConnectCallback,"ax",%progbits
 627              		.align	1
 628              		.global	HAL_PCD_ConnectCallback
 629              		.syntax unified
 630              		.code	16
 631              		.thumb_func
 632              		.fpu softvfp
 634              	HAL_PCD_ConnectCallback:
 635              	.LFB46:
 241:Src/usbd_conf.c **** 
 242:Src/usbd_conf.c **** /**
 243:Src/usbd_conf.c ****   * @brief  ConnectCallback callback.
ARM GAS  /tmp/ccTNQqxW.s 			page 16


 244:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 245:Src/usbd_conf.c ****   * @retval None
 246:Src/usbd_conf.c ****   */
 247:Src/usbd_conf.c **** void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 248:Src/usbd_conf.c **** {
 636              		.loc 1 248 0
 637              		.cfi_startproc
 638 0000 80B5     		push	{r7, lr}
 639              	.LCFI33:
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 14, -4
 643 0002 82B0     		sub	sp, sp, #8
 644              	.LCFI34:
 645              		.cfi_def_cfa_offset 16
 646 0004 00AF     		add	r7, sp, #0
 647              	.LCFI35:
 648              		.cfi_def_cfa_register 7
 649 0006 7860     		str	r0, [r7, #4]
 249:Src/usbd_conf.c ****   USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 650              		.loc 1 249 0
 651 0008 7A68     		ldr	r2, [r7, #4]
 652 000a 8723     		movs	r3, #135
 653 000c 9B00     		lsls	r3, r3, #2
 654 000e D358     		ldr	r3, [r2, r3]
 655 0010 1800     		movs	r0, r3
 656 0012 FFF7FEFF 		bl	USBD_LL_DevConnected
 250:Src/usbd_conf.c **** }
 657              		.loc 1 250 0
 658 0016 C046     		nop
 659 0018 BD46     		mov	sp, r7
 660 001a 02B0     		add	sp, sp, #8
 661              		@ sp needed
 662 001c 80BD     		pop	{r7, pc}
 663              		.cfi_endproc
 664              	.LFE46:
 666              		.section	.text.HAL_PCD_DisconnectCallback,"ax",%progbits
 667              		.align	1
 668              		.global	HAL_PCD_DisconnectCallback
 669              		.syntax unified
 670              		.code	16
 671              		.thumb_func
 672              		.fpu softvfp
 674              	HAL_PCD_DisconnectCallback:
 675              	.LFB47:
 251:Src/usbd_conf.c **** 
 252:Src/usbd_conf.c **** /**
 253:Src/usbd_conf.c ****   * @brief  Disconnect callback.
 254:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 255:Src/usbd_conf.c ****   * @retval None
 256:Src/usbd_conf.c ****   */
 257:Src/usbd_conf.c **** void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 258:Src/usbd_conf.c **** {
 676              		.loc 1 258 0
 677              		.cfi_startproc
 678 0000 80B5     		push	{r7, lr}
 679              	.LCFI36:
ARM GAS  /tmp/ccTNQqxW.s 			page 17


 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 82B0     		sub	sp, sp, #8
 684              	.LCFI37:
 685              		.cfi_def_cfa_offset 16
 686 0004 00AF     		add	r7, sp, #0
 687              	.LCFI38:
 688              		.cfi_def_cfa_register 7
 689 0006 7860     		str	r0, [r7, #4]
 259:Src/usbd_conf.c ****   USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 690              		.loc 1 259 0
 691 0008 7A68     		ldr	r2, [r7, #4]
 692 000a 8723     		movs	r3, #135
 693 000c 9B00     		lsls	r3, r3, #2
 694 000e D358     		ldr	r3, [r2, r3]
 695 0010 1800     		movs	r0, r3
 696 0012 FFF7FEFF 		bl	USBD_LL_DevDisconnected
 260:Src/usbd_conf.c **** }
 697              		.loc 1 260 0
 698 0016 C046     		nop
 699 0018 BD46     		mov	sp, r7
 700 001a 02B0     		add	sp, sp, #8
 701              		@ sp needed
 702 001c 80BD     		pop	{r7, pc}
 703              		.cfi_endproc
 704              	.LFE47:
 706              		.section	.text.USBD_LL_Init,"ax",%progbits
 707              		.align	1
 708              		.global	USBD_LL_Init
 709              		.syntax unified
 710              		.code	16
 711              		.thumb_func
 712              		.fpu softvfp
 714              	USBD_LL_Init:
 715              	.LFB48:
 261:Src/usbd_conf.c **** 
 262:Src/usbd_conf.c **** /*******************************************************************************
 263:Src/usbd_conf.c ****                        LL Driver Interface (USB Device Library --> PCD)
 264:Src/usbd_conf.c **** *******************************************************************************/
 265:Src/usbd_conf.c **** /**
 266:Src/usbd_conf.c ****   * @brief  Initializes the Low Level portion of the Device driver.
 267:Src/usbd_conf.c ****   * @param  pdev: Device handle
 268:Src/usbd_conf.c ****   * @retval USBD Status
 269:Src/usbd_conf.c ****   */
 270:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Init (USBD_HandleTypeDef *pdev)
 271:Src/usbd_conf.c **** { 
 716              		.loc 1 271 0
 717              		.cfi_startproc
 718 0000 80B5     		push	{r7, lr}
 719              	.LCFI39:
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 7, -8
 722              		.cfi_offset 14, -4
 723 0002 82B0     		sub	sp, sp, #8
 724              	.LCFI40:
 725              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccTNQqxW.s 			page 18


 726 0004 00AF     		add	r7, sp, #0
 727              	.LCFI41:
 728              		.cfi_def_cfa_register 7
 729 0006 7860     		str	r0, [r7, #4]
 272:Src/usbd_conf.c ****   /* Init USB_IP */
 273:Src/usbd_conf.c ****   /* Link The driver to the stack */
 274:Src/usbd_conf.c ****   hpcd_USB_FS.pData = pdev;
 730              		.loc 1 274 0
 731 0008 2E4A     		ldr	r2, .L36
 732 000a 8723     		movs	r3, #135
 733 000c 9B00     		lsls	r3, r3, #2
 734 000e 7968     		ldr	r1, [r7, #4]
 735 0010 D150     		str	r1, [r2, r3]
 275:Src/usbd_conf.c ****   pdev->pData = &hpcd_USB_FS;
 736              		.loc 1 275 0
 737 0012 7A68     		ldr	r2, [r7, #4]
 738 0014 8823     		movs	r3, #136
 739 0016 9B00     		lsls	r3, r3, #2
 740 0018 2A49     		ldr	r1, .L36
 741 001a D150     		str	r1, [r2, r3]
 276:Src/usbd_conf.c **** 
 277:Src/usbd_conf.c ****   hpcd_USB_FS.Instance = USB;
 742              		.loc 1 277 0
 743 001c 294B     		ldr	r3, .L36
 744 001e 2A4A     		ldr	r2, .L36+4
 745 0020 1A60     		str	r2, [r3]
 278:Src/usbd_conf.c ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 746              		.loc 1 278 0
 747 0022 284B     		ldr	r3, .L36
 748 0024 0822     		movs	r2, #8
 749 0026 5A60     		str	r2, [r3, #4]
 279:Src/usbd_conf.c ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 750              		.loc 1 279 0
 751 0028 264B     		ldr	r3, .L36
 752 002a 0222     		movs	r2, #2
 753 002c 9A60     		str	r2, [r3, #8]
 280:Src/usbd_conf.c ****   hpcd_USB_FS.Init.ep0_mps = DEP0CTL_MPS_64;
 754              		.loc 1 280 0
 755 002e 254B     		ldr	r3, .L36
 756 0030 0022     		movs	r2, #0
 757 0032 DA60     		str	r2, [r3, #12]
 281:Src/usbd_conf.c ****   hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 758              		.loc 1 281 0
 759 0034 234B     		ldr	r3, .L36
 760 0036 0222     		movs	r2, #2
 761 0038 1A61     		str	r2, [r3, #16]
 282:Src/usbd_conf.c ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 762              		.loc 1 282 0
 763 003a 224B     		ldr	r3, .L36
 764 003c 0022     		movs	r2, #0
 765 003e 9A61     		str	r2, [r3, #24]
 283:Src/usbd_conf.c ****   hpcd_USB_FS.Init.lpm_enable = DISABLE;
 766              		.loc 1 283 0
 767 0040 204B     		ldr	r3, .L36
 768 0042 0022     		movs	r2, #0
 769 0044 DA61     		str	r2, [r3, #28]
 284:Src/usbd_conf.c ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
ARM GAS  /tmp/ccTNQqxW.s 			page 19


 770              		.loc 1 284 0
 771 0046 1F4B     		ldr	r3, .L36
 772 0048 0022     		movs	r2, #0
 773 004a 1A62     		str	r2, [r3, #32]
 285:Src/usbd_conf.c ****   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 774              		.loc 1 285 0
 775 004c 1D4B     		ldr	r3, .L36
 776 004e 1800     		movs	r0, r3
 777 0050 FFF7FEFF 		bl	HAL_PCD_Init
 778 0054 031E     		subs	r3, r0, #0
 779 0056 01D0     		beq	.L34
 286:Src/usbd_conf.c ****   {
 287:Src/usbd_conf.c ****     Error_Handler();
 780              		.loc 1 287 0
 781 0058 FFF7FEFF 		bl	Error_Handler
 782              	.L34:
 288:Src/usbd_conf.c ****   }
 289:Src/usbd_conf.c **** 
 290:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 783              		.loc 1 290 0
 784 005c 7A68     		ldr	r2, [r7, #4]
 785 005e 8823     		movs	r3, #136
 786 0060 9B00     		lsls	r3, r3, #2
 787 0062 D058     		ldr	r0, [r2, r3]
 788 0064 1823     		movs	r3, #24
 789 0066 0022     		movs	r2, #0
 790 0068 0021     		movs	r1, #0
 791 006a FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 291:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 792              		.loc 1 291 0
 793 006e 7A68     		ldr	r2, [r7, #4]
 794 0070 8823     		movs	r3, #136
 795 0072 9B00     		lsls	r3, r3, #2
 796 0074 D058     		ldr	r0, [r2, r3]
 797 0076 5823     		movs	r3, #88
 798 0078 0022     		movs	r2, #0
 799 007a 8021     		movs	r1, #128
 800 007c FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 292:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x81 , PCD_SNG_BUF, 0xC0);  
 801              		.loc 1 292 0
 802 0080 7A68     		ldr	r2, [r7, #4]
 803 0082 8823     		movs	r3, #136
 804 0084 9B00     		lsls	r3, r3, #2
 805 0086 D058     		ldr	r0, [r2, r3]
 806 0088 C023     		movs	r3, #192
 807 008a 0022     		movs	r2, #0
 808 008c 8121     		movs	r1, #129
 809 008e FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 293:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x01 , PCD_SNG_BUF, 0x110);
 810              		.loc 1 293 0
 811 0092 7A68     		ldr	r2, [r7, #4]
 812 0094 8823     		movs	r3, #136
 813 0096 9B00     		lsls	r3, r3, #2
 814 0098 D058     		ldr	r0, [r2, r3]
 815 009a 8823     		movs	r3, #136
 816 009c 5B00     		lsls	r3, r3, #1
 817 009e 0022     		movs	r2, #0
ARM GAS  /tmp/ccTNQqxW.s 			page 20


 818 00a0 0121     		movs	r1, #1
 819 00a2 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 294:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x82 , PCD_SNG_BUF, 0x100);  
 820              		.loc 1 294 0
 821 00a6 7A68     		ldr	r2, [r7, #4]
 822 00a8 8823     		movs	r3, #136
 823 00aa 9B00     		lsls	r3, r3, #2
 824 00ac D058     		ldr	r0, [r2, r3]
 825 00ae 8023     		movs	r3, #128
 826 00b0 5B00     		lsls	r3, r3, #1
 827 00b2 0022     		movs	r2, #0
 828 00b4 8221     		movs	r1, #130
 829 00b6 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 295:Src/usbd_conf.c ****   return USBD_OK;
 830              		.loc 1 295 0
 831 00ba 0023     		movs	r3, #0
 296:Src/usbd_conf.c **** }
 832              		.loc 1 296 0
 833 00bc 1800     		movs	r0, r3
 834 00be BD46     		mov	sp, r7
 835 00c0 02B0     		add	sp, sp, #8
 836              		@ sp needed
 837 00c2 80BD     		pop	{r7, pc}
 838              	.L37:
 839              		.align	2
 840              	.L36:
 841 00c4 00000000 		.word	hpcd_USB_FS
 842 00c8 005C0040 		.word	1073765376
 843              		.cfi_endproc
 844              	.LFE48:
 846              		.section	.text.USBD_LL_DeInit,"ax",%progbits
 847              		.align	1
 848              		.global	USBD_LL_DeInit
 849              		.syntax unified
 850              		.code	16
 851              		.thumb_func
 852              		.fpu softvfp
 854              	USBD_LL_DeInit:
 855              	.LFB49:
 297:Src/usbd_conf.c **** 
 298:Src/usbd_conf.c **** /**
 299:Src/usbd_conf.c ****   * @brief  De-Initializes the Low Level portion of the Device driver.
 300:Src/usbd_conf.c ****   * @param  pdev: Device handle
 301:Src/usbd_conf.c ****   * @retval USBD Status
 302:Src/usbd_conf.c ****   */
 303:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_DeInit (USBD_HandleTypeDef *pdev)
 304:Src/usbd_conf.c **** {
 856              		.loc 1 304 0
 857              		.cfi_startproc
 858 0000 80B5     		push	{r7, lr}
 859              	.LCFI42:
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 7, -8
 862              		.cfi_offset 14, -4
 863 0002 82B0     		sub	sp, sp, #8
 864              	.LCFI43:
 865              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccTNQqxW.s 			page 21


 866 0004 00AF     		add	r7, sp, #0
 867              	.LCFI44:
 868              		.cfi_def_cfa_register 7
 869 0006 7860     		str	r0, [r7, #4]
 305:Src/usbd_conf.c ****   HAL_PCD_DeInit((PCD_HandleTypeDef*)pdev->pData);
 870              		.loc 1 305 0
 871 0008 7A68     		ldr	r2, [r7, #4]
 872 000a 8823     		movs	r3, #136
 873 000c 9B00     		lsls	r3, r3, #2
 874 000e D358     		ldr	r3, [r2, r3]
 875 0010 1800     		movs	r0, r3
 876 0012 FFF7FEFF 		bl	HAL_PCD_DeInit
 306:Src/usbd_conf.c ****   return USBD_OK;
 877              		.loc 1 306 0
 878 0016 0023     		movs	r3, #0
 307:Src/usbd_conf.c **** }
 879              		.loc 1 307 0
 880 0018 1800     		movs	r0, r3
 881 001a BD46     		mov	sp, r7
 882 001c 02B0     		add	sp, sp, #8
 883              		@ sp needed
 884 001e 80BD     		pop	{r7, pc}
 885              		.cfi_endproc
 886              	.LFE49:
 888              		.section	.text.USBD_LL_Start,"ax",%progbits
 889              		.align	1
 890              		.global	USBD_LL_Start
 891              		.syntax unified
 892              		.code	16
 893              		.thumb_func
 894              		.fpu softvfp
 896              	USBD_LL_Start:
 897              	.LFB50:
 308:Src/usbd_conf.c **** 
 309:Src/usbd_conf.c **** /**
 310:Src/usbd_conf.c ****   * @brief  Starts the Low Level portion of the Device driver. 
 311:Src/usbd_conf.c ****   * @param  pdev: Device handle
 312:Src/usbd_conf.c ****   * @retval USBD Status
 313:Src/usbd_conf.c ****   */
 314:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Start(USBD_HandleTypeDef *pdev)
 315:Src/usbd_conf.c **** {
 898              		.loc 1 315 0
 899              		.cfi_startproc
 900 0000 80B5     		push	{r7, lr}
 901              	.LCFI45:
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 7, -8
 904              		.cfi_offset 14, -4
 905 0002 82B0     		sub	sp, sp, #8
 906              	.LCFI46:
 907              		.cfi_def_cfa_offset 16
 908 0004 00AF     		add	r7, sp, #0
 909              	.LCFI47:
 910              		.cfi_def_cfa_register 7
 911 0006 7860     		str	r0, [r7, #4]
 316:Src/usbd_conf.c ****   HAL_PCD_Start((PCD_HandleTypeDef*)pdev->pData);
 912              		.loc 1 316 0
ARM GAS  /tmp/ccTNQqxW.s 			page 22


 913 0008 7A68     		ldr	r2, [r7, #4]
 914 000a 8823     		movs	r3, #136
 915 000c 9B00     		lsls	r3, r3, #2
 916 000e D358     		ldr	r3, [r2, r3]
 917 0010 1800     		movs	r0, r3
 918 0012 FFF7FEFF 		bl	HAL_PCD_Start
 317:Src/usbd_conf.c ****   return USBD_OK;
 919              		.loc 1 317 0
 920 0016 0023     		movs	r3, #0
 318:Src/usbd_conf.c **** }
 921              		.loc 1 318 0
 922 0018 1800     		movs	r0, r3
 923 001a BD46     		mov	sp, r7
 924 001c 02B0     		add	sp, sp, #8
 925              		@ sp needed
 926 001e 80BD     		pop	{r7, pc}
 927              		.cfi_endproc
 928              	.LFE50:
 930              		.section	.text.USBD_LL_Stop,"ax",%progbits
 931              		.align	1
 932              		.global	USBD_LL_Stop
 933              		.syntax unified
 934              		.code	16
 935              		.thumb_func
 936              		.fpu softvfp
 938              	USBD_LL_Stop:
 939              	.LFB51:
 319:Src/usbd_conf.c **** 
 320:Src/usbd_conf.c **** /**
 321:Src/usbd_conf.c ****   * @brief  Stops the Low Level portion of the Device driver.
 322:Src/usbd_conf.c ****   * @param  pdev: Device handle
 323:Src/usbd_conf.c ****   * @retval USBD Status
 324:Src/usbd_conf.c ****   */
 325:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Stop (USBD_HandleTypeDef *pdev)
 326:Src/usbd_conf.c **** {
 940              		.loc 1 326 0
 941              		.cfi_startproc
 942 0000 80B5     		push	{r7, lr}
 943              	.LCFI48:
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 82B0     		sub	sp, sp, #8
 948              	.LCFI49:
 949              		.cfi_def_cfa_offset 16
 950 0004 00AF     		add	r7, sp, #0
 951              	.LCFI50:
 952              		.cfi_def_cfa_register 7
 953 0006 7860     		str	r0, [r7, #4]
 327:Src/usbd_conf.c ****   HAL_PCD_Stop((PCD_HandleTypeDef*) pdev->pData);
 954              		.loc 1 327 0
 955 0008 7A68     		ldr	r2, [r7, #4]
 956 000a 8823     		movs	r3, #136
 957 000c 9B00     		lsls	r3, r3, #2
 958 000e D358     		ldr	r3, [r2, r3]
 959 0010 1800     		movs	r0, r3
 960 0012 FFF7FEFF 		bl	HAL_PCD_Stop
ARM GAS  /tmp/ccTNQqxW.s 			page 23


 328:Src/usbd_conf.c ****   return USBD_OK;
 961              		.loc 1 328 0
 962 0016 0023     		movs	r3, #0
 329:Src/usbd_conf.c **** }
 963              		.loc 1 329 0
 964 0018 1800     		movs	r0, r3
 965 001a BD46     		mov	sp, r7
 966 001c 02B0     		add	sp, sp, #8
 967              		@ sp needed
 968 001e 80BD     		pop	{r7, pc}
 969              		.cfi_endproc
 970              	.LFE51:
 972              		.section	.text.USBD_LL_OpenEP,"ax",%progbits
 973              		.align	1
 974              		.global	USBD_LL_OpenEP
 975              		.syntax unified
 976              		.code	16
 977              		.thumb_func
 978              		.fpu softvfp
 980              	USBD_LL_OpenEP:
 981              	.LFB52:
 330:Src/usbd_conf.c **** 
 331:Src/usbd_conf.c **** /**
 332:Src/usbd_conf.c ****   * @brief  Opens an endpoint of the Low Level Driver.
 333:Src/usbd_conf.c ****   * @param  pdev: Device handle
 334:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 335:Src/usbd_conf.c ****   * @param  ep_type: Endpoint Type
 336:Src/usbd_conf.c ****   * @param  ep_mps: Endpoint Max Packet Size
 337:Src/usbd_conf.c ****   * @retval USBD Status
 338:Src/usbd_conf.c ****   */
 339:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_OpenEP  (USBD_HandleTypeDef *pdev, 
 340:Src/usbd_conf.c ****                                       uint8_t  ep_addr,                                      
 341:Src/usbd_conf.c ****                                       uint8_t  ep_type,
 342:Src/usbd_conf.c ****                                       uint16_t ep_mps)
 343:Src/usbd_conf.c **** {
 982              		.loc 1 343 0
 983              		.cfi_startproc
 984 0000 90B5     		push	{r4, r7, lr}
 985              	.LCFI51:
 986              		.cfi_def_cfa_offset 12
 987              		.cfi_offset 4, -12
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 0002 83B0     		sub	sp, sp, #12
 991              	.LCFI52:
 992              		.cfi_def_cfa_offset 24
 993 0004 00AF     		add	r7, sp, #0
 994              	.LCFI53:
 995              		.cfi_def_cfa_register 7
 996 0006 7860     		str	r0, [r7, #4]
 997 0008 0C00     		movs	r4, r1
 998 000a 1000     		movs	r0, r2
 999 000c 1900     		movs	r1, r3
 1000 000e FB1C     		adds	r3, r7, #3
 1001 0010 221C     		adds	r2, r4, #0
 1002 0012 1A70     		strb	r2, [r3]
 1003 0014 BB1C     		adds	r3, r7, #2
ARM GAS  /tmp/ccTNQqxW.s 			page 24


 1004 0016 021C     		adds	r2, r0, #0
 1005 0018 1A70     		strb	r2, [r3]
 1006 001a 3B00     		movs	r3, r7
 1007 001c 0A1C     		adds	r2, r1, #0
 1008 001e 1A80     		strh	r2, [r3]
 344:Src/usbd_conf.c ****   HAL_PCD_EP_Open((PCD_HandleTypeDef*) pdev->pData,
 1009              		.loc 1 344 0
 1010 0020 7A68     		ldr	r2, [r7, #4]
 1011 0022 8823     		movs	r3, #136
 1012 0024 9B00     		lsls	r3, r3, #2
 1013 0026 D058     		ldr	r0, [r2, r3]
 1014 0028 BB1C     		adds	r3, r7, #2
 1015 002a 1C78     		ldrb	r4, [r3]
 1016 002c 3B00     		movs	r3, r7
 1017 002e 1A88     		ldrh	r2, [r3]
 1018 0030 FB1C     		adds	r3, r7, #3
 1019 0032 1978     		ldrb	r1, [r3]
 1020 0034 2300     		movs	r3, r4
 1021 0036 FFF7FEFF 		bl	HAL_PCD_EP_Open
 345:Src/usbd_conf.c ****                   ep_addr,
 346:Src/usbd_conf.c ****                   ep_mps,
 347:Src/usbd_conf.c ****                   ep_type);
 348:Src/usbd_conf.c ****   
 349:Src/usbd_conf.c ****   return USBD_OK; 
 1022              		.loc 1 349 0
 1023 003a 0023     		movs	r3, #0
 350:Src/usbd_conf.c **** }
 1024              		.loc 1 350 0
 1025 003c 1800     		movs	r0, r3
 1026 003e BD46     		mov	sp, r7
 1027 0040 03B0     		add	sp, sp, #12
 1028              		@ sp needed
 1029 0042 90BD     		pop	{r4, r7, pc}
 1030              		.cfi_endproc
 1031              	.LFE52:
 1033              		.section	.text.USBD_LL_CloseEP,"ax",%progbits
 1034              		.align	1
 1035              		.global	USBD_LL_CloseEP
 1036              		.syntax unified
 1037              		.code	16
 1038              		.thumb_func
 1039              		.fpu softvfp
 1041              	USBD_LL_CloseEP:
 1042              	.LFB53:
 351:Src/usbd_conf.c **** 
 352:Src/usbd_conf.c **** /**
 353:Src/usbd_conf.c ****   * @brief  Closes an endpoint of the Low Level Driver.
 354:Src/usbd_conf.c ****   * @param  pdev: Device handle
 355:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 356:Src/usbd_conf.c ****   * @retval USBD Status
 357:Src/usbd_conf.c ****   */
 358:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_CloseEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 359:Src/usbd_conf.c **** {
 1043              		.loc 1 359 0
 1044              		.cfi_startproc
 1045 0000 80B5     		push	{r7, lr}
 1046              	.LCFI54:
ARM GAS  /tmp/ccTNQqxW.s 			page 25


 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 7, -8
 1049              		.cfi_offset 14, -4
 1050 0002 82B0     		sub	sp, sp, #8
 1051              	.LCFI55:
 1052              		.cfi_def_cfa_offset 16
 1053 0004 00AF     		add	r7, sp, #0
 1054              	.LCFI56:
 1055              		.cfi_def_cfa_register 7
 1056 0006 7860     		str	r0, [r7, #4]
 1057 0008 0A00     		movs	r2, r1
 1058 000a FB1C     		adds	r3, r7, #3
 1059 000c 1A70     		strb	r2, [r3]
 360:Src/usbd_conf.c ****   HAL_PCD_EP_Close((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 1060              		.loc 1 360 0
 1061 000e 7A68     		ldr	r2, [r7, #4]
 1062 0010 8823     		movs	r3, #136
 1063 0012 9B00     		lsls	r3, r3, #2
 1064 0014 D258     		ldr	r2, [r2, r3]
 1065 0016 FB1C     		adds	r3, r7, #3
 1066 0018 1B78     		ldrb	r3, [r3]
 1067 001a 1900     		movs	r1, r3
 1068 001c 1000     		movs	r0, r2
 1069 001e FFF7FEFF 		bl	HAL_PCD_EP_Close
 361:Src/usbd_conf.c ****   return USBD_OK;
 1070              		.loc 1 361 0
 1071 0022 0023     		movs	r3, #0
 362:Src/usbd_conf.c **** }
 1072              		.loc 1 362 0
 1073 0024 1800     		movs	r0, r3
 1074 0026 BD46     		mov	sp, r7
 1075 0028 02B0     		add	sp, sp, #8
 1076              		@ sp needed
 1077 002a 80BD     		pop	{r7, pc}
 1078              		.cfi_endproc
 1079              	.LFE53:
 1081              		.section	.text.USBD_LL_FlushEP,"ax",%progbits
 1082              		.align	1
 1083              		.global	USBD_LL_FlushEP
 1084              		.syntax unified
 1085              		.code	16
 1086              		.thumb_func
 1087              		.fpu softvfp
 1089              	USBD_LL_FlushEP:
 1090              	.LFB54:
 363:Src/usbd_conf.c **** 
 364:Src/usbd_conf.c **** /**
 365:Src/usbd_conf.c ****   * @brief  Flushes an endpoint of the Low Level Driver.
 366:Src/usbd_conf.c ****   * @param  pdev: Device handle
 367:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 368:Src/usbd_conf.c ****   * @retval USBD Status
 369:Src/usbd_conf.c ****   */
 370:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_FlushEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 371:Src/usbd_conf.c **** {
 1091              		.loc 1 371 0
 1092              		.cfi_startproc
 1093 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccTNQqxW.s 			page 26


 1094              	.LCFI57:
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 82B0     		sub	sp, sp, #8
 1099              	.LCFI58:
 1100              		.cfi_def_cfa_offset 16
 1101 0004 00AF     		add	r7, sp, #0
 1102              	.LCFI59:
 1103              		.cfi_def_cfa_register 7
 1104 0006 7860     		str	r0, [r7, #4]
 1105 0008 0A00     		movs	r2, r1
 1106 000a FB1C     		adds	r3, r7, #3
 1107 000c 1A70     		strb	r2, [r3]
 372:Src/usbd_conf.c ****   HAL_PCD_EP_Flush((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 1108              		.loc 1 372 0
 1109 000e 7A68     		ldr	r2, [r7, #4]
 1110 0010 8823     		movs	r3, #136
 1111 0012 9B00     		lsls	r3, r3, #2
 1112 0014 D258     		ldr	r2, [r2, r3]
 1113 0016 FB1C     		adds	r3, r7, #3
 1114 0018 1B78     		ldrb	r3, [r3]
 1115 001a 1900     		movs	r1, r3
 1116 001c 1000     		movs	r0, r2
 1117 001e FFF7FEFF 		bl	HAL_PCD_EP_Flush
 373:Src/usbd_conf.c ****   return USBD_OK;
 1118              		.loc 1 373 0
 1119 0022 0023     		movs	r3, #0
 374:Src/usbd_conf.c **** }
 1120              		.loc 1 374 0
 1121 0024 1800     		movs	r0, r3
 1122 0026 BD46     		mov	sp, r7
 1123 0028 02B0     		add	sp, sp, #8
 1124              		@ sp needed
 1125 002a 80BD     		pop	{r7, pc}
 1126              		.cfi_endproc
 1127              	.LFE54:
 1129              		.section	.text.USBD_LL_StallEP,"ax",%progbits
 1130              		.align	1
 1131              		.global	USBD_LL_StallEP
 1132              		.syntax unified
 1133              		.code	16
 1134              		.thumb_func
 1135              		.fpu softvfp
 1137              	USBD_LL_StallEP:
 1138              	.LFB55:
 375:Src/usbd_conf.c **** 
 376:Src/usbd_conf.c **** /**
 377:Src/usbd_conf.c ****   * @brief  Sets a Stall condition on an endpoint of the Low Level Driver.
 378:Src/usbd_conf.c ****   * @param  pdev: Device handle
 379:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 380:Src/usbd_conf.c ****   * @retval USBD Status
 381:Src/usbd_conf.c ****   */
 382:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_StallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 383:Src/usbd_conf.c **** {
 1139              		.loc 1 383 0
 1140              		.cfi_startproc
ARM GAS  /tmp/ccTNQqxW.s 			page 27


 1141 0000 80B5     		push	{r7, lr}
 1142              	.LCFI60:
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 7, -8
 1145              		.cfi_offset 14, -4
 1146 0002 82B0     		sub	sp, sp, #8
 1147              	.LCFI61:
 1148              		.cfi_def_cfa_offset 16
 1149 0004 00AF     		add	r7, sp, #0
 1150              	.LCFI62:
 1151              		.cfi_def_cfa_register 7
 1152 0006 7860     		str	r0, [r7, #4]
 1153 0008 0A00     		movs	r2, r1
 1154 000a FB1C     		adds	r3, r7, #3
 1155 000c 1A70     		strb	r2, [r3]
 384:Src/usbd_conf.c ****   HAL_PCD_EP_SetStall((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 1156              		.loc 1 384 0
 1157 000e 7A68     		ldr	r2, [r7, #4]
 1158 0010 8823     		movs	r3, #136
 1159 0012 9B00     		lsls	r3, r3, #2
 1160 0014 D258     		ldr	r2, [r2, r3]
 1161 0016 FB1C     		adds	r3, r7, #3
 1162 0018 1B78     		ldrb	r3, [r3]
 1163 001a 1900     		movs	r1, r3
 1164 001c 1000     		movs	r0, r2
 1165 001e FFF7FEFF 		bl	HAL_PCD_EP_SetStall
 385:Src/usbd_conf.c ****   return USBD_OK;
 1166              		.loc 1 385 0
 1167 0022 0023     		movs	r3, #0
 386:Src/usbd_conf.c **** }
 1168              		.loc 1 386 0
 1169 0024 1800     		movs	r0, r3
 1170 0026 BD46     		mov	sp, r7
 1171 0028 02B0     		add	sp, sp, #8
 1172              		@ sp needed
 1173 002a 80BD     		pop	{r7, pc}
 1174              		.cfi_endproc
 1175              	.LFE55:
 1177              		.section	.text.USBD_LL_ClearStallEP,"ax",%progbits
 1178              		.align	1
 1179              		.global	USBD_LL_ClearStallEP
 1180              		.syntax unified
 1181              		.code	16
 1182              		.thumb_func
 1183              		.fpu softvfp
 1185              	USBD_LL_ClearStallEP:
 1186              	.LFB56:
 387:Src/usbd_conf.c **** 
 388:Src/usbd_conf.c **** /**
 389:Src/usbd_conf.c ****   * @brief  Clears a Stall condition on an endpoint of the Low Level Driver.
 390:Src/usbd_conf.c ****   * @param  pdev: Device handle
 391:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 392:Src/usbd_conf.c ****   * @retval USBD Status
 393:Src/usbd_conf.c ****   */
 394:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_ClearStallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 395:Src/usbd_conf.c **** {
 1187              		.loc 1 395 0
ARM GAS  /tmp/ccTNQqxW.s 			page 28


 1188              		.cfi_startproc
 1189 0000 80B5     		push	{r7, lr}
 1190              	.LCFI63:
 1191              		.cfi_def_cfa_offset 8
 1192              		.cfi_offset 7, -8
 1193              		.cfi_offset 14, -4
 1194 0002 82B0     		sub	sp, sp, #8
 1195              	.LCFI64:
 1196              		.cfi_def_cfa_offset 16
 1197 0004 00AF     		add	r7, sp, #0
 1198              	.LCFI65:
 1199              		.cfi_def_cfa_register 7
 1200 0006 7860     		str	r0, [r7, #4]
 1201 0008 0A00     		movs	r2, r1
 1202 000a FB1C     		adds	r3, r7, #3
 1203 000c 1A70     		strb	r2, [r3]
 396:Src/usbd_conf.c ****   HAL_PCD_EP_ClrStall((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 1204              		.loc 1 396 0
 1205 000e 7A68     		ldr	r2, [r7, #4]
 1206 0010 8823     		movs	r3, #136
 1207 0012 9B00     		lsls	r3, r3, #2
 1208 0014 D258     		ldr	r2, [r2, r3]
 1209 0016 FB1C     		adds	r3, r7, #3
 1210 0018 1B78     		ldrb	r3, [r3]
 1211 001a 1900     		movs	r1, r3
 1212 001c 1000     		movs	r0, r2
 1213 001e FFF7FEFF 		bl	HAL_PCD_EP_ClrStall
 397:Src/usbd_conf.c ****   return USBD_OK; 
 1214              		.loc 1 397 0
 1215 0022 0023     		movs	r3, #0
 398:Src/usbd_conf.c **** }
 1216              		.loc 1 398 0
 1217 0024 1800     		movs	r0, r3
 1218 0026 BD46     		mov	sp, r7
 1219 0028 02B0     		add	sp, sp, #8
 1220              		@ sp needed
 1221 002a 80BD     		pop	{r7, pc}
 1222              		.cfi_endproc
 1223              	.LFE56:
 1225              		.section	.text.USBD_LL_IsStallEP,"ax",%progbits
 1226              		.align	1
 1227              		.global	USBD_LL_IsStallEP
 1228              		.syntax unified
 1229              		.code	16
 1230              		.thumb_func
 1231              		.fpu softvfp
 1233              	USBD_LL_IsStallEP:
 1234              	.LFB57:
 399:Src/usbd_conf.c **** 
 400:Src/usbd_conf.c **** /**
 401:Src/usbd_conf.c ****   * @brief  Returns Stall condition.
 402:Src/usbd_conf.c ****   * @param  pdev: Device handle
 403:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 404:Src/usbd_conf.c ****   * @retval Stall (1: Yes, 0: No)
 405:Src/usbd_conf.c ****   */
 406:Src/usbd_conf.c **** uint8_t USBD_LL_IsStallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 407:Src/usbd_conf.c **** {
ARM GAS  /tmp/ccTNQqxW.s 			page 29


 1235              		.loc 1 407 0
 1236              		.cfi_startproc
 1237 0000 80B5     		push	{r7, lr}
 1238              	.LCFI66:
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 7, -8
 1241              		.cfi_offset 14, -4
 1242 0002 84B0     		sub	sp, sp, #16
 1243              	.LCFI67:
 1244              		.cfi_def_cfa_offset 24
 1245 0004 00AF     		add	r7, sp, #0
 1246              	.LCFI68:
 1247              		.cfi_def_cfa_register 7
 1248 0006 7860     		str	r0, [r7, #4]
 1249 0008 0A00     		movs	r2, r1
 1250 000a FB1C     		adds	r3, r7, #3
 1251 000c 1A70     		strb	r2, [r3]
 408:Src/usbd_conf.c ****   PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 1252              		.loc 1 408 0
 1253 000e 7A68     		ldr	r2, [r7, #4]
 1254 0010 8823     		movs	r3, #136
 1255 0012 9B00     		lsls	r3, r3, #2
 1256 0014 D358     		ldr	r3, [r2, r3]
 1257 0016 FB60     		str	r3, [r7, #12]
 409:Src/usbd_conf.c ****   
 410:Src/usbd_conf.c ****   if((ep_addr & 0x80) == 0x80)
 1258              		.loc 1 410 0
 1259 0018 FB1C     		adds	r3, r7, #3
 1260 001a 1B78     		ldrb	r3, [r3]
 1261 001c 5BB2     		sxtb	r3, r3
 1262 001e 002B     		cmp	r3, #0
 1263 0020 0DDA     		bge	.L55
 411:Src/usbd_conf.c ****   {
 412:Src/usbd_conf.c ****     return hpcd->IN_ep[ep_addr & 0x7F].is_stall; 
 1264              		.loc 1 412 0
 1265 0022 FB1C     		adds	r3, r7, #3
 1266 0024 1B78     		ldrb	r3, [r3]
 1267 0026 7F22     		movs	r2, #127
 1268 0028 1A40     		ands	r2, r3
 1269 002a F968     		ldr	r1, [r7, #12]
 1270 002c 2A20     		movs	r0, #42
 1271 002e 1300     		movs	r3, r2
 1272 0030 DB00     		lsls	r3, r3, #3
 1273 0032 9B1A     		subs	r3, r3, r2
 1274 0034 9B00     		lsls	r3, r3, #2
 1275 0036 CB18     		adds	r3, r1, r3
 1276 0038 1B18     		adds	r3, r3, r0
 1277 003a 1B78     		ldrb	r3, [r3]
 1278 003c 0DE0     		b	.L56
 1279              	.L55:
 413:Src/usbd_conf.c ****   }
 414:Src/usbd_conf.c ****   else
 415:Src/usbd_conf.c ****   {
 416:Src/usbd_conf.c ****     return hpcd->OUT_ep[ep_addr & 0x7F].is_stall; 
 1280              		.loc 1 416 0
 1281 003e FB1C     		adds	r3, r7, #3
 1282 0040 1B78     		ldrb	r3, [r3]
ARM GAS  /tmp/ccTNQqxW.s 			page 30


 1283 0042 7F22     		movs	r2, #127
 1284 0044 1A40     		ands	r2, r3
 1285 0046 F868     		ldr	r0, [r7, #12]
 1286 0048 8523     		movs	r3, #133
 1287 004a 5900     		lsls	r1, r3, #1
 1288 004c 1300     		movs	r3, r2
 1289 004e DB00     		lsls	r3, r3, #3
 1290 0050 9B1A     		subs	r3, r3, r2
 1291 0052 9B00     		lsls	r3, r3, #2
 1292 0054 C318     		adds	r3, r0, r3
 1293 0056 5B18     		adds	r3, r3, r1
 1294 0058 1B78     		ldrb	r3, [r3]
 1295              	.L56:
 417:Src/usbd_conf.c ****   }
 418:Src/usbd_conf.c **** }
 1296              		.loc 1 418 0
 1297 005a 1800     		movs	r0, r3
 1298 005c BD46     		mov	sp, r7
 1299 005e 04B0     		add	sp, sp, #16
 1300              		@ sp needed
 1301 0060 80BD     		pop	{r7, pc}
 1302              		.cfi_endproc
 1303              	.LFE57:
 1305              		.section	.text.USBD_LL_SetUSBAddress,"ax",%progbits
 1306              		.align	1
 1307              		.global	USBD_LL_SetUSBAddress
 1308              		.syntax unified
 1309              		.code	16
 1310              		.thumb_func
 1311              		.fpu softvfp
 1313              	USBD_LL_SetUSBAddress:
 1314              	.LFB58:
 419:Src/usbd_conf.c **** /**
 420:Src/usbd_conf.c ****   * @brief  Assigns a USB address to the device.
 421:Src/usbd_conf.c ****   * @param  pdev: Device handle
 422:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 423:Src/usbd_conf.c ****   * @retval USBD Status
 424:Src/usbd_conf.c ****   */
 425:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_SetUSBAddress (USBD_HandleTypeDef *pdev, uint8_t dev_addr)   
 426:Src/usbd_conf.c **** {
 1315              		.loc 1 426 0
 1316              		.cfi_startproc
 1317 0000 80B5     		push	{r7, lr}
 1318              	.LCFI69:
 1319              		.cfi_def_cfa_offset 8
 1320              		.cfi_offset 7, -8
 1321              		.cfi_offset 14, -4
 1322 0002 82B0     		sub	sp, sp, #8
 1323              	.LCFI70:
 1324              		.cfi_def_cfa_offset 16
 1325 0004 00AF     		add	r7, sp, #0
 1326              	.LCFI71:
 1327              		.cfi_def_cfa_register 7
 1328 0006 7860     		str	r0, [r7, #4]
 1329 0008 0A00     		movs	r2, r1
 1330 000a FB1C     		adds	r3, r7, #3
 1331 000c 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccTNQqxW.s 			page 31


 427:Src/usbd_conf.c ****   HAL_PCD_SetAddress((PCD_HandleTypeDef*) pdev->pData, dev_addr);
 1332              		.loc 1 427 0
 1333 000e 7A68     		ldr	r2, [r7, #4]
 1334 0010 8823     		movs	r3, #136
 1335 0012 9B00     		lsls	r3, r3, #2
 1336 0014 D258     		ldr	r2, [r2, r3]
 1337 0016 FB1C     		adds	r3, r7, #3
 1338 0018 1B78     		ldrb	r3, [r3]
 1339 001a 1900     		movs	r1, r3
 1340 001c 1000     		movs	r0, r2
 1341 001e FFF7FEFF 		bl	HAL_PCD_SetAddress
 428:Src/usbd_conf.c ****   return USBD_OK; 
 1342              		.loc 1 428 0
 1343 0022 0023     		movs	r3, #0
 429:Src/usbd_conf.c **** }
 1344              		.loc 1 429 0
 1345 0024 1800     		movs	r0, r3
 1346 0026 BD46     		mov	sp, r7
 1347 0028 02B0     		add	sp, sp, #8
 1348              		@ sp needed
 1349 002a 80BD     		pop	{r7, pc}
 1350              		.cfi_endproc
 1351              	.LFE58:
 1353              		.section	.text.USBD_LL_Transmit,"ax",%progbits
 1354              		.align	1
 1355              		.global	USBD_LL_Transmit
 1356              		.syntax unified
 1357              		.code	16
 1358              		.thumb_func
 1359              		.fpu softvfp
 1361              	USBD_LL_Transmit:
 1362              	.LFB59:
 430:Src/usbd_conf.c **** 
 431:Src/usbd_conf.c **** /**
 432:Src/usbd_conf.c ****   * @brief  Transmits data over an endpoint.
 433:Src/usbd_conf.c ****   * @param  pdev: Device handle
 434:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 435:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be sent
 436:Src/usbd_conf.c ****   * @param  size: Data size    
 437:Src/usbd_conf.c ****   * @retval USBD Status
 438:Src/usbd_conf.c ****   */
 439:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Transmit (USBD_HandleTypeDef *pdev, 
 440:Src/usbd_conf.c ****                                       uint8_t  ep_addr,                                      
 441:Src/usbd_conf.c ****                                       uint8_t  *pbuf,
 442:Src/usbd_conf.c ****                                       uint16_t  size)
 443:Src/usbd_conf.c **** {
 1363              		.loc 1 443 0
 1364              		.cfi_startproc
 1365 0000 90B5     		push	{r4, r7, lr}
 1366              	.LCFI72:
 1367              		.cfi_def_cfa_offset 12
 1368              		.cfi_offset 4, -12
 1369              		.cfi_offset 7, -8
 1370              		.cfi_offset 14, -4
 1371 0002 85B0     		sub	sp, sp, #20
 1372              	.LCFI73:
 1373              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccTNQqxW.s 			page 32


 1374 0004 00AF     		add	r7, sp, #0
 1375              	.LCFI74:
 1376              		.cfi_def_cfa_register 7
 1377 0006 F860     		str	r0, [r7, #12]
 1378 0008 0800     		movs	r0, r1
 1379 000a 7A60     		str	r2, [r7, #4]
 1380 000c 1900     		movs	r1, r3
 1381 000e 0B23     		movs	r3, #11
 1382 0010 FB18     		adds	r3, r7, r3
 1383 0012 021C     		adds	r2, r0, #0
 1384 0014 1A70     		strb	r2, [r3]
 1385 0016 0823     		movs	r3, #8
 1386 0018 FB18     		adds	r3, r7, r3
 1387 001a 0A1C     		adds	r2, r1, #0
 1388 001c 1A80     		strh	r2, [r3]
 444:Src/usbd_conf.c ****   HAL_PCD_EP_Transmit((PCD_HandleTypeDef*) pdev->pData, ep_addr, pbuf, size);
 1389              		.loc 1 444 0
 1390 001e FA68     		ldr	r2, [r7, #12]
 1391 0020 8823     		movs	r3, #136
 1392 0022 9B00     		lsls	r3, r3, #2
 1393 0024 D058     		ldr	r0, [r2, r3]
 1394 0026 0823     		movs	r3, #8
 1395 0028 FB18     		adds	r3, r7, r3
 1396 002a 1C88     		ldrh	r4, [r3]
 1397 002c 7A68     		ldr	r2, [r7, #4]
 1398 002e 0B23     		movs	r3, #11
 1399 0030 FB18     		adds	r3, r7, r3
 1400 0032 1978     		ldrb	r1, [r3]
 1401 0034 2300     		movs	r3, r4
 1402 0036 FFF7FEFF 		bl	HAL_PCD_EP_Transmit
 445:Src/usbd_conf.c ****   return USBD_OK;
 1403              		.loc 1 445 0
 1404 003a 0023     		movs	r3, #0
 446:Src/usbd_conf.c **** }
 1405              		.loc 1 446 0
 1406 003c 1800     		movs	r0, r3
 1407 003e BD46     		mov	sp, r7
 1408 0040 05B0     		add	sp, sp, #20
 1409              		@ sp needed
 1410 0042 90BD     		pop	{r4, r7, pc}
 1411              		.cfi_endproc
 1412              	.LFE59:
 1414              		.section	.text.USBD_LL_PrepareReceive,"ax",%progbits
 1415              		.align	1
 1416              		.global	USBD_LL_PrepareReceive
 1417              		.syntax unified
 1418              		.code	16
 1419              		.thumb_func
 1420              		.fpu softvfp
 1422              	USBD_LL_PrepareReceive:
 1423              	.LFB60:
 447:Src/usbd_conf.c **** 
 448:Src/usbd_conf.c **** /**
 449:Src/usbd_conf.c ****   * @brief  Prepares an endpoint for reception.
 450:Src/usbd_conf.c ****   * @param  pdev: Device handle
 451:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 452:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be received
ARM GAS  /tmp/ccTNQqxW.s 			page 33


 453:Src/usbd_conf.c ****   * @param  size: Data size
 454:Src/usbd_conf.c ****   * @retval USBD Status
 455:Src/usbd_conf.c ****   */
 456:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, 
 457:Src/usbd_conf.c ****                                            uint8_t  ep_addr,                                      
 458:Src/usbd_conf.c ****                                            uint8_t  *pbuf,
 459:Src/usbd_conf.c ****                                            uint16_t  size)
 460:Src/usbd_conf.c **** {
 1424              		.loc 1 460 0
 1425              		.cfi_startproc
 1426 0000 90B5     		push	{r4, r7, lr}
 1427              	.LCFI75:
 1428              		.cfi_def_cfa_offset 12
 1429              		.cfi_offset 4, -12
 1430              		.cfi_offset 7, -8
 1431              		.cfi_offset 14, -4
 1432 0002 85B0     		sub	sp, sp, #20
 1433              	.LCFI76:
 1434              		.cfi_def_cfa_offset 32
 1435 0004 00AF     		add	r7, sp, #0
 1436              	.LCFI77:
 1437              		.cfi_def_cfa_register 7
 1438 0006 F860     		str	r0, [r7, #12]
 1439 0008 0800     		movs	r0, r1
 1440 000a 7A60     		str	r2, [r7, #4]
 1441 000c 1900     		movs	r1, r3
 1442 000e 0B23     		movs	r3, #11
 1443 0010 FB18     		adds	r3, r7, r3
 1444 0012 021C     		adds	r2, r0, #0
 1445 0014 1A70     		strb	r2, [r3]
 1446 0016 0823     		movs	r3, #8
 1447 0018 FB18     		adds	r3, r7, r3
 1448 001a 0A1C     		adds	r2, r1, #0
 1449 001c 1A80     		strh	r2, [r3]
 461:Src/usbd_conf.c ****   HAL_PCD_EP_Receive((PCD_HandleTypeDef*) pdev->pData, ep_addr, pbuf, size);
 1450              		.loc 1 461 0
 1451 001e FA68     		ldr	r2, [r7, #12]
 1452 0020 8823     		movs	r3, #136
 1453 0022 9B00     		lsls	r3, r3, #2
 1454 0024 D058     		ldr	r0, [r2, r3]
 1455 0026 0823     		movs	r3, #8
 1456 0028 FB18     		adds	r3, r7, r3
 1457 002a 1C88     		ldrh	r4, [r3]
 1458 002c 7A68     		ldr	r2, [r7, #4]
 1459 002e 0B23     		movs	r3, #11
 1460 0030 FB18     		adds	r3, r7, r3
 1461 0032 1978     		ldrb	r1, [r3]
 1462 0034 2300     		movs	r3, r4
 1463 0036 FFF7FEFF 		bl	HAL_PCD_EP_Receive
 462:Src/usbd_conf.c ****   return USBD_OK;
 1464              		.loc 1 462 0
 1465 003a 0023     		movs	r3, #0
 463:Src/usbd_conf.c **** }
 1466              		.loc 1 463 0
 1467 003c 1800     		movs	r0, r3
 1468 003e BD46     		mov	sp, r7
 1469 0040 05B0     		add	sp, sp, #20
ARM GAS  /tmp/ccTNQqxW.s 			page 34


 1470              		@ sp needed
 1471 0042 90BD     		pop	{r4, r7, pc}
 1472              		.cfi_endproc
 1473              	.LFE60:
 1475              		.section	.text.USBD_LL_GetRxDataSize,"ax",%progbits
 1476              		.align	1
 1477              		.global	USBD_LL_GetRxDataSize
 1478              		.syntax unified
 1479              		.code	16
 1480              		.thumb_func
 1481              		.fpu softvfp
 1483              	USBD_LL_GetRxDataSize:
 1484              	.LFB61:
 464:Src/usbd_conf.c **** 
 465:Src/usbd_conf.c **** /**
 466:Src/usbd_conf.c ****   * @brief  Returns the last transfered packet size.
 467:Src/usbd_conf.c ****   * @param  pdev: Device handle
 468:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 469:Src/usbd_conf.c ****   * @retval Recived Data Size
 470:Src/usbd_conf.c ****   */
 471:Src/usbd_conf.c **** uint32_t USBD_LL_GetRxDataSize  (USBD_HandleTypeDef *pdev, uint8_t  ep_addr)  
 472:Src/usbd_conf.c **** {
 1485              		.loc 1 472 0
 1486              		.cfi_startproc
 1487 0000 80B5     		push	{r7, lr}
 1488              	.LCFI78:
 1489              		.cfi_def_cfa_offset 8
 1490              		.cfi_offset 7, -8
 1491              		.cfi_offset 14, -4
 1492 0002 82B0     		sub	sp, sp, #8
 1493              	.LCFI79:
 1494              		.cfi_def_cfa_offset 16
 1495 0004 00AF     		add	r7, sp, #0
 1496              	.LCFI80:
 1497              		.cfi_def_cfa_register 7
 1498 0006 7860     		str	r0, [r7, #4]
 1499 0008 0A00     		movs	r2, r1
 1500 000a FB1C     		adds	r3, r7, #3
 1501 000c 1A70     		strb	r2, [r3]
 473:Src/usbd_conf.c ****   return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 1502              		.loc 1 473 0
 1503 000e 7A68     		ldr	r2, [r7, #4]
 1504 0010 8823     		movs	r3, #136
 1505 0012 9B00     		lsls	r3, r3, #2
 1506 0014 D258     		ldr	r2, [r2, r3]
 1507 0016 FB1C     		adds	r3, r7, #3
 1508 0018 1B78     		ldrb	r3, [r3]
 1509 001a 1900     		movs	r1, r3
 1510 001c 1000     		movs	r0, r2
 1511 001e FFF7FEFF 		bl	HAL_PCD_EP_GetRxCount
 1512 0022 0300     		movs	r3, r0
 474:Src/usbd_conf.c **** }
 1513              		.loc 1 474 0
 1514 0024 1800     		movs	r0, r3
 1515 0026 BD46     		mov	sp, r7
 1516 0028 02B0     		add	sp, sp, #8
 1517              		@ sp needed
ARM GAS  /tmp/ccTNQqxW.s 			page 35


 1518 002a 80BD     		pop	{r7, pc}
 1519              		.cfi_endproc
 1520              	.LFE61:
 1522              		.section	.text.USBD_LL_Delay,"ax",%progbits
 1523              		.align	1
 1524              		.global	USBD_LL_Delay
 1525              		.syntax unified
 1526              		.code	16
 1527              		.thumb_func
 1528              		.fpu softvfp
 1530              	USBD_LL_Delay:
 1531              	.LFB62:
 475:Src/usbd_conf.c **** 
 476:Src/usbd_conf.c **** /**
 477:Src/usbd_conf.c ****   * @brief  Delays routine for the USB Device Library.
 478:Src/usbd_conf.c ****   * @param  Delay: Delay in ms
 479:Src/usbd_conf.c ****   * @retval None
 480:Src/usbd_conf.c ****   */
 481:Src/usbd_conf.c **** void  USBD_LL_Delay (uint32_t Delay)
 482:Src/usbd_conf.c **** {
 1532              		.loc 1 482 0
 1533              		.cfi_startproc
 1534 0000 80B5     		push	{r7, lr}
 1535              	.LCFI81:
 1536              		.cfi_def_cfa_offset 8
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
 1539 0002 82B0     		sub	sp, sp, #8
 1540              	.LCFI82:
 1541              		.cfi_def_cfa_offset 16
 1542 0004 00AF     		add	r7, sp, #0
 1543              	.LCFI83:
 1544              		.cfi_def_cfa_register 7
 1545 0006 7860     		str	r0, [r7, #4]
 483:Src/usbd_conf.c ****   HAL_Delay(Delay);  
 1546              		.loc 1 483 0
 1547 0008 7B68     		ldr	r3, [r7, #4]
 1548 000a 1800     		movs	r0, r3
 1549 000c FFF7FEFF 		bl	HAL_Delay
 484:Src/usbd_conf.c **** }
 1550              		.loc 1 484 0
 1551 0010 C046     		nop
 1552 0012 BD46     		mov	sp, r7
 1553 0014 02B0     		add	sp, sp, #8
 1554              		@ sp needed
 1555 0016 80BD     		pop	{r7, pc}
 1556              		.cfi_endproc
 1557              	.LFE62:
 1559              		.section	.text.USBD_static_malloc,"ax",%progbits
 1560              		.align	1
 1561              		.global	USBD_static_malloc
 1562              		.syntax unified
 1563              		.code	16
 1564              		.thumb_func
 1565              		.fpu softvfp
 1567              	USBD_static_malloc:
 1568              	.LFB63:
ARM GAS  /tmp/ccTNQqxW.s 			page 36


 485:Src/usbd_conf.c **** 
 486:Src/usbd_conf.c **** /**
 487:Src/usbd_conf.c ****   * @brief  static single allocation.
 488:Src/usbd_conf.c ****   * @param  size: size of allocated memory
 489:Src/usbd_conf.c ****   * @retval None
 490:Src/usbd_conf.c ****   */
 491:Src/usbd_conf.c **** void *USBD_static_malloc(uint32_t size)
 492:Src/usbd_conf.c **** {
 1569              		.loc 1 492 0
 1570              		.cfi_startproc
 1571 0000 80B5     		push	{r7, lr}
 1572              	.LCFI84:
 1573              		.cfi_def_cfa_offset 8
 1574              		.cfi_offset 7, -8
 1575              		.cfi_offset 14, -4
 1576 0002 82B0     		sub	sp, sp, #8
 1577              	.LCFI85:
 1578              		.cfi_def_cfa_offset 16
 1579 0004 00AF     		add	r7, sp, #0
 1580              	.LCFI86:
 1581              		.cfi_def_cfa_register 7
 1582 0006 7860     		str	r0, [r7, #4]
 493:Src/usbd_conf.c ****   static uint32_t mem[(sizeof(USBD_CDC_HandleTypeDef)/4)+1];/* On 32-bit boundary */
 494:Src/usbd_conf.c ****   return mem;
 1583              		.loc 1 494 0
 1584 0008 024B     		ldr	r3, .L68
 495:Src/usbd_conf.c **** }
 1585              		.loc 1 495 0
 1586 000a 1800     		movs	r0, r3
 1587 000c BD46     		mov	sp, r7
 1588 000e 02B0     		add	sp, sp, #8
 1589              		@ sp needed
 1590 0010 80BD     		pop	{r7, pc}
 1591              	.L69:
 1592 0012 C046     		.align	2
 1593              	.L68:
 1594 0014 00000000 		.word	mem.7069
 1595              		.cfi_endproc
 1596              	.LFE63:
 1598              		.section	.text.USBD_static_free,"ax",%progbits
 1599              		.align	1
 1600              		.global	USBD_static_free
 1601              		.syntax unified
 1602              		.code	16
 1603              		.thumb_func
 1604              		.fpu softvfp
 1606              	USBD_static_free:
 1607              	.LFB64:
 496:Src/usbd_conf.c **** 
 497:Src/usbd_conf.c **** /**
 498:Src/usbd_conf.c ****   * @brief  Dummy memory free
 499:Src/usbd_conf.c ****   * @param  *p pointer to allocated  memory address
 500:Src/usbd_conf.c ****   * @retval None
 501:Src/usbd_conf.c ****   */
 502:Src/usbd_conf.c **** void USBD_static_free(void *p)
 503:Src/usbd_conf.c **** {
 1608              		.loc 1 503 0
ARM GAS  /tmp/ccTNQqxW.s 			page 37


 1609              		.cfi_startproc
 1610 0000 80B5     		push	{r7, lr}
 1611              	.LCFI87:
 1612              		.cfi_def_cfa_offset 8
 1613              		.cfi_offset 7, -8
 1614              		.cfi_offset 14, -4
 1615 0002 82B0     		sub	sp, sp, #8
 1616              	.LCFI88:
 1617              		.cfi_def_cfa_offset 16
 1618 0004 00AF     		add	r7, sp, #0
 1619              	.LCFI89:
 1620              		.cfi_def_cfa_register 7
 1621 0006 7860     		str	r0, [r7, #4]
 504:Src/usbd_conf.c **** 
 505:Src/usbd_conf.c **** }
 1622              		.loc 1 505 0
 1623 0008 C046     		nop
 1624 000a BD46     		mov	sp, r7
 1625 000c 02B0     		add	sp, sp, #8
 1626              		@ sp needed
 1627 000e 80BD     		pop	{r7, pc}
 1628              		.cfi_endproc
 1629              	.LFE64:
 1631              		.section	.text.SystemClockConfig_Resume,"ax",%progbits
 1632              		.align	1
 1633              		.syntax unified
 1634              		.code	16
 1635              		.thumb_func
 1636              		.fpu softvfp
 1638              	SystemClockConfig_Resume:
 1639              	.LFB65:
 506:Src/usbd_conf.c **** 
 507:Src/usbd_conf.c **** /* USER CODE BEGIN 5 */
 508:Src/usbd_conf.c **** /**
 509:Src/usbd_conf.c ****   * @brief  Configures system clock after wake-up from USB Resume CallBack: 
 510:Src/usbd_conf.c ****   *         enable HSI, PLL and select PLL as system clock source.
 511:Src/usbd_conf.c ****   * @param  None
 512:Src/usbd_conf.c ****   * @retval None
 513:Src/usbd_conf.c ****   */
 514:Src/usbd_conf.c **** static void SystemClockConfig_Resume(void)
 515:Src/usbd_conf.c **** {
 1640              		.loc 1 515 0
 1641              		.cfi_startproc
 1642 0000 80B5     		push	{r7, lr}
 1643              	.LCFI90:
 1644              		.cfi_def_cfa_offset 8
 1645              		.cfi_offset 7, -8
 1646              		.cfi_offset 14, -4
 1647 0002 00AF     		add	r7, sp, #0
 1648              	.LCFI91:
 1649              		.cfi_def_cfa_register 7
 516:Src/usbd_conf.c ****   SystemClock_Config();
 1650              		.loc 1 516 0
 1651 0004 FFF7FEFF 		bl	SystemClock_Config
 517:Src/usbd_conf.c **** }
 1652              		.loc 1 517 0
 1653 0008 C046     		nop
ARM GAS  /tmp/ccTNQqxW.s 			page 38


 1654 000a BD46     		mov	sp, r7
 1655              		@ sp needed
 1656 000c 80BD     		pop	{r7, pc}
 1657              		.cfi_endproc
 1658              	.LFE65:
 1660              		.section	.text.HAL_PCDEx_SetConnectionState,"ax",%progbits
 1661              		.align	1
 1662              		.global	HAL_PCDEx_SetConnectionState
 1663              		.syntax unified
 1664              		.code	16
 1665              		.thumb_func
 1666              		.fpu softvfp
 1668              	HAL_PCDEx_SetConnectionState:
 1669              	.LFB66:
 518:Src/usbd_conf.c **** /* USER CODE END 5 */
 519:Src/usbd_conf.c **** 
 520:Src/usbd_conf.c **** /**
 521:Src/usbd_conf.c **** * @brief Software Device Connection
 522:Src/usbd_conf.c **** * @param hpcd: PCD handle
 523:Src/usbd_conf.c **** * @param state: connection state (0 : disconnected / 1: connected) 
 524:Src/usbd_conf.c **** * @retval None
 525:Src/usbd_conf.c **** */
 526:Src/usbd_conf.c **** void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state)
 527:Src/usbd_conf.c **** {
 1670              		.loc 1 527 0
 1671              		.cfi_startproc
 1672 0000 80B5     		push	{r7, lr}
 1673              	.LCFI92:
 1674              		.cfi_def_cfa_offset 8
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 82B0     		sub	sp, sp, #8
 1678              	.LCFI93:
 1679              		.cfi_def_cfa_offset 16
 1680 0004 00AF     		add	r7, sp, #0
 1681              	.LCFI94:
 1682              		.cfi_def_cfa_register 7
 1683 0006 7860     		str	r0, [r7, #4]
 1684 0008 0A00     		movs	r2, r1
 1685 000a FB1C     		adds	r3, r7, #3
 1686 000c 1A70     		strb	r2, [r3]
 528:Src/usbd_conf.c **** /* USER CODE BEGIN 6 */
 529:Src/usbd_conf.c ****   if (state == 1)
 530:Src/usbd_conf.c ****   {
 531:Src/usbd_conf.c ****     /* Configure Low Connection State */
 532:Src/usbd_conf.c **** 	
 533:Src/usbd_conf.c ****   }
 534:Src/usbd_conf.c ****   else
 535:Src/usbd_conf.c ****   {
 536:Src/usbd_conf.c ****     /* Configure High Connection State */
 537:Src/usbd_conf.c ****    
 538:Src/usbd_conf.c ****   } 
 539:Src/usbd_conf.c **** /* USER CODE END 6 */
 540:Src/usbd_conf.c **** }
 1687              		.loc 1 540 0
 1688 000e C046     		nop
 1689 0010 BD46     		mov	sp, r7
ARM GAS  /tmp/ccTNQqxW.s 			page 39


 1690 0012 02B0     		add	sp, sp, #8
 1691              		@ sp needed
 1692 0014 80BD     		pop	{r7, pc}
 1693              		.cfi_endproc
 1694              	.LFE66:
 1696              		.section	.bss.mem.7069,"aw",%nobits
 1697              		.align	2
 1700              	mem.7069:
 1701 0000 00000000 		.space	544
 1701      00000000 
 1701      00000000 
 1701      00000000 
 1701      00000000 
 1702              		.text
 1703              	.Letext0:
 1704              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1705              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1706              		.file 4 "Drivers/CMSIS/Include/core_cm0.h"
 1707              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1708              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1709              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1710              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 1711              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 1712              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 1713              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 1714              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1715              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd.h"
 1716              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1717              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
ARM GAS  /tmp/ccTNQqxW.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_conf.c
                            *COM*:0000000000000220 hpcd_USB_FS
     /tmp/ccTNQqxW.s:17     .text.HAL_PCD_MspInit:0000000000000000 $t
     /tmp/ccTNQqxW.s:24     .text.HAL_PCD_MspInit:0000000000000000 HAL_PCD_MspInit
     /tmp/ccTNQqxW.s:82     .text.HAL_PCD_MspInit:0000000000000048 $d
     /tmp/ccTNQqxW.s:88     .text.HAL_PCD_MspDeInit:0000000000000000 $t
     /tmp/ccTNQqxW.s:95     .text.HAL_PCD_MspDeInit:0000000000000000 HAL_PCD_MspDeInit
     /tmp/ccTNQqxW.s:137    .text.HAL_PCD_MspDeInit:000000000000002c $d
     /tmp/ccTNQqxW.s:144    .text.HAL_PCD_SetupStageCallback:0000000000000000 $t
     /tmp/ccTNQqxW.s:151    .text.HAL_PCD_SetupStageCallback:0000000000000000 HAL_PCD_SetupStageCallback
     /tmp/ccTNQqxW.s:188    .text.HAL_PCD_DataOutStageCallback:0000000000000000 $t
     /tmp/ccTNQqxW.s:195    .text.HAL_PCD_DataOutStageCallback:0000000000000000 HAL_PCD_DataOutStageCallback
     /tmp/ccTNQqxW.s:247    .text.HAL_PCD_DataInStageCallback:0000000000000000 $t
     /tmp/ccTNQqxW.s:254    .text.HAL_PCD_DataInStageCallback:0000000000000000 HAL_PCD_DataInStageCallback
     /tmp/ccTNQqxW.s:302    .text.HAL_PCD_SOFCallback:0000000000000000 $t
     /tmp/ccTNQqxW.s:309    .text.HAL_PCD_SOFCallback:0000000000000000 HAL_PCD_SOFCallback
     /tmp/ccTNQqxW.s:342    .text.HAL_PCD_ResetCallback:0000000000000000 $t
     /tmp/ccTNQqxW.s:349    .text.HAL_PCD_ResetCallback:0000000000000000 HAL_PCD_ResetCallback
     /tmp/ccTNQqxW.s:419    .text.HAL_PCD_SuspendCallback:0000000000000000 $t
     /tmp/ccTNQqxW.s:426    .text.HAL_PCD_SuspendCallback:0000000000000000 HAL_PCD_SuspendCallback
     /tmp/ccTNQqxW.s:471    .text.HAL_PCD_SuspendCallback:0000000000000034 $d
     /tmp/ccTNQqxW.s:476    .text.HAL_PCD_ResumeCallback:0000000000000000 $t
     /tmp/ccTNQqxW.s:483    .text.HAL_PCD_ResumeCallback:0000000000000000 HAL_PCD_ResumeCallback
     /tmp/ccTNQqxW.s:1638   .text.SystemClockConfig_Resume:0000000000000000 SystemClockConfig_Resume
     /tmp/ccTNQqxW.s:530    .text.HAL_PCD_ResumeCallback:0000000000000038 $d
     /tmp/ccTNQqxW.s:535    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 $t
     /tmp/ccTNQqxW.s:542    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 HAL_PCD_ISOOUTIncompleteCallback
     /tmp/ccTNQqxW.s:581    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 $t
     /tmp/ccTNQqxW.s:588    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 HAL_PCD_ISOINIncompleteCallback
     /tmp/ccTNQqxW.s:627    .text.HAL_PCD_ConnectCallback:0000000000000000 $t
     /tmp/ccTNQqxW.s:634    .text.HAL_PCD_ConnectCallback:0000000000000000 HAL_PCD_ConnectCallback
     /tmp/ccTNQqxW.s:667    .text.HAL_PCD_DisconnectCallback:0000000000000000 $t
     /tmp/ccTNQqxW.s:674    .text.HAL_PCD_DisconnectCallback:0000000000000000 HAL_PCD_DisconnectCallback
     /tmp/ccTNQqxW.s:707    .text.USBD_LL_Init:0000000000000000 $t
     /tmp/ccTNQqxW.s:714    .text.USBD_LL_Init:0000000000000000 USBD_LL_Init
     /tmp/ccTNQqxW.s:841    .text.USBD_LL_Init:00000000000000c4 $d
     /tmp/ccTNQqxW.s:847    .text.USBD_LL_DeInit:0000000000000000 $t
     /tmp/ccTNQqxW.s:854    .text.USBD_LL_DeInit:0000000000000000 USBD_LL_DeInit
     /tmp/ccTNQqxW.s:889    .text.USBD_LL_Start:0000000000000000 $t
     /tmp/ccTNQqxW.s:896    .text.USBD_LL_Start:0000000000000000 USBD_LL_Start
     /tmp/ccTNQqxW.s:931    .text.USBD_LL_Stop:0000000000000000 $t
     /tmp/ccTNQqxW.s:938    .text.USBD_LL_Stop:0000000000000000 USBD_LL_Stop
     /tmp/ccTNQqxW.s:973    .text.USBD_LL_OpenEP:0000000000000000 $t
     /tmp/ccTNQqxW.s:980    .text.USBD_LL_OpenEP:0000000000000000 USBD_LL_OpenEP
     /tmp/ccTNQqxW.s:1034   .text.USBD_LL_CloseEP:0000000000000000 $t
     /tmp/ccTNQqxW.s:1041   .text.USBD_LL_CloseEP:0000000000000000 USBD_LL_CloseEP
     /tmp/ccTNQqxW.s:1082   .text.USBD_LL_FlushEP:0000000000000000 $t
     /tmp/ccTNQqxW.s:1089   .text.USBD_LL_FlushEP:0000000000000000 USBD_LL_FlushEP
     /tmp/ccTNQqxW.s:1130   .text.USBD_LL_StallEP:0000000000000000 $t
     /tmp/ccTNQqxW.s:1137   .text.USBD_LL_StallEP:0000000000000000 USBD_LL_StallEP
     /tmp/ccTNQqxW.s:1178   .text.USBD_LL_ClearStallEP:0000000000000000 $t
     /tmp/ccTNQqxW.s:1185   .text.USBD_LL_ClearStallEP:0000000000000000 USBD_LL_ClearStallEP
     /tmp/ccTNQqxW.s:1226   .text.USBD_LL_IsStallEP:0000000000000000 $t
     /tmp/ccTNQqxW.s:1233   .text.USBD_LL_IsStallEP:0000000000000000 USBD_LL_IsStallEP
     /tmp/ccTNQqxW.s:1306   .text.USBD_LL_SetUSBAddress:0000000000000000 $t
     /tmp/ccTNQqxW.s:1313   .text.USBD_LL_SetUSBAddress:0000000000000000 USBD_LL_SetUSBAddress
ARM GAS  /tmp/ccTNQqxW.s 			page 41


     /tmp/ccTNQqxW.s:1354   .text.USBD_LL_Transmit:0000000000000000 $t
     /tmp/ccTNQqxW.s:1361   .text.USBD_LL_Transmit:0000000000000000 USBD_LL_Transmit
     /tmp/ccTNQqxW.s:1415   .text.USBD_LL_PrepareReceive:0000000000000000 $t
     /tmp/ccTNQqxW.s:1422   .text.USBD_LL_PrepareReceive:0000000000000000 USBD_LL_PrepareReceive
     /tmp/ccTNQqxW.s:1476   .text.USBD_LL_GetRxDataSize:0000000000000000 $t
     /tmp/ccTNQqxW.s:1483   .text.USBD_LL_GetRxDataSize:0000000000000000 USBD_LL_GetRxDataSize
     /tmp/ccTNQqxW.s:1523   .text.USBD_LL_Delay:0000000000000000 $t
     /tmp/ccTNQqxW.s:1530   .text.USBD_LL_Delay:0000000000000000 USBD_LL_Delay
     /tmp/ccTNQqxW.s:1560   .text.USBD_static_malloc:0000000000000000 $t
     /tmp/ccTNQqxW.s:1567   .text.USBD_static_malloc:0000000000000000 USBD_static_malloc
     /tmp/ccTNQqxW.s:1594   .text.USBD_static_malloc:0000000000000014 $d
     /tmp/ccTNQqxW.s:1700   .bss.mem.7069:0000000000000000 mem.7069
     /tmp/ccTNQqxW.s:1599   .text.USBD_static_free:0000000000000000 $t
     /tmp/ccTNQqxW.s:1606   .text.USBD_static_free:0000000000000000 USBD_static_free
     /tmp/ccTNQqxW.s:1632   .text.SystemClockConfig_Resume:0000000000000000 $t
     /tmp/ccTNQqxW.s:1661   .text.HAL_PCDEx_SetConnectionState:0000000000000000 $t
     /tmp/ccTNQqxW.s:1668   .text.HAL_PCDEx_SetConnectionState:0000000000000000 HAL_PCDEx_SetConnectionState
     /tmp/ccTNQqxW.s:1697   .bss.mem.7069:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
USBD_LL_SetupStage
USBD_LL_DataOutStage
USBD_LL_DataInStage
USBD_LL_SOF
USBD_LL_SetSpeed
USBD_LL_Reset
USBD_LL_Suspend
USBD_LL_Resume
USBD_LL_IsoOUTIncomplete
USBD_LL_IsoINIncomplete
USBD_LL_DevConnected
USBD_LL_DevDisconnected
HAL_PCD_Init
Error_Handler
HAL_PCDEx_PMAConfig
HAL_PCD_DeInit
HAL_PCD_Start
HAL_PCD_Stop
HAL_PCD_EP_Open
HAL_PCD_EP_Close
HAL_PCD_EP_Flush
HAL_PCD_EP_SetStall
HAL_PCD_EP_ClrStall
HAL_PCD_SetAddress
HAL_PCD_EP_Transmit
HAL_PCD_EP_Receive
HAL_PCD_EP_GetRxCount
HAL_Delay
SystemClock_Config

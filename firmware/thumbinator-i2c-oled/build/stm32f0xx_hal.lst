ARM GAS  /tmp/ccvHCEJn.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.comm	uwTick,4,4
  16              		.section	.text.HAL_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_Init
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_Init:
  25              	.LFB35:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @version V1.4.0
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @date    27-May-2016
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * are permitted provided that the following conditions are met:
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer.
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/ccvHCEJn.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      and/or other materials provided with the distribution.
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      without specific prior written permission.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number V1.4.0
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x04) /*!< [23:16] sub1 version */
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x00) /*!< [15:8]  sub2 version */
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24)\
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16)\
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8 )\
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/ccvHCEJn.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           is needed and the backup domain when enabled.
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority. 
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
ARM GAS  /tmp/ccvHCEJn.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  27              		.loc 1 158 0
  28              		.cfi_startproc
  29 0000 80B5     		push	{r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 00AF     		add	r7, sp, #0
  35              	.LCFI1:
  36              		.cfi_def_cfa_register 7
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  37              		.loc 1 161 0
  38 0004 074B     		ldr	r3, .L3
  39 0006 074A     		ldr	r2, .L3
  40 0008 1268     		ldr	r2, [r2]
  41 000a 1021     		movs	r1, #16
  42 000c 0A43     		orrs	r2, r1
  43 000e 1A60     		str	r2, [r3]
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
  44              		.loc 1 166 0
  45 0010 0020     		movs	r0, #0
  46 0012 FFF7FEFF 		bl	HAL_InitTick
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
  47              		.loc 1 169 0
  48 0016 FFF7FEFF 		bl	HAL_MspInit
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
  49              		.loc 1 172 0
  50 001a 0023     		movs	r3, #0
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  51              		.loc 1 173 0
  52 001c 1800     		movs	r0, r3
  53 001e BD46     		mov	sp, r7
  54              		@ sp needed
  55 0020 80BD     		pop	{r7, pc}
  56              	.L4:
ARM GAS  /tmp/ccvHCEJn.s 			page 5


  57 0022 C046     		.align	2
  58              	.L3:
  59 0024 00200240 		.word	1073881088
  60              		.cfi_endproc
  61              	.LFE35:
  63              		.section	.text.HAL_DeInit,"ax",%progbits
  64              		.align	1
  65              		.global	HAL_DeInit
  66              		.syntax unified
  67              		.code	16
  68              		.thumb_func
  69              		.fpu softvfp
  71              	HAL_DeInit:
  72              	.LFB36:
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  73              		.loc 1 182 0
  74              		.cfi_startproc
  75 0000 80B5     		push	{r7, lr}
  76              	.LCFI2:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 00AF     		add	r7, sp, #0
  81              	.LCFI3:
  82              		.cfi_def_cfa_register 7
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
  83              		.loc 1 184 0
  84 0004 0D4B     		ldr	r3, .L7
  85 0006 0122     		movs	r2, #1
  86 0008 5242     		rsbs	r2, r2, #0
  87 000a 1A61     		str	r2, [r3, #16]
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  88              		.loc 1 185 0
  89 000c 0B4B     		ldr	r3, .L7
  90 000e 0022     		movs	r2, #0
  91 0010 1A61     		str	r2, [r3, #16]
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
  92              		.loc 1 187 0
  93 0012 0A4B     		ldr	r3, .L7
  94 0014 0122     		movs	r2, #1
  95 0016 5242     		rsbs	r2, r2, #0
  96 0018 DA60     		str	r2, [r3, #12]
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  97              		.loc 1 188 0
  98 001a 084B     		ldr	r3, .L7
  99 001c 0022     		movs	r2, #0
 100 001e DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccvHCEJn.s 			page 6


 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 101              		.loc 1 190 0
 102 0020 064B     		ldr	r3, .L7
 103 0022 0122     		movs	r2, #1
 104 0024 5242     		rsbs	r2, r2, #0
 105 0026 9A62     		str	r2, [r3, #40]
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 106              		.loc 1 191 0
 107 0028 044B     		ldr	r3, .L7
 108 002a 0022     		movs	r2, #0
 109 002c 9A62     		str	r2, [r3, #40]
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 110              		.loc 1 194 0
 111 002e FFF7FEFF 		bl	HAL_MspDeInit
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 112              		.loc 1 197 0
 113 0032 0023     		movs	r3, #0
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 114              		.loc 1 198 0
 115 0034 1800     		movs	r0, r3
 116 0036 BD46     		mov	sp, r7
 117              		@ sp needed
 118 0038 80BD     		pop	{r7, pc}
 119              	.L8:
 120 003a C046     		.align	2
 121              	.L7:
 122 003c 00100240 		.word	1073876992
 123              		.cfi_endproc
 124              	.LFE36:
 126              		.section	.text.HAL_MspInit,"ax",%progbits
 127              		.align	1
 128              		.weak	HAL_MspInit
 129              		.syntax unified
 130              		.code	16
 131              		.thumb_func
 132              		.fpu softvfp
 134              	HAL_MspInit:
 135              	.LFB37:
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initializes the MSP.
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 136              		.loc 1 205 0
 137              		.cfi_startproc
 138 0000 80B5     		push	{r7, lr}
 139              	.LCFI4:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
ARM GAS  /tmp/ccvHCEJn.s 			page 7


 143 0002 00AF     		add	r7, sp, #0
 144              	.LCFI5:
 145              		.cfi_def_cfa_register 7
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 146              		.loc 1 209 0
 147 0004 C046     		nop
 148 0006 BD46     		mov	sp, r7
 149              		@ sp needed
 150 0008 80BD     		pop	{r7, pc}
 151              		.cfi_endproc
 152              	.LFE37:
 154              		.section	.text.HAL_MspDeInit,"ax",%progbits
 155              		.align	1
 156              		.weak	HAL_MspDeInit
 157              		.syntax unified
 158              		.code	16
 159              		.thumb_func
 160              		.fpu softvfp
 162              	HAL_MspDeInit:
 163              	.LFB38:
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 164              		.loc 1 216 0
 165              		.cfi_startproc
 166 0000 80B5     		push	{r7, lr}
 167              	.LCFI6:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 00AF     		add	r7, sp, #0
 172              	.LCFI7:
 173              		.cfi_def_cfa_register 7
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 174              		.loc 1 220 0
 175 0004 C046     		nop
 176 0006 BD46     		mov	sp, r7
 177              		@ sp needed
 178 0008 80BD     		pop	{r7, pc}
 179              		.cfi_endproc
 180              	.LFE38:
 182              		.global	__aeabi_uidiv
 183              		.section	.text.HAL_InitTick,"ax",%progbits
 184              		.align	1
 185              		.weak	HAL_InitTick
 186              		.syntax unified
 187              		.code	16
ARM GAS  /tmp/ccvHCEJn.s 			page 8


 188              		.thumb_func
 189              		.fpu softvfp
 191              	HAL_InitTick:
 192              	.LFB39:
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 193              		.loc 1 239 0
 194              		.cfi_startproc
 195 0000 80B5     		push	{r7, lr}
 196              	.LCFI8:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 82B0     		sub	sp, sp, #8
 201              	.LCFI9:
 202              		.cfi_def_cfa_offset 16
 203 0004 00AF     		add	r7, sp, #0
 204              	.LCFI10:
 205              		.cfi_def_cfa_register 7
 206 0006 7860     		str	r0, [r7, #4]
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 207              		.loc 1 241 0
 208 0008 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 209 000c 0200     		movs	r2, r0
 210 000e FA23     		movs	r3, #250
 211 0010 9900     		lsls	r1, r3, #2
 212 0012 1000     		movs	r0, r2
 213 0014 FFF7FEFF 		bl	__aeabi_uidiv
 214              	.LVL0:
 215 0018 0300     		movs	r3, r0
 216 001a 1800     		movs	r0, r3
 217 001c FFF7FEFF 		bl	HAL_SYSTICK_Config
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick IRQ priority */
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0);
 218              		.loc 1 244 0
 219 0020 7968     		ldr	r1, [r7, #4]
 220 0022 0123     		movs	r3, #1
 221 0024 5B42     		rsbs	r3, r3, #0
ARM GAS  /tmp/ccvHCEJn.s 			page 9


 222 0026 0022     		movs	r2, #0
 223 0028 1800     		movs	r0, r3
 224 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 225              		.loc 1 247 0
 226 002e 0023     		movs	r3, #0
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 227              		.loc 1 248 0
 228 0030 1800     		movs	r0, r3
 229 0032 BD46     		mov	sp, r7
 230 0034 02B0     		add	sp, sp, #8
 231              		@ sp needed
 232 0036 80BD     		pop	{r7, pc}
 233              		.cfi_endproc
 234              	.LFE39:
 236              		.section	.text.HAL_IncTick,"ax",%progbits
 237              		.align	1
 238              		.weak	HAL_IncTick
 239              		.syntax unified
 240              		.code	16
 241              		.thumb_func
 242              		.fpu softvfp
 244              	HAL_IncTick:
 245              	.LFB40:
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
ARM GAS  /tmp/ccvHCEJn.s 			page 10


 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in Systick ISR.
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 246              		.loc 1 287 0
 247              		.cfi_startproc
 248 0000 80B5     		push	{r7, lr}
 249              	.LCFI11:
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 00AF     		add	r7, sp, #0
 254              	.LCFI12:
 255              		.cfi_def_cfa_register 7
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick++;
 256              		.loc 1 288 0
 257 0004 034B     		ldr	r3, .L14
 258 0006 1B68     		ldr	r3, [r3]
 259 0008 5A1C     		adds	r2, r3, #1
 260 000a 024B     		ldr	r3, .L14
 261 000c 1A60     		str	r2, [r3]
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 262              		.loc 1 289 0
 263 000e C046     		nop
 264 0010 BD46     		mov	sp, r7
 265              		@ sp needed
 266 0012 80BD     		pop	{r7, pc}
 267              	.L15:
 268              		.align	2
 269              	.L14:
 270 0014 00000000 		.word	uwTick
 271              		.cfi_endproc
 272              	.LFE40:
 274              		.section	.text.HAL_GetTick,"ax",%progbits
 275              		.align	1
 276              		.weak	HAL_GetTick
 277              		.syntax unified
 278              		.code	16
 279              		.thumb_func
 280              		.fpu softvfp
 282              	HAL_GetTick:
 283              	.LFB41:
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 284              		.loc 1 298 0
 285              		.cfi_startproc
ARM GAS  /tmp/ccvHCEJn.s 			page 11


 286 0000 80B5     		push	{r7, lr}
 287              	.LCFI13:
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291 0002 00AF     		add	r7, sp, #0
 292              	.LCFI14:
 293              		.cfi_def_cfa_register 7
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 294              		.loc 1 299 0
 295 0004 024B     		ldr	r3, .L18
 296 0006 1B68     		ldr	r3, [r3]
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 297              		.loc 1 300 0
 298 0008 1800     		movs	r0, r3
 299 000a BD46     		mov	sp, r7
 300              		@ sp needed
 301 000c 80BD     		pop	{r7, pc}
 302              	.L19:
 303 000e C046     		.align	2
 304              	.L18:
 305 0010 00000000 		.word	uwTick
 306              		.cfi_endproc
 307              	.LFE41:
 309              		.section	.text.HAL_Delay,"ax",%progbits
 310              		.align	1
 311              		.weak	HAL_Delay
 312              		.syntax unified
 313              		.code	16
 314              		.thumb_func
 315              		.fpu softvfp
 317              	HAL_Delay:
 318              	.LFB42:
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay: specifies the delay time length, in milliseconds.
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 319              		.loc 1 314 0
 320              		.cfi_startproc
 321 0000 80B5     		push	{r7, lr}
 322              	.LCFI15:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 7, -8
 325              		.cfi_offset 14, -4
 326 0002 84B0     		sub	sp, sp, #16
 327              	.LCFI16:
 328              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccvHCEJn.s 			page 12


 329 0004 00AF     		add	r7, sp, #0
 330              	.LCFI17:
 331              		.cfi_def_cfa_register 7
 332 0006 7860     		str	r0, [r7, #4]
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = 0;
 333              		.loc 1 315 0
 334 0008 0023     		movs	r3, #0
 335 000a FB60     		str	r3, [r7, #12]
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   tickstart = HAL_GetTick();
 336              		.loc 1 316 0
 337 000c FFF7FEFF 		bl	HAL_GetTick
 338 0010 0300     		movs	r3, r0
 339 0012 FB60     		str	r3, [r7, #12]
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < Delay)
 340              		.loc 1 317 0
 341 0014 C046     		nop
 342              	.L21:
 343              		.loc 1 317 0 is_stmt 0 discriminator 1
 344 0016 FFF7FEFF 		bl	HAL_GetTick
 345 001a 0200     		movs	r2, r0
 346 001c FB68     		ldr	r3, [r7, #12]
 347 001e D21A     		subs	r2, r2, r3
 348 0020 7B68     		ldr	r3, [r7, #4]
 349 0022 9A42     		cmp	r2, r3
 350 0024 F7D3     		bcc	.L21
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 351              		.loc 1 320 0 is_stmt 1
 352 0026 C046     		nop
 353 0028 BD46     		mov	sp, r7
 354 002a 04B0     		add	sp, sp, #16
 355              		@ sp needed
 356 002c 80BD     		pop	{r7, pc}
 357              		.cfi_endproc
 358              	.LFE42:
 360              		.section	.text.HAL_SuspendTick,"ax",%progbits
 361              		.align	1
 362              		.weak	HAL_SuspendTick
 363              		.syntax unified
 364              		.code	16
 365              		.thumb_func
 366              		.fpu softvfp
 368              	HAL_SuspendTick:
 369              	.LFB43:
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
ARM GAS  /tmp/ccvHCEJn.s 			page 13


 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 370              		.loc 1 334 0
 371              		.cfi_startproc
 372 0000 80B5     		push	{r7, lr}
 373              	.LCFI18:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 7, -8
 376              		.cfi_offset 14, -4
 377 0002 00AF     		add	r7, sp, #0
 378              	.LCFI19:
 379              		.cfi_def_cfa_register 7
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 380              		.loc 1 336 0
 381 0004 044B     		ldr	r3, .L23
 382 0006 044A     		ldr	r2, .L23
 383 0008 1268     		ldr	r2, [r2]
 384 000a 0221     		movs	r1, #2
 385 000c 8A43     		bics	r2, r1
 386 000e 1A60     		str	r2, [r3]
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 387              		.loc 1 337 0
 388 0010 C046     		nop
 389 0012 BD46     		mov	sp, r7
 390              		@ sp needed
 391 0014 80BD     		pop	{r7, pc}
 392              	.L24:
 393 0016 C046     		.align	2
 394              	.L23:
 395 0018 10E000E0 		.word	-536813552
 396              		.cfi_endproc
 397              	.LFE43:
 399              		.section	.text.HAL_ResumeTick,"ax",%progbits
 400              		.align	1
 401              		.weak	HAL_ResumeTick
 402              		.syntax unified
 403              		.code	16
 404              		.thumb_func
 405              		.fpu softvfp
 407              	HAL_ResumeTick:
 408              	.LFB44:
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 409              		.loc 1 350 0
 410              		.cfi_startproc
ARM GAS  /tmp/ccvHCEJn.s 			page 14


 411 0000 80B5     		push	{r7, lr}
 412              	.LCFI20:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 00AF     		add	r7, sp, #0
 417              	.LCFI21:
 418              		.cfi_def_cfa_register 7
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 419              		.loc 1 352 0
 420 0004 044B     		ldr	r3, .L26
 421 0006 044A     		ldr	r2, .L26
 422 0008 1268     		ldr	r2, [r2]
 423 000a 0221     		movs	r1, #2
 424 000c 0A43     		orrs	r2, r1
 425 000e 1A60     		str	r2, [r3]
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 426              		.loc 1 353 0
 427 0010 C046     		nop
 428 0012 BD46     		mov	sp, r7
 429              		@ sp needed
 430 0014 80BD     		pop	{r7, pc}
 431              	.L27:
 432 0016 C046     		.align	2
 433              	.L26:
 434 0018 10E000E0 		.word	-536813552
 435              		.cfi_endproc
 436              	.LFE44:
 438              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 439              		.align	1
 440              		.global	HAL_GetHalVersion
 441              		.syntax unified
 442              		.code	16
 443              		.thumb_func
 444              		.fpu softvfp
 446              	HAL_GetHalVersion:
 447              	.LFB45:
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 448              		.loc 1 360 0
 449              		.cfi_startproc
 450 0000 80B5     		push	{r7, lr}
 451              	.LCFI22:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 00AF     		add	r7, sp, #0
 456              	.LCFI23:
 457              		.cfi_def_cfa_register 7
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 458              		.loc 1 361 0
ARM GAS  /tmp/ccvHCEJn.s 			page 15


 459 0004 8223     		movs	r3, #130
 460 0006 5B04     		lsls	r3, r3, #17
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 461              		.loc 1 362 0
 462 0008 1800     		movs	r0, r3
 463 000a BD46     		mov	sp, r7
 464              		@ sp needed
 465 000c 80BD     		pop	{r7, pc}
 466              		.cfi_endproc
 467              	.LFE45:
 469              		.section	.text.HAL_GetREVID,"ax",%progbits
 470              		.align	1
 471              		.global	HAL_GetREVID
 472              		.syntax unified
 473              		.code	16
 474              		.thumb_func
 475              		.fpu softvfp
 477              	HAL_GetREVID:
 478              	.LFB46:
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 479              		.loc 1 369 0
 480              		.cfi_startproc
 481 0000 80B5     		push	{r7, lr}
 482              	.LCFI24:
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 00AF     		add	r7, sp, #0
 487              	.LCFI25:
 488              		.cfi_def_cfa_register 7
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16);
 489              		.loc 1 370 0
 490 0004 024B     		ldr	r3, .L32
 491 0006 1B68     		ldr	r3, [r3]
 492 0008 1B0C     		lsrs	r3, r3, #16
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 493              		.loc 1 371 0
 494 000a 1800     		movs	r0, r3
 495 000c BD46     		mov	sp, r7
 496              		@ sp needed
 497 000e 80BD     		pop	{r7, pc}
 498              	.L33:
 499              		.align	2
 500              	.L32:
 501 0010 00580140 		.word	1073829888
 502              		.cfi_endproc
 503              	.LFE46:
 505              		.section	.text.HAL_GetDEVID,"ax",%progbits
 506              		.align	1
 507              		.global	HAL_GetDEVID
 508              		.syntax unified
ARM GAS  /tmp/ccvHCEJn.s 			page 16


 509              		.code	16
 510              		.thumb_func
 511              		.fpu softvfp
 513              	HAL_GetDEVID:
 514              	.LFB47:
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 515              		.loc 1 378 0
 516              		.cfi_startproc
 517 0000 80B5     		push	{r7, lr}
 518              	.LCFI26:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 00AF     		add	r7, sp, #0
 523              	.LCFI27:
 524              		.cfi_def_cfa_register 7
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 525              		.loc 1 379 0
 526 0004 034B     		ldr	r3, .L36
 527 0006 1B68     		ldr	r3, [r3]
 528 0008 1B05     		lsls	r3, r3, #20
 529 000a 1B0D     		lsrs	r3, r3, #20
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 530              		.loc 1 380 0
 531 000c 1800     		movs	r0, r3
 532 000e BD46     		mov	sp, r7
 533              		@ sp needed
 534 0010 80BD     		pop	{r7, pc}
 535              	.L37:
 536 0012 C046     		.align	2
 537              	.L36:
 538 0014 00580140 		.word	1073829888
 539              		.cfi_endproc
 540              	.LFE47:
 542              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 543              		.align	1
 544              		.global	HAL_DBGMCU_EnableDBGStopMode
 545              		.syntax unified
 546              		.code	16
 547              		.thumb_func
 548              		.fpu softvfp
 550              	HAL_DBGMCU_EnableDBGStopMode:
 551              	.LFB48:
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode       
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 552              		.loc 1 387 0
ARM GAS  /tmp/ccvHCEJn.s 			page 17


 553              		.cfi_startproc
 554 0000 80B5     		push	{r7, lr}
 555              	.LCFI28:
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 00AF     		add	r7, sp, #0
 560              	.LCFI29:
 561              		.cfi_def_cfa_register 7
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 562              		.loc 1 388 0
 563 0004 044B     		ldr	r3, .L39
 564 0006 044A     		ldr	r2, .L39
 565 0008 5268     		ldr	r2, [r2, #4]
 566 000a 0221     		movs	r1, #2
 567 000c 0A43     		orrs	r2, r1
 568 000e 5A60     		str	r2, [r3, #4]
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 569              		.loc 1 389 0
 570 0010 C046     		nop
 571 0012 BD46     		mov	sp, r7
 572              		@ sp needed
 573 0014 80BD     		pop	{r7, pc}
 574              	.L40:
 575 0016 C046     		.align	2
 576              	.L39:
 577 0018 00580140 		.word	1073829888
 578              		.cfi_endproc
 579              	.LFE48:
 581              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 582              		.align	1
 583              		.global	HAL_DBGMCU_DisableDBGStopMode
 584              		.syntax unified
 585              		.code	16
 586              		.thumb_func
 587              		.fpu softvfp
 589              	HAL_DBGMCU_DisableDBGStopMode:
 590              	.LFB49:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode       
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 591              		.loc 1 396 0
 592              		.cfi_startproc
 593 0000 80B5     		push	{r7, lr}
 594              	.LCFI30:
 595              		.cfi_def_cfa_offset 8
 596              		.cfi_offset 7, -8
 597              		.cfi_offset 14, -4
 598 0002 00AF     		add	r7, sp, #0
 599              	.LCFI31:
 600              		.cfi_def_cfa_register 7
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 601              		.loc 1 397 0
ARM GAS  /tmp/ccvHCEJn.s 			page 18


 602 0004 044B     		ldr	r3, .L42
 603 0006 044A     		ldr	r2, .L42
 604 0008 5268     		ldr	r2, [r2, #4]
 605 000a 0221     		movs	r1, #2
 606 000c 8A43     		bics	r2, r1
 607 000e 5A60     		str	r2, [r3, #4]
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 608              		.loc 1 398 0
 609 0010 C046     		nop
 610 0012 BD46     		mov	sp, r7
 611              		@ sp needed
 612 0014 80BD     		pop	{r7, pc}
 613              	.L43:
 614 0016 C046     		.align	2
 615              	.L42:
 616 0018 00580140 		.word	1073829888
 617              		.cfi_endproc
 618              	.LFE49:
 620              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 621              		.align	1
 622              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 623              		.syntax unified
 624              		.code	16
 625              		.thumb_func
 626              		.fpu softvfp
 628              	HAL_DBGMCU_EnableDBGStandbyMode:
 629              	.LFB50:
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode       
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 630              		.loc 1 405 0
 631              		.cfi_startproc
 632 0000 80B5     		push	{r7, lr}
 633              	.LCFI32:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 00AF     		add	r7, sp, #0
 638              	.LCFI33:
 639              		.cfi_def_cfa_register 7
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 640              		.loc 1 406 0
 641 0004 044B     		ldr	r3, .L45
 642 0006 044A     		ldr	r2, .L45
 643 0008 5268     		ldr	r2, [r2, #4]
 644 000a 0421     		movs	r1, #4
 645 000c 0A43     		orrs	r2, r1
 646 000e 5A60     		str	r2, [r3, #4]
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 647              		.loc 1 407 0
 648 0010 C046     		nop
 649 0012 BD46     		mov	sp, r7
 650              		@ sp needed
ARM GAS  /tmp/ccvHCEJn.s 			page 19


 651 0014 80BD     		pop	{r7, pc}
 652              	.L46:
 653 0016 C046     		.align	2
 654              	.L45:
 655 0018 00580140 		.word	1073829888
 656              		.cfi_endproc
 657              	.LFE50:
 659              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 660              		.align	1
 661              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 662              		.syntax unified
 663              		.code	16
 664              		.thumb_func
 665              		.fpu softvfp
 667              	HAL_DBGMCU_DisableDBGStandbyMode:
 668              	.LFB51:
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode       
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 669              		.loc 1 414 0
 670              		.cfi_startproc
 671 0000 80B5     		push	{r7, lr}
 672              	.LCFI34:
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 7, -8
 675              		.cfi_offset 14, -4
 676 0002 00AF     		add	r7, sp, #0
 677              	.LCFI35:
 678              		.cfi_def_cfa_register 7
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 679              		.loc 1 415 0
 680 0004 044B     		ldr	r3, .L48
 681 0006 044A     		ldr	r2, .L48
 682 0008 5268     		ldr	r2, [r2, #4]
 683 000a 0421     		movs	r1, #4
 684 000c 8A43     		bics	r2, r1
 685 000e 5A60     		str	r2, [r3, #4]
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 686              		.loc 1 416 0
 687 0010 C046     		nop
 688 0012 BD46     		mov	sp, r7
 689              		@ sp needed
 690 0014 80BD     		pop	{r7, pc}
 691              	.L49:
 692 0016 C046     		.align	2
 693              	.L48:
 694 0018 00580140 		.word	1073829888
 695              		.cfi_endproc
 696              	.LFE51:
 698              		.text
 699              	.Letext0:
 700              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 701              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/ccvHCEJn.s 			page 20


 702              		.file 4 "Drivers/CMSIS/Include/core_cm0.h"
 703              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 704              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 705              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 706              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 707              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 708              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 709              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
ARM GAS  /tmp/ccvHCEJn.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal.c
                            *COM*:0000000000000004 uwTick
     /tmp/ccvHCEJn.s:17     .text.HAL_Init:0000000000000000 $t
     /tmp/ccvHCEJn.s:24     .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccvHCEJn.s:191    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccvHCEJn.s:134    .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccvHCEJn.s:59     .text.HAL_Init:0000000000000024 $d
     /tmp/ccvHCEJn.s:64     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccvHCEJn.s:71     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccvHCEJn.s:162    .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccvHCEJn.s:122    .text.HAL_DeInit:000000000000003c $d
     /tmp/ccvHCEJn.s:127    .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccvHCEJn.s:155    .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccvHCEJn.s:184    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccvHCEJn.s:237    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccvHCEJn.s:244    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccvHCEJn.s:270    .text.HAL_IncTick:0000000000000014 $d
     /tmp/ccvHCEJn.s:275    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccvHCEJn.s:282    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccvHCEJn.s:305    .text.HAL_GetTick:0000000000000010 $d
     /tmp/ccvHCEJn.s:310    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccvHCEJn.s:317    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccvHCEJn.s:361    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccvHCEJn.s:368    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccvHCEJn.s:395    .text.HAL_SuspendTick:0000000000000018 $d
     /tmp/ccvHCEJn.s:400    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccvHCEJn.s:407    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccvHCEJn.s:434    .text.HAL_ResumeTick:0000000000000018 $d
     /tmp/ccvHCEJn.s:439    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccvHCEJn.s:446    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccvHCEJn.s:470    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccvHCEJn.s:477    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccvHCEJn.s:501    .text.HAL_GetREVID:0000000000000010 $d
     /tmp/ccvHCEJn.s:506    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccvHCEJn.s:513    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccvHCEJn.s:538    .text.HAL_GetDEVID:0000000000000014 $d
     /tmp/ccvHCEJn.s:543    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccvHCEJn.s:550    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccvHCEJn.s:577    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000018 $d
     /tmp/ccvHCEJn.s:582    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccvHCEJn.s:589    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccvHCEJn.s:616    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000018 $d
     /tmp/ccvHCEJn.s:621    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccvHCEJn.s:628    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccvHCEJn.s:655    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000018 $d
     /tmp/ccvHCEJn.s:660    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccvHCEJn.s:667    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccvHCEJn.s:694    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000018 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
